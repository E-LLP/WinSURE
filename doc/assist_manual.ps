%!PS-Adobe-3.0
%%BoundingBox: (atend)
%%Pages: (atend)
%%PageOrder: (atend)
%%DocumentFonts: (atend)
%%Creator: Frame 4.0
%%DocumentData: Clean7Bit
%%EndComments
%%BeginProlog
%
% Frame ps_prolog 4.0, for use with Frame 4.0 products
% This ps_prolog file is Copyright (c) 1986-1993 Frame Technology
% Corporation.  All rights reserved.  This ps_prolog file may be
% freely copied and distributed in conjunction with documents created
% using FrameMaker, FrameBuilder and FrameViewer as long as this 
% copyright notice is preserved.
%
% Frame products normally print colors as their true color on a color printer
% or as shades of gray, based on luminance, on a black-and white printer. The
% following flag, if set to True, forces all non-white colors to print as pure
% black. This has no effect on bitmap images.
/FMPrintAllColorsAsBlack             false def
%
% Frame products can either set their own line screens or use a printer's 
% default settings. Three flags below control this separately for no 
% separations, spot separations and process separations. If a flag
% is true, then the default printer settings will not be changed. If it is
% false, Frame products will use their own settings from a table based on
% the printer's resolution.
/FMUseDefaultNoSeparationScreen      true  def
/FMUseDefaultSpotSeparationScreen    true  def
/FMUseDefaultProcessSeparationScreen false def
%
% For any given PostScript printer resolution, Frame products have two sets of 
% screen angles and frequencies for printing process separations, which are 
% recomended by Adobe. The following variable chooses the higher frequencies
% when set to true or the lower frequencies when set to false. This is only
% effective if the appropriate FMUseDefault...SeparationScreen flag is false.
/FMUseHighFrequencyScreens true def
%
% PostScript Level 2 printers contain an "Accurate Screens" feature which can
% improve process separation rendering at the expense of compute time. This 
% flag is ignored by PostScript Level 1 printers.
/FMUseAcccurateScreens true def
%
% The following PostScript procedure defines the spot function that Frame
% products will use for process separations. You may un-comment-out one of
% the alternative functions below, or use your own.
%
% Dot function
/FMSpotFunction {abs exch abs 2 copy add 1 gt 
		{1 sub dup mul exch 1 sub dup mul add 1 sub }
		{dup mul exch dup mul add 1 exch sub }ifelse } def
%
% Line function
% /FMSpotFunction { pop } def
%
% Elipse function
% /FMSpotFunction { dup 5 mul 8 div mul exch dup mul exch add 
%		sqrt 1 exch sub } def
%
%
/FMversion (4.0) def 
/FMLevel1 /languagelevel where {pop languagelevel} {1} ifelse 2 lt def
/FMPColor
	FMLevel1 {
		false
		/colorimage where {pop pop true} if
	} {
		true
	} ifelse
def
/FrameDict 400 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in PS 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} bind def
	} if
/FMshowpage /showpage load def
/FMquit /quit load def
/FMFAILURE { 
	dup = flush 
	FMshowpage 
	/Helvetica findfont 12 scalefont setfont
	72 200 moveto
	show FMshowpage 
	FMquit 
	} def 
/FMVERSION {
	FMversion ne {
		(Frame product version does not match ps_prolog!) FMFAILURE
		} if
	} def 
/FMBADEPSF { 
	(PostScript Lang. Ref. Man., 2nd Ed., H.2.4 says EPS must not call X              )
	dup dup (X) search pop exch pop exch pop length 
	4 -1 roll 
	putinterval 
	FMFAILURE
	} def
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
/concatprocs
	{
	/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array def
	newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx
}def
FrameDict begin 
/FMnone 0 def
/FMcyan 1 def
/FMmagenta 2 def
/FMyellow 3 def
/FMblack 4 def
/FMcustom 5 def
/FrameNegative false def 
/FrameSepIs FMnone def 
/FrameSepBlack 0 def
/FrameSepYellow 0 def
/FrameSepMagenta 0 def
/FrameSepCyan 0 def
/FrameSepRed 1 def
/FrameSepGreen 1 def
/FrameSepBlue 1 def
/FrameCurGray 1 def
/FrameCurPat null def
/FrameCurColors [ 0 0 0 1 0 0 0 ] def 
/FrameColorEpsilon .001 def	
/eqepsilon {		
	sub dup 0 lt {neg} if
	FrameColorEpsilon le
} bind def
/FrameCmpColorsCMYK { 
	2 copy 0 get exch 0 get eqepsilon {
		2 copy 1 get exch 1 get eqepsilon {
			2 copy 2 get exch 2 get eqepsilon {
				3 get exch 3 get eqepsilon
			} {pop pop false} ifelse
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/FrameCmpColorsRGB { 
	2 copy 4 get exch 0 get eqepsilon {
		2 copy 5 get exch 1 get eqepsilon {
			6 get exch 2 get eqepsilon
		}{pop pop false} ifelse
	} {pop pop false} ifelse
} bind def
/RGBtoCMYK { 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	1 exch sub 
	3 1 roll 
	3 copy 
	2 copy 
	le { pop } { exch pop } ifelse 
	2 copy 
	le { pop } { exch pop } ifelse 
	dup dup dup 
	6 1 roll 
	4 1 roll 
	7 1 roll 
	sub 
	6 1 roll 
	sub 
	5 1 roll 
	sub 
	4 1 roll 
} bind def
/CMYKtoRGB { 
	dup dup 4 -1 roll add 						  
	5 1 roll 3 -1 roll add 						  
	4 1 roll add 								  
	1 exch sub dup 0 lt {pop 0} if 3 1 roll 	  
	1 exch sub dup 0 lt {pop 0} if exch 	      
	1 exch sub dup 0 lt {pop 0} if exch	  		  
} bind def
/FrameSepInit {
	1.0 RealSetgray
} bind def
/FrameSetSepColor { 
	/FrameSepBlue exch def
	/FrameSepGreen exch def
	/FrameSepRed exch def
	/FrameSepBlack exch def
	/FrameSepYellow exch def
	/FrameSepMagenta exch def
	/FrameSepCyan exch def
	/FrameSepIs FMcustom def
	setCurrentScreen	
} bind def
/FrameSetCyan {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 1.0 def
	/FrameSepIs FMcyan def
	setCurrentScreen	
} bind def
 
/FrameSetMagenta {
	/FrameSepBlue 1.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 1.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMmagenta def
	setCurrentScreen
} bind def
 
/FrameSetYellow {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 1.0 def
	/FrameSepRed 1.0 def
	/FrameSepBlack 0.0 def
	/FrameSepYellow 1.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMyellow def
	setCurrentScreen
} bind def
 
/FrameSetBlack {
	/FrameSepBlue 0.0 def
	/FrameSepGreen 0.0 def
	/FrameSepRed 0.0 def
	/FrameSepBlack 1.0 def
	/FrameSepYellow 0.0 def
	/FrameSepMagenta 0.0 def
	/FrameSepCyan 0.0 def
	/FrameSepIs FMblack def
	setCurrentScreen
} bind def
 
/FrameNoSep { 
	/FrameSepIs FMnone def
	setCurrentScreen
} bind def
/FrameSetSepColors { 
	FrameDict begin
	[ exch 1 add 1 roll ]
	/FrameSepColors  
	exch def end
	} bind def
/FrameColorInSepListCMYK { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsCMYK 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/FrameColorInSepListRGB { 
	FrameSepColors {  
       		exch dup 3 -1 roll 
       		FrameCmpColorsRGB 
       		{ pop true exit } if
    	} forall 
	dup true ne {pop false} if
	} bind def
/RealSetgray /setgray load def
/RealSetrgbcolor /setrgbcolor load def
/RealSethsbcolor /sethsbcolor load def
end 
/setgray { 
	FrameDict begin
	FrameSepIs FMnone eq
		{ RealSetgray } 
		{ 
		FrameSepIs FMblack eq 
			{ RealSetgray } 
			{ FrameSepIs FMcustom eq 
			  FrameSepRed 0 eq and
			  FrameSepGreen 0 eq and
			  FrameSepBlue 0 eq and {
			  	RealSetgray
			  } {
				1 RealSetgray pop 
			  } ifelse
			} ifelse
		} ifelse
	end
} bind def
/setrgbcolor { 
	FrameDict begin
	FrameSepIs FMnone eq
	{  RealSetrgbcolor }
	{
		3 copy [ 4 1 roll ] 
		FrameColorInSepListRGB
		{
				FrameSepBlue eq exch 
			 	FrameSepGreen eq and exch 
			 	FrameSepRed eq and
			 	{ 0 } { 1 } ifelse
		}
		{
			FMPColor {
				RealSetrgbcolor
				currentcmykcolor
			} {
				RGBtoCMYK
			} ifelse
			FrameSepIs FMblack eq
			{1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		RealSetgray
	} 
	ifelse
	end
} bind def
/sethsbcolor {
	FrameDict begin
	FrameSepIs FMnone eq 
	{ RealSethsbcolor } 
	{
		RealSethsbcolor 
		currentrgbcolor  
		setrgbcolor 
	} 
	ifelse
	end
} bind def
FrameDict begin
/setcmykcolor where {
	pop /RealSetcmykcolor /setcmykcolor load def
} {
	/RealSetcmykcolor {
		4 1 roll
		3 { 3 index add 0 max 1 min 1 exch sub 3 1 roll} repeat 
		setrgbcolor pop
	} bind def
} ifelse
userdict /setcmykcolor { 
		FrameDict begin
		FrameSepIs FMnone eq
		{ RealSetcmykcolor } 
		{
			4 copy [ 5 1 roll ]
			FrameColorInSepListCMYK
			{
				FrameSepBlack eq exch 
				FrameSepYellow eq and exch 
				FrameSepMagenta eq and exch 
				FrameSepCyan eq and 
				{ 0 } { 1 } ifelse
			}
			{
				FrameSepIs FMblack eq
				{1.0 exch sub 4 1 roll pop pop pop} {
				FrameSepIs FMyellow eq
				{pop 1.0 exch sub 3 1 roll pop pop} {
				FrameSepIs FMmagenta eq
				{pop pop 1.0 exch sub exch pop } {
				FrameSepIs FMcyan eq
				{pop pop pop 1.0 exch sub } 
				{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
			} ifelse
			RealSetgray
		}
		ifelse
		end
	} bind put
FMLevel1 not { 
	
	/patProcDict 5 dict dup begin
		<0f1e3c78f0e1c387> { 3 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<0f87c3e1f0783c1e> { 3 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
		<8142241818244281> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke
											-1 -1 moveto 9 9 lineto stroke } bind def
		<03060c183060c081> { 1 setlinewidth -1 -1 moveto 9 9 lineto stroke 
											4 -4 moveto 12 4 lineto stroke
											-4 4 moveto 4 12 lineto stroke} bind def
		<8040201008040201> { 1 setlinewidth -1 9 moveto 9 -1 lineto stroke 
											-4 4 moveto 4 -4 lineto stroke
											4 12 moveto 12 4 lineto stroke} bind def
	end def
	/patDict 15 dict dup begin
		/PatternType 1 def		
		/PaintType 2 def		
		/TilingType 3 def		
		/BBox [ 0 0 8 8 ] def 	
		/XStep 8 def			
		/YStep 8 def			
		/PaintProc {
			begin
			patProcDict bstring known {
				patProcDict bstring get exec
			} {
				8 8 true [1 0 0 -1 0 8] bstring imagemask
			} ifelse
			end
		} bind def
	end def
} if
/combineColor {
    FrameSepIs FMnone eq
	{
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceCMYK]] setcolorspace
			FrameCurColors 0 4 getinterval aload pop FrameCurPat setcolor
		} {
			FrameCurColors 3 get 1.0 ge {
				FrameCurGray RealSetgray
			} {
				FMPColor graymode and {
					0 1 3 { 
						FrameCurColors exch get
						1 FrameCurGray sub mul
					} for
					RealSetcmykcolor
				} {
					4 1 6 {
						FrameCurColors exch get
						graymode {
							1 exch sub 1 FrameCurGray sub mul 1 exch sub
						} {
							1.0 lt {FrameCurGray} {1} ifelse
						} ifelse
					} for
					RealSetrgbcolor
				} ifelse
			} ifelse
		} ifelse
	} { 
		FrameCurColors 0 4 getinterval aload
		FrameColorInSepListCMYK {
			FrameSepBlack eq exch 
			FrameSepYellow eq and exch 
			FrameSepMagenta eq and exch 
			FrameSepCyan eq and
			FrameSepIs FMcustom eq and
			{ FrameCurGray } { 1 } ifelse
		} {
			FrameSepIs FMblack eq
			{FrameCurGray 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop} {
			FrameSepIs FMyellow eq
			{pop FrameCurGray 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop} {
			FrameSepIs FMmagenta eq
			{pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub exch pop } {
			FrameSepIs FMcyan eq
			{pop pop pop FrameCurGray 1.0 exch sub mul 1.0 exch sub } 
			{pop pop pop pop 1} ifelse } ifelse } ifelse } ifelse 
		} ifelse
		graymode FMLevel1 or not {
			
			[/Pattern [/DeviceGray]] setcolorspace
			FrameCurPat setcolor
		} { 
			graymode not FMLevel1 and {
				
				dup 1 lt {pop FrameCurGray} if
			} if
			RealSetgray
		} ifelse
	} ifelse
} bind def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
	
/freq dpi dup 72 div round dup 0 eq {pop 1} if 8 mul div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/dpiranges   [  2540    2400    1693     1270    1200     635      600      0      ] def
/CMLowFreqs  [ 100.402  94.8683 89.2289 100.402  94.8683  66.9349  63.2456 47.4342 ] def
/YLowFreqs   [  95.25   90.0    84.65    95.25   90.0     70.5556  66.6667 50.0    ] def
/KLowFreqs   [  89.8026 84.8528 79.8088  89.8026 84.8528  74.8355  70.7107 53.033  ] def
/CLowAngles  [  71.5651 71.5651 71.5651 71.5651  71.5651  71.5651  71.5651 71.5651 ] def
/MLowAngles  [  18.4349 18.4349 18.4349 18.4349  18.4349  18.4349  18.4349 18.4349 ] def
/YLowTDot    [  true    true    false    true    true     false    false   false   ] def
/CMHighFreqs [ 133.87  126.491 133.843  108.503 102.523  100.402   94.8683 63.2456 ] def
/YHighFreqs  [ 127.0   120.0   126.975  115.455 109.091   95.25    90.0    60.0    ] def
/KHighFreqs  [ 119.737 113.137 119.713  128.289 121.218   89.8026  84.8528 63.6395 ] def
/CHighAngles [  71.5651 71.5651 71.5651  70.0169 70.0169  71.5651  71.5651 71.5651 ] def
/MHighAngles [  18.4349 18.4349 18.4349  19.9831 19.9831  18.4349  18.4349 18.4349 ] def
/YHighTDot   [  false   false   true     false   false    true     true    false   ] def
/PatFreq     [	10.5833 10.0     9.4055  10.5833 10.0	  10.5833  10.0	   9.375   ] def
/screenIndex {
	0 1 dpiranges length 1 sub { dup dpiranges exch get 1 sub dpi le {exit} {pop} ifelse } for
} bind def
/getCyanScreen {
	FMUseHighFrequencyScreens { CHighAngles CMHighFreqs} {CLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getMagentaScreen {
	FMUseHighFrequencyScreens { MHighAngles CMHighFreqs } {MLowAngles CMLowFreqs} ifelse
		screenIndex dup 3 1 roll get 3 1 roll get /FMSpotFunction load
} bind def
/getYellowScreen {
	FMUseHighFrequencyScreens { YHighTDot YHighFreqs} { YLowTDot YLowFreqs } ifelse
		screenIndex dup 3 1 roll get 3 1 roll get { 3 div
			{2 { 1 add 2 div 3 mul dup floor sub 2 mul 1 sub exch} repeat
			FMSpotFunction } } {/FMSpotFunction load } ifelse
			0.0 exch
} bind def
/getBlackScreen  {
	FMUseHighFrequencyScreens { KHighFreqs } { KLowFreqs } ifelse
		screenIndex get 45.0 /FMSpotFunction load 
} bind def
/getSpotScreen {
	getBlackScreen
} bind def
/getCompositeScreen {
	getBlackScreen
} bind def
/FMSetScreen 
	FMLevel1 { /setscreen load 
	}{ {
		8 dict begin
		/HalftoneType 1 def
		/SpotFunction exch def
		/Angle exch def
		/Frequency exch def
		/AccurateScreens FMUseAcccurateScreens def
		currentdict end sethalftone
	} bind } ifelse
def
/setDefaultScreen {
	FMPColor {
		orgrxfer cvx orggxfer cvx orgbxfer cvx orgxfer cvx setcolortransfer
	}
	{
		orgxfer cvx settransfer
	} ifelse
	orgfreq organgle orgproc cvx setscreen
} bind def
/setCurrentScreen {
	FrameSepIs FMnone eq {
		FMUseDefaultNoSeparationScreen {
			setDefaultScreen
		} {
			getCompositeScreen FMSetScreen
		} ifelse
	} {
		FrameSepIs FMcustom eq {
			FMUseDefaultSpotSeparationScreen {
				setDefaultScreen
			} {
				getSpotScreen FMSetScreen
			} ifelse
		} {
			FMUseDefaultProcessSeparationScreen {
				setDefaultScreen
			} {
				FrameSepIs FMcyan eq {
					getCyanScreen FMSetScreen
				} {
					FrameSepIs FMmagenta eq {
						getMagentaScreen FMSetScreen
					} {
						FrameSepIs FMyellow eq {
							getYellowScreen FMSetScreen
						} {
							getBlackScreen FMSetScreen
						} ifelse
					} ifelse
				} ifelse
			} ifelse
		} ifelse
	} ifelse 
} bind def
end
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgrxfer FMLOCAL
	/orggxfer FMLOCAL
	/orgbxfer FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/orgrproc FMLOCAL
	/orggproc FMLOCAL
	/orgbproc FMLOCAL
	/organgle FMLOCAL
	/orgrangle FMLOCAL
	/orggangle FMLOCAL
	/orgbangle FMLOCAL
	/orgfreq FMLOCAL
	/orgrfreq FMLOCAL
	/orggfreq FMLOCAL
	/orgbfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/edown FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne /manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	0 ne /FrameNegative exch def 
	0 ne /edown exch def 
	/yscale exch def
	/xscale exch def
	FMLevel1 {
		manualfeed {setmanualfeed} if
		/FMdicttop countdictstack 1 add def 
		/FMoptop count def 
		setpapername 
		manualfeed {true} {papersize} ifelse 
		{manualpapersize} {false} ifelse 
		{desperatepapersize} {false} ifelse 
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		count -1 FMoptop {pop pop} for
		countdictstack -1 FMdicttop {pop end} for 
		}
		{{1 dict dup /PageSize [paperwidth paperheight]put setpagedevice}stopped
		{ (Can't select requested paper size for Frame print job!) FMFAILURE } if
		 {1 dict dup /ManualFeed manualfeed put setpagedevice } stopped pop }
	ifelse 
	
	FMPColor {
		currentcolorscreen
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
			cvlit /orgbproc exch def
				  /orgbangle exch def 
				  /orgbfreq exch def
			cvlit /orggproc exch def
				  /orggangle exch def 
				  /orggfreq exch def
			cvlit /orgrproc exch def
				  /orgrangle exch def 
				  /orgrfreq exch def
			currentcolortransfer 
			FrameNegative {
				1 1 4 { 
					pop { 1 exch sub } concatprocs 4 1 roll
				} for
				4 copy
				setcolortransfer
			} if
			cvlit /orgxfer exch def
			cvlit /orgbxfer exch def
			cvlit /orggxfer exch def
			cvlit /orgrxfer exch def
	} {
		currentscreen 
			cvlit /orgproc exch def
				  /organgle exch def 
				  /orgfreq exch def
				  
		currenttransfer 
		FrameNegative {
			{ 1 exch sub } concatprocs
			dup settransfer
		} if 
		cvlit /orgxfer exch def
	} ifelse
	end 
} def 
/pagesave FMLOCAL
/orgmatrix FMLOCAL
/landscape FMLOCAL
/pwid FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch dup /pwid exch def neg translate pop 
	}{
		pop /pwid exch def
	} ifelse
	edown { [-1 0 0 1 pwid 0] concat } if
	0 0 moveto paperwidth 0 lineto paperwidth paperheight lineto 
	0 paperheight lineto 0 0 lineto 1 setgray fill
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin dup
	array /fillvals exch def
	dict /patCache exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
% See Adobe's "PostScript Language Reference Manual, 2nd Edition", page 714.
% "...the following operators MUST NOT be used in an EPS file:" (emphasis ours)
	/banddevice {(banddevice) FMBADEPSF} def
	/clear {(clear) FMBADEPSF} def
	/cleardictstack {(cleardictstack) FMBADEPSF} def 
	/copypage {(copypage) FMBADEPSF} def
	/erasepage {(erasepage) FMBADEPSF} def
	/exitserver {(exitserver) FMBADEPSF} def
	/framedevice {(framedevice) FMBADEPSF} def
	/grestoreall {(grestoreall) FMBADEPSF} def
	/initclip {(initclip) FMBADEPSF} def
	/initgraphics {(initgraphics) FMBADEPSF} def
	/initmatrix {(initmatrix) FMBADEPSF} def
	/quit {(quit) FMBADEPSF} def
	/renderbands {(renderbands) FMBADEPSF} def
	/setglobal {(setglobal) FMBADEPSF} def
	/setpagedevice {(setpagedevice) FMBADEPSF} def
	/setshared {(setshared) FMBADEPSF} def
	/startjob {(startjob) FMBADEPSF} def
	/lettertray {(lettertray) FMBADEPSF} def
	/letter {(letter) FMBADEPSF} def
	/lettersmall {(lettersmall) FMBADEPSF} def
	/11x17tray {(11x17tray) FMBADEPSF} def
	/11x17 {(11x17) FMBADEPSF} def
	/ledgertray {(ledgertray) FMBADEPSF} def
	/ledger {(ledger) FMBADEPSF} def
	/legaltray {(legaltray) FMBADEPSF} def
	/legal {(legal) FMBADEPSF} def
	/statementtray {(statementtray) FMBADEPSF} def
	/statement {(statement) FMBADEPSF} def
	/executivetray {(executivetray) FMBADEPSF} def
	/executive {(executive) FMBADEPSF} def
	/a3tray {(a3tray) FMBADEPSF} def
	/a3 {(a3) FMBADEPSF} def
	/a4tray {(a4tray) FMBADEPSF} def
	/a4 {(a4) FMBADEPSF} def
	/a4small {(a4small) FMBADEPSF} def
	/b4tray {(b4tray) FMBADEPSF} def
	/b4 {(b4) FMBADEPSF} def
	/b5tray {(b5tray) FMBADEPSF} def
	/b5 {(b5) FMBADEPSF} def
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fw 2 div add fy fh 2 div add  translate
	rotate
	fw 2 div neg fh 2 div neg translate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count def 
	} bind def
/FMENDEPSF {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} bind def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} bind def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} bind def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} bind def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} bind def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped 
		end
		} {true} ifelse 
	} bind def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
FMPColor 
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	}
ifelse
/K { 
	FMPrintAllColorsAsBlack {
		dup 1 eq 2 index 1 eq and 3 index 1 eq and not
			{7 {pop} repeat 0 0 0 1 0 0 0} if
	} if 
	FrameCurColors astore 
	pop combineColor
} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setPatternMode {
	FMLevel1 {
		/bwidth  exch def
		/bpside  exch def
		/bstring exch def
		/onbits 0 def  /offbits 0 def
		freq sangle landscape {90 add} if 
			{/y exch def
			 /x exch def
			 /xindex x 1 add 2 div bpside mul cvi def
			 /yindex y 1 add 2 div bpside mul cvi def
			 bstring yindex bwidth mul xindex 8 idiv add get
			 1 7 xindex 8 mod sub bitshift and 0 ne FrameNegative {not} if
			 {/onbits  onbits  1 add def 1}
			 {/offbits offbits 1 add def 0}
			 ifelse
			}
			setscreen
		offbits offbits onbits add div FrameNegative {1.0 exch sub} if
		/FrameCurGray exch def
	} { 
		pop pop
		dup patCache exch known {
			patCache exch get
		} { 
			dup
			patDict /bstring 3 -1 roll put
			patDict 
			9 PatFreq screenIndex get div dup matrix scale
			makepattern
			dup 
			patCache 4 -1 roll 3 -1 roll put
		} ifelse
		/FrameCurGray 0 def
		/FrameCurPat exch def
	} ifelse
	/graymode false def
	combineColor
} bind def
/setGrayScaleMode {
	graymode not {
		/graymode true def
		FMLevel1 {
			setCurrentScreen
		} if
	} if
	/FrameCurGray exch def
	combineColor
} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	
/PFill {
	graymode FMLevel1 or not {
		gsave 1 setgray eofill grestore
	} if
} bind def
/PStroke {
	graymode FMLevel1 or not {
		gsave 1 setgray stroke grestore
	} if
	stroke
} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setPatternMode} 
	{setGrayScaleMode}
	ifelse
	} bind def
/V { 
	PFill gsave eofill grestore
	} bind def
/Vclip {
	clip
	} bind def
/Vstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/N { 
	PStroke
	} bind def
/Nclip {
	strokepath clip newpath
	} bind def
/Nstrk {
	currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
	/rad FMLOCAL
/rarc 
	{rad 
	 arcto
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	mark
	newpath
	{
	x1 y1 rad add moveto
	x1 y2 x2 y2 rarc
	x2 y2 x2 y1 rarc
	x2 y1 x1 y1 rarc
	x1 y1 x1 y2 rarc
	closepath
	} stopped {x1 y1 x2 y2 R} if 
	cleartomark
	} bind def
/RRR { 
	/rad exch def
	normalize /y4 exch def /x4 exch def
	normalize /y3 exch def /x3 exch def
	normalize /y2 exch def /x2 exch def
	normalize /y1 exch def /x1 exch def
	newpath
	normalize moveto 
	mark
	{
	x2 y2 x3 y3 rarc
	x3 y3 x4 y4 rarc
	x4 y4 x1 y1 rarc
	x1 y1 x2 y2 rarc
	closepath
	} stopped
	 {x1 y1 x2 y2 x3 y3 x4 y4 newpath moveto lineto lineto lineto closepath} if
	cleartomark
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	setCurrentScreen
} bind def
/CP { 
	grestore
	gsave
	Y 
	clip
	setCurrentScreen
} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	PFill fill
	grestore
	} bind def
/Gstrk {
	savematrix
    newpath
    2 index 2 div add exch 3 index 2 div sub exch 
    normalize 2 index 2 div sub exch 3 index 2 div add exch 
    translate
    scale 
    0.0 0.0 1.0 5 3 roll arc 
    restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
    } bind def
/Gclip { 
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	clip newpath
	restorematrix
	} bind def
/GG { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	rotate 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath
	PFill
	fill
	grestore
	} bind def
/GGclip { 
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	clip newpath
	restorematrix
	} bind def
/GGstrk { 
	savematrix
    newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath 
	restorematrix
    currentlinewidth exch setlinewidth PStroke setlinewidth
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/Aclip {
	newpath
	savematrix
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath 
	strokepath clip newpath
	restorematrix
} bind def
/Astrk {
	Gstrk
} bind def
/AA { 
	gsave
	savematrix
	newpath
	
	3 index 2 div add exch 4 index 2 div sub exch 
	
	normalize 3 index 2 div sub exch 4 index 2 div add exch
	translate 
	rotate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	PStroke
	grestore
	} bind def
/AAclip {
	savematrix
	newpath
    normalize translate 0.0 0.0 moveto 
    rotate 
    dnormalize scale 
    0.0 0.0 1.0 5 3 roll arc 
    closepath
	strokepath clip newpath
	restorematrix
} bind def
/AAstrk {
	GGstrk
} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 7 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/rip { 
	   
	  
	  bis ris copy pop 
      is
      0
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop 
	  ris gis copy pop 
	  dup is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
	  pop pop
	  gis bis copy pop 
	  dup add is exch 
	  
      cf cs readline pop 
      {       ic exch get exec 
              add 
              } forall 
      pop 
      
      } bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
      dup dup
      24 eq { pop pop 3 mul }
      { 8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
		 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
FMLevel1 {
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
%		/u 0 def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
}
{
/colorSetup2 {
	[ /Indexed /DeviceRGB 255 
		{dup red exch get 255 div 
		 exch dup green exch get 255 div 
		 exch blue exch get 255 div}
	] setcolorspace
} bind def
} ifelse
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch concatprocs settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/bitmapsave save def
	FMLevel1 {	
		colorsetup
		/is w d wbytes string def
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{cf is readhexstring pop} {is} {is} true 3 colorimage 
	} {
		colorSetup2
		/is w d wbytes string def
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {cf is readhexstring pop} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	FMLevel1 {	
		colorsetup
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		w h d [w 0 0 h neg 0 h] 
		{ip} {is} {is} true 3 colorimage
	} {
		colorSetup2
		/is im 0 lb getinterval def 
		ws 0 lb getinterval is copy pop 
		/cf currentfile def 
		7 dict dup begin
			/ImageType 1 def
			/Width w def
			/Height h def
			/ImageMatrix [w 0 0 h neg 0 h] def
			/DataSource {ip} bind def
			/BitsPerComponent d def
			/Decode [0 255] def
		end image	
	} ifelse
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
	/d 24 def
        gsave
 	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris} {gis} {bis} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
	/d 24 def
        gsave
	
	3 index 2 div add exch	
	4 index 2 div add exch	
	translate		
	rotate			
	1 index 2 div neg	
	1 index 2 div neg	
	translate		
	scale			
	/h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
        /bitmapsave save def 
        
	/is im 0 lb getinterval def	
	/ris im 0 w getinterval def	
	/gis im w w getinterval def	
	/bis im w 2 mul w getinterval def 
        ws 0 lb getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {w rip pop ris gis bis w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
		
		3 index 2 div add exch	
		4 index 2 div add exch	
		translate		
		rotate			
		1 index 2 div neg	
		1 index 2 div neg	
		translate		
		scale			
		/h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
/I { setdash } bind def
/J { [] 0 setdash } bind def
%%EndProlog
%%BeginSetup
(4.0) FMVERSION
1 1 0 0 612 792 0 1 53 FMDOCUMENT
0 0 /Palatino-Roman FMFONTDEFINE
1 0 /Palatino-Italic FMFONTDEFINE
2 0 /Times-Roman FMFONTDEFINE
3 0 /Times-Bold FMFONTDEFINE
4 0 /Courier FMFONTDEFINE
5 0 /Times-Italic FMFONTDEFINE
6 1 /Symbol FMFONTDEFINE
7 0 /Times-BoldItalic FMFONTDEFINE
8 0 /Courier-Bold FMFONTDEFINE
9 0 /ZapfChancery-MediumItalic FMFONTDEFINE
10 0 /Helvetica-Oblique FMFONTDEFINE
11 0 /Helvetica FMFONTDEFINE
12 0 /Helvetica-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 0.1 FMFILL
2 0.3 FMFILL
3 0.5 FMFILL
4 0.7 FMFILL
5 0.9 FMFILL
6 0.97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 0.9 FMFILL
18 0.7 FMFILL
19 0.5 FMFILL
20 0.3 FMFILL
21 0.1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
J
0 0 0 1 0 0 0 K
72 633 191 733 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 633 191 733 R
7 X
0 0 0 1 0 0 0 K
V
0 230 401 343 495 113 94 75 636 FMBEGINEPSF
%%BeginDocument: /home/working/Frame/meatball.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (meatballbw.ps)
%%CreationDate: (11/5/93) (11:57 AM)
%%BoundingBox: 230 401 343 495
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
%%EndSetup
0 A
u
0 O
0 0 0 1 k
1 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note: AI COREL DRAW Export
0 D
327.9931 448.4585 m
327.7418 445.9452 l
327.7418 443.6833 l
327.4905 441.4213 l
326.9878 439.1594 l
326.4851 437.1487 l
325.9825 434.8868 l
325.2285 432.8762 l
324.4745 430.6142 l
323.4692 428.6036 l
322.4639 426.8443 l
321.4586 424.8336 l
320.202 423.0743 l
318.9453 421.3151 l
317.4373 419.5557 l
315.9294 418.0478 l
314.4214 416.2885 l
312.9134 414.7805 l
311.4054 413.2725 l
309.6461 412.0158 l
307.8868 410.7592 l
306.1275 409.5026 l
304.1169 408.4973 l
302.1063 407.492 l
300.0956 406.4866 l
298.085 405.7326 l
296.0744 404.9787 l
293.8124 404.476 l
291.5505 403.9734 l
289.5399 403.4707 l
287.2779 403.2194 l
284.7646 402.968 l
282.5026 402.968 l
282.5026 402.968 l
280.2407 402.968 l
277.9787 403.2194 l
275.7168 403.4707 l
273.4548 403.9734 l
271.4442 404.476 l
269.1822 404.9787 l
266.9203 405.7326 l
264.9096 406.4866 l
262.899 407.492 l
260.8884 408.4973 l
259.1291 409.5026 l
257.3698 410.7592 l
255.6105 412.0158 l
253.5999 413.2725 l
252.0919 414.7805 l
250.5839 416.2885 l
249.0759 418.0478 l
247.568 419.5557 l
246.3113 421.3151 l
245.0547 423.0743 l
243.798 424.8336 l
242.7927 426.8443 l
241.7874 428.6036 l
240.7821 430.6142 l
240.0281 432.8762 l
239.2741 434.8868 l
238.5202 437.1487 l
238.0175 439.1594 l
237.5149 441.4213 l
237.2635 443.6833 l
237.2635 445.9452 l
237.0122 448.4585 l
237.0122 448.4585 l
237.2635 450.7205 l
237.2635 452.9824 l
237.5149 455.2444 l
238.0175 457.5064 l
238.5202 459.517 l
239.2741 461.779 l
240.0281 463.7896 l
240.7821 466.0515 l
241.7874 468.0622 l
242.7927 469.8215 l
243.798 471.8321 l
245.0547 473.5914 l
246.3113 475.3507 l
247.568 477.11 l
249.0759 478.6179 l
250.5839 480.3773 l
252.0919 481.8852 l
253.5999 483.3932 l
255.6105 484.6499 l
257.3698 485.9065 l
259.1291 487.1631 l
260.8884 488.1685 l
262.899 489.1738 l
264.9096 490.1791 l
266.9203 490.9331 l
269.1822 491.6871 l
271.4442 492.1897 l
273.4548 492.6923 l
275.7168 493.195 l
277.9787 493.4464 l
280.2407 493.6977 l
282.5026 493.6977 l
282.5026 493.6977 l
284.7646 493.6977 l
287.2779 493.4464 l
289.5399 493.195 l
291.5505 492.6923 l
293.8124 492.1897 l
296.0744 491.6871 l
298.085 490.9331 l
300.0956 490.1791 l
302.1063 489.1738 l
304.1169 488.1685 l
306.1275 487.1631 l
307.8868 485.9065 l
309.6461 484.6499 l
311.4054 483.3932 l
312.9134 481.8852 l
314.4214 480.3773 l
315.9294 478.6179 l
317.4373 477.11 l
318.9453 475.3507 l
320.202 473.5914 l
321.4586 471.8321 l
322.4639 469.8215 l
323.4692 468.0622 l
324.4745 466.0515 l
325.2285 463.7896 l
325.9825 461.779 l
326.4851 459.517 l
326.9878 457.5064 l
327.4905 455.2444 l
327.7418 452.9824 l
327.7418 450.7205 l
327.9931 448.4585 l
327.9931 448.4585 l
f
0 0 0 0.35 k
232.9909 434.6354 m
235.5042 435.8921 l
238.0175 437.1487 l
240.7821 438.4054 l
243.5467 439.4107 l
246.5626 440.416 l
249.5786 441.4213 l
252.5946 442.4266 l
255.8618 443.4319 l
259.1291 444.1859 l
262.6477 444.9399 l
265.915 445.9452 l
269.4336 446.6992 l
272.9522 447.7046 l
276.4708 448.4585 l
279.9894 449.4639 l
283.508 450.4692 l
287.0266 451.4745 l
290.5452 452.4798 l
294.0638 453.4851 l
297.5823 454.7417 l
300.8496 455.9984 l
304.3683 457.255 l
307.6355 458.763 l
310.9028 460.271 l
314.1701 462.0303 l
317.186 463.7896 l
320.202 465.8002 l
322.9666 467.8108 l
325.7312 470.0728 l
328.4958 472.3347 l
330.7577 475.0994 l
333.2711 477.6127 l
333.2711 477.6127 l
333.2711 477.864 l
333.5224 478.1153 l
333.7737 478.6179 l
334.2764 478.8693 l
334.5277 479.1206 l
334.779 479.3719 l
335.0303 479.8746 l
335.2817 480.3773 l
335.533 480.6286 l
335.7843 481.1313 l
336.0356 481.3826 l
336.287 481.8852 l
336.5383 482.3879 l
337.041 482.6392 l
337.2923 483.1419 l
337.5436 483.3932 l
337.795 483.8959 l
338.0463 484.3985 l
338.2976 484.6499 l
338.8003 485.1525 l
339.0516 485.6552 l
339.3029 485.9065 l
339.5543 486.4091 l
339.8056 486.6605 l
340.0569 487.1631 l
340.3082 487.4145 l
340.3082 487.9171 l
340.5596 488.1685 l
340.8109 488.4198 l
341.0622 488.9225 l
341.0622 489.1738 l
341.3135 489.4251 l
341.3135 489.4251 l
340.8109 488.6711 l
340.3082 487.9171 l
339.5543 487.1631 l
339.0516 486.4091 l
338.2976 485.6552 l
337.795 484.9012 l
337.041 484.1472 l
336.287 483.3932 l
335.533 482.6392 l
334.5277 481.8852 l
333.7737 481.1313 l
332.7684 480.3773 l
332.0144 479.6233 l
331.0091 478.8693 l
330.2551 478.1153 l
329.2498 477.3613 l
328.2445 476.8587 l
327.4905 476.1047 l
326.4851 475.3507 l
325.4798 474.848 l
324.4745 474.0941 l
323.7206 473.5914 l
322.7153 473.0887 l
321.7099 472.3347 l
320.7046 471.8321 l
319.9506 471.3294 l
318.9453 470.8268 l
317.94 470.3241 l
317.186 469.8215 l
316.1807 469.3188 l
315.4267 468.8161 l
314.6727 468.5648 l
314.6727 468.5648 l
312.9134 467.5595 l
311.1541 466.8055 l
309.6461 466.0515 l
308.1382 465.2976 l
306.3789 464.5436 l
304.8709 463.7896 l
303.3629 463.0356 l
301.6036 462.533 l
300.0956 461.779 l
298.5877 461.025 l
297.0797 460.5223 l
295.5717 460.0196 l
293.8124 459.2657 l
292.3045 458.763 l
290.7965 458.2603 l
289.2885 457.5064 l
287.7806 457.0037 l
286.0213 456.501 l
284.5133 455.9984 l
283.0053 455.4957 l
281.4974 454.9931 l
279.738 454.2391 l
278.2301 453.7364 l
276.4708 453.2338 l
274.9628 452.7311 l
273.2035 452.2285 l
271.6955 451.7258 l
269.9362 451.2231 l
268.1769 450.4692 l
266.4177 449.9665 l
264.6583 449.4639 l
262.899 448.7098 l
262.899 448.7098 l
261.6424 448.4585 l
260.3857 447.9559 l
259.1291 447.4532 l
257.8724 446.9505 l
256.8671 446.6992 l
255.6105 446.1965 l
254.3538 445.6939 l
253.3486 445.4426 l
252.3432 444.9399 l
251.3379 444.6886 l
250.3326 444.1859 l
249.3273 443.6833 l
248.3219 443.4319 l
247.568 442.9293 l
246.5626 442.6779 l
245.5573 442.1753 l
244.8033 441.6726 l
243.798 441.4213 l
243.044 440.9187 l
242.2901 440.416 l
241.2847 440.1647 l
240.5308 439.662 l
239.7768 439.1594 l
238.7715 438.6567 l
238.0175 438.154 l
237.2635 437.9027 l
236.2582 437.4001 l
235.7555 436.8974 l
235.0015 436.3948 l
233.9962 435.8921 l
233.2422 435.3894 l
232.4882 434.8868 l
232.4882 434.8868 l
232.9909 434.6354 l
232.9909 434.6354 l
f
0 0 0 0 k
283.2566 489.6764 m
283.2566 489.4251 l
283.0053 489.4251 l
283.0053 489.4251 l
283.0053 489.1738 l
283.0053 489.1738 l
282.754 489.1738 l
282.754 489.1738 l
282.754 489.1738 l
282.5026 489.1738 l
282.5026 489.4251 l
282.5026 489.4251 l
282.5026 489.4251 l
282.5026 489.6764 l
282.5026 489.6764 l
282.5026 489.6764 l
282.5026 489.6764 l
282.5026 489.9277 l
282.5026 489.9277 l
282.754 489.9277 l
282.754 489.9277 l
282.754 489.9277 l
283.0053 489.9277 l
283.0053 489.9277 l
283.0053 489.9277 l
283.0053 489.6764 l
283.2566 489.6764 l
283.2566 489.6764 l
283.2566 489.6764 l
f
285.7699 484.1472 m
285.7699 483.8959 l
285.7699 483.8959 l
285.5186 483.6445 l
285.5186 483.6445 l
285.5186 483.6445 l
285.2673 483.6445 l
285.2673 483.6445 l
285.2673 483.6445 l
285.2673 483.6445 l
285.0159 483.6445 l
285.0159 483.6445 l
285.0159 483.6445 l
284.7646 483.8959 l
284.7646 483.8959 l
284.7646 484.1472 l
284.7646 484.1472 l
284.7646 484.1472 l
284.7646 484.1472 l
285.0159 484.3985 l
285.0159 484.3985 l
285.0159 484.3985 l
285.0159 484.3985 l
285.2673 484.3985 l
285.2673 484.3985 l
285.2673 484.3985 l
285.5186 484.3985 l
285.5186 484.3985 l
285.5186 484.3985 l
285.5186 484.1472 l
285.7699 484.1472 l
285.7699 484.1472 l
285.7699 484.1472 l
f
292.3045 474.848 m
292.3045 474.848 l
292.3045 474.5967 l
292.3045 474.5967 l
292.3045 474.5967 l
292.0531 474.3454 l
292.0531 474.3454 l
292.0531 474.3454 l
292.0531 474.3454 l
291.8018 474.3454 l
291.8018 474.3454 l
291.8018 474.3454 l
291.5505 474.5967 l
291.5505 474.5967 l
291.5505 474.5967 l
291.5505 474.848 l
291.5505 474.848 l
291.5505 474.848 l
291.5505 475.0994 l
291.5505 475.0994 l
291.8018 475.0994 l
291.8018 475.0994 l
291.8018 475.3507 l
292.0531 475.3507 l
292.0531 475.3507 l
292.0531 475.3507 l
292.0531 475.0994 l
292.3045 475.0994 l
292.3045 475.0994 l
292.3045 475.0994 l
292.3045 474.848 l
292.3045 474.848 l
292.3045 474.848 l
f
281.7487 480.8799 m
281.7487 480.8799 l
281.7487 480.6286 l
281.4974 480.6286 l
281.4974 480.6286 l
281.4974 480.6286 l
281.246 480.6286 l
281.246 480.6286 l
281.246 480.6286 l
281.246 480.6286 l
280.9947 480.6286 l
280.9947 480.6286 l
280.9947 480.8799 l
280.9947 480.8799 l
280.9947 480.8799 l
280.9947 480.8799 l
280.9947 481.1313 l
280.9947 481.1313 l
281.246 481.1313 l
281.246 481.1313 l
281.246 481.3826 l
281.246 481.3826 l
281.4974 481.1313 l
281.4974 481.1313 l
281.4974 481.1313 l
281.7487 481.1313 l
281.7487 480.8799 l
281.7487 480.8799 l
281.7487 480.8799 l
f
285.5186 478.6179 m
285.5186 478.6179 l
285.5186 478.6179 l
285.5186 478.3666 l
285.5186 478.3666 l
285.2673 478.3666 l
285.2673 478.3666 l
285.2673 478.3666 l
285.2673 478.3666 l
285.0159 478.3666 l
285.0159 478.3666 l
285.0159 478.3666 l
285.0159 478.6179 l
285.0159 478.6179 l
285.0159 478.6179 l
285.0159 478.8693 l
285.0159 478.8693 l
285.0159 478.8693 l
285.0159 478.8693 l
285.2673 479.1206 l
285.2673 479.1206 l
285.2673 479.1206 l
285.2673 479.1206 l
285.5186 479.1206 l
285.5186 478.8693 l
285.5186 478.8693 l
285.5186 478.8693 l
285.5186 478.6179 l
285.5186 478.6179 l
f
280.492 484.6499 m
280.492 484.6499 l
280.492 484.3985 l
280.492 484.3985 l
280.2407 484.3985 l
280.2407 484.1472 l
280.2407 484.1472 l
279.9894 484.1472 l
279.9894 484.1472 l
279.9894 484.1472 l
279.9894 484.1472 l
279.738 484.3985 l
279.738 484.3985 l
279.738 484.3985 l
279.738 484.6499 l
279.738 484.6499 l
279.738 484.6499 l
279.738 484.6499 l
279.738 484.9012 l
279.738 484.9012 l
279.738 484.9012 l
279.738 484.9012 l
279.9894 485.1525 l
279.9894 485.1525 l
279.9894 485.1525 l
280.2407 485.1525 l
280.2407 485.1525 l
280.2407 484.9012 l
280.492 484.9012 l
280.492 484.9012 l
280.492 484.6499 l
280.492 484.6499 l
280.492 484.6499 l
f
274.4601 481.1313 m
274.4601 480.8799 l
274.4601 480.8799 l
274.4601 480.6286 l
274.4601 480.6286 l
274.2088 480.6286 l
274.2088 480.6286 l
274.2088 480.6286 l
273.9575 480.6286 l
273.9575 480.6286 l
273.9575 480.6286 l
273.9575 480.8799 l
273.7061 480.8799 l
273.7061 481.1313 l
273.7061 481.1313 l
273.7061 481.1313 l
273.9575 481.1313 l
273.9575 481.3826 l
273.9575 481.3826 l
273.9575 481.3826 l
274.2088 481.3826 l
274.2088 481.3826 l
274.2088 481.3826 l
274.2088 481.3826 l
274.4601 481.3826 l
274.4601 481.1313 l
274.4601 481.1313 l
274.4601 481.1313 l
274.4601 481.1313 l
f
275.7168 480.3773 m
275.4654 480.1259 l
275.4654 479.8746 l
275.4654 479.8746 l
275.4654 479.8746 l
275.2141 479.8746 l
275.2141 479.8746 l
275.2141 479.8746 l
275.2141 479.8746 l
274.9628 479.8746 l
274.9628 479.8746 l
274.9628 479.8746 l
274.9628 480.1259 l
274.9628 480.3773 l
274.9628 480.3773 l
274.9628 480.3773 l
274.9628 480.3773 l
274.9628 480.6286 l
274.9628 480.6286 l
275.2141 480.6286 l
275.2141 480.6286 l
275.2141 480.6286 l
275.2141 480.6286 l
275.4654 480.6286 l
275.4654 480.6286 l
275.4654 480.3773 l
275.4654 480.3773 l
275.7168 480.3773 l
275.7168 480.3773 l
f
276.7221 479.3719 m
276.7221 479.3719 l
276.7221 479.1206 l
276.4708 479.1206 l
276.4708 479.1206 l
276.4708 479.1206 l
276.2194 479.1206 l
276.2194 479.1206 l
276.2194 479.1206 l
276.2194 479.1206 l
275.9681 479.1206 l
275.9681 479.1206 l
275.9681 479.3719 l
275.9681 479.3719 l
275.9681 479.3719 l
275.9681 479.6233 l
275.9681 479.6233 l
275.9681 479.6233 l
276.2194 479.6233 l
276.2194 479.8746 l
276.2194 479.8746 l
276.2194 479.8746 l
276.4708 479.8746 l
276.4708 479.6233 l
276.4708 479.6233 l
276.7221 479.6233 l
276.7221 479.6233 l
276.7221 479.3719 l
276.7221 479.3719 l
f
274.9628 478.1153 m
274.9628 477.864 l
274.9628 477.864 l
274.9628 477.864 l
274.9628 477.6127 l
274.7115 477.6127 l
274.7115 477.6127 l
274.7115 477.6127 l
274.4601 477.6127 l
274.4601 477.6127 l
274.4601 477.864 l
274.4601 477.864 l
274.2088 477.864 l
274.2088 478.1153 l
274.2088 478.1153 l
274.2088 478.1153 l
274.4601 478.1153 l
274.4601 478.3666 l
274.4601 478.3666 l
274.4601 478.3666 l
274.7115 478.3666 l
274.7115 478.3666 l
274.7115 478.3666 l
274.7115 478.3666 l
274.9628 478.3666 l
274.9628 478.1153 l
274.9628 478.1153 l
274.9628 478.1153 l
274.9628 478.1153 l
f
266.4177 472.0834 m
266.4177 471.8321 l
266.4177 471.8321 l
266.1663 471.8321 l
266.1663 471.8321 l
266.1663 471.5808 l
265.915 471.5808 l
265.915 471.5808 l
265.915 471.5808 l
265.915 471.5808 l
265.6636 471.8321 l
265.6636 471.8321 l
265.6636 471.8321 l
265.6636 472.0834 l
265.6636 472.0834 l
265.6636 472.0834 l
265.6636 472.0834 l
265.6636 472.3347 l
265.915 472.3347 l
265.915 472.3347 l
265.915 472.3347 l
265.915 472.3347 l
266.1663 472.3347 l
266.1663 472.3347 l
266.1663 472.3347 l
266.4177 472.3347 l
266.4177 472.0834 l
266.4177 472.0834 l
266.4177 472.0834 l
f
267.9256 470.0728 m
267.9256 470.0728 l
267.9256 469.8215 l
267.9256 469.8215 l
267.6742 469.8215 l
267.6742 469.8215 l
267.6742 469.8215 l
267.6742 469.8215 l
267.4229 469.8215 l
267.4229 469.8215 l
267.4229 469.8215 l
267.1716 469.8215 l
267.1716 470.0728 l
267.1716 470.0728 l
267.1716 470.0728 l
267.1716 470.0728 l
267.1716 470.3241 l
267.4229 470.3241 l
267.4229 470.3241 l
267.4229 470.3241 l
267.6742 470.5754 l
267.6742 470.5754 l
267.6742 470.5754 l
267.6742 470.3241 l
267.9256 470.3241 l
267.9256 470.3241 l
267.9256 470.3241 l
267.9256 470.0728 l
267.9256 470.0728 l
f
266.6689 438.908 m
266.6689 438.908 l
266.6689 438.6567 l
266.6689 438.6567 l
266.6689 438.6567 l
266.4177 438.6567 l
266.4177 438.4054 l
266.4177 438.4054 l
266.1663 438.4054 l
266.1663 438.6567 l
266.1663 438.6567 l
266.1663 438.6567 l
265.915 438.6567 l
265.915 438.908 l
265.915 438.908 l
265.915 438.908 l
265.915 439.1594 l
266.1663 439.1594 l
266.1663 439.1594 l
266.1663 439.1594 l
266.4177 439.1594 l
266.4177 439.1594 l
266.4177 439.1594 l
266.4177 439.1594 l
266.6689 439.1594 l
266.6689 439.1594 l
266.6689 438.908 l
266.6689 438.908 l
266.6689 438.908 l
f
266.9203 430.1115 m
266.9203 430.1115 l
266.9203 430.1115 l
266.9203 429.8602 l
266.6689 429.8602 l
266.6689 429.8602 l
266.6689 429.8602 l
266.4177 429.8602 l
266.4177 429.8602 l
266.4177 429.8602 l
266.4177 429.8602 l
266.1663 429.8602 l
266.1663 429.8602 l
266.1663 430.1115 l
266.1663 430.1115 l
266.1663 430.1115 l
266.1663 430.1115 l
266.1663 430.3628 l
266.1663 430.3628 l
266.1663 430.3628 l
266.1663 430.6142 l
266.1663 430.6142 l
266.4177 430.6142 l
266.4177 430.6142 l
266.4177 430.6142 l
266.6689 430.6142 l
266.6689 430.6142 l
266.6689 430.6142 l
266.9203 430.6142 l
266.9203 430.3628 l
266.9203 430.3628 l
266.9203 430.1115 l
266.9203 430.1115 l
f
262.145 425.839 m
262.145 425.839 l
262.145 425.5876 l
261.8937 425.5876 l
261.8937 425.5876 l
261.8937 425.5876 l
261.6424 425.5876 l
261.6424 425.5876 l
261.6424 425.5876 l
261.6424 425.5876 l
261.3911 425.5876 l
261.3911 425.5876 l
261.3911 425.839 l
261.3911 425.839 l
261.3911 425.839 l
261.3911 425.839 l
261.3911 426.0903 l
261.3911 426.0903 l
261.6424 426.0903 l
261.6424 426.0903 l
261.6424 426.0903 l
261.6424 426.0903 l
261.8937 426.0903 l
261.8937 426.0903 l
261.8937 426.0903 l
262.145 426.0903 l
262.145 425.839 l
262.145 425.839 l
262.145 425.839 l
f
256.3645 424.0797 m
256.3645 424.0797 l
256.1132 423.8283 l
256.1132 423.8283 l
256.1132 423.8283 l
256.1132 423.577 l
255.8618 423.577 l
255.8618 423.577 l
255.8618 423.577 l
255.8618 423.577 l
255.6105 423.577 l
255.6105 423.8283 l
255.6105 423.8283 l
255.3592 423.8283 l
255.3592 423.8283 l
255.3592 424.0797 l
255.3592 424.0797 l
255.3592 424.0797 l
255.3592 424.331 l
255.3592 424.331 l
255.6105 424.331 l
255.6105 424.331 l
255.6105 424.5823 l
255.8618 424.5823 l
255.8618 424.5823 l
255.8618 424.5823 l
256.1132 424.331 l
256.1132 424.331 l
256.1132 424.331 l
256.1132 424.331 l
256.3645 424.0797 l
256.3645 424.0797 l
256.3645 424.0797 l
f
255.1078 428.1009 m
255.1078 427.8496 l
255.1078 427.8496 l
255.1078 427.8496 l
254.8565 427.5982 l
254.8565 427.5982 l
254.6052 427.5982 l
254.6052 427.5982 l
254.6052 427.5982 l
254.3538 427.5982 l
254.3538 427.5982 l
254.3538 427.5982 l
254.1025 427.8496 l
254.1025 427.8496 l
254.1025 427.8496 l
254.1025 428.1009 l
254.1025 428.1009 l
254.1025 428.1009 l
254.1025 428.1009 l
254.1025 428.3522 l
254.3538 428.3522 l
254.3538 428.3522 l
254.3538 428.3522 l
254.6052 428.3522 l
254.6052 428.3522 l
254.6052 428.3522 l
254.6052 428.3522 l
254.8565 428.3522 l
255.1078 428.3522 l
255.1078 428.1009 l
255.1078 428.1009 l
255.1078 428.1009 l
255.1078 428.1009 l
f
254.3538 425.5876 m
254.3538 425.3363 l
254.3538 425.3363 l
254.1025 425.3363 l
254.1025 425.085 l
254.1025 425.085 l
253.8512 425.085 l
253.8512 425.085 l
253.8512 425.085 l
253.8512 425.085 l
253.5999 425.3363 l
253.5999 425.3363 l
253.5999 425.3363 l
253.5999 425.5876 l
253.5999 425.5876 l
253.5999 425.5876 l
253.5999 425.5876 l
253.5999 425.839 l
253.8512 425.839 l
253.8512 425.839 l
253.8512 425.839 l
253.8512 425.839 l
254.1025 425.839 l
254.1025 425.839 l
254.1025 425.839 l
254.3538 425.5876 l
254.3538 425.5876 l
254.3538 425.5876 l
254.3538 425.5876 l
f
249.8299 427.5982 m
249.8299 427.5982 l
249.8299 427.3469 l
249.8299 427.3469 l
249.8299 427.3469 l
249.5786 427.3469 l
249.5786 427.3469 l
249.5786 427.3469 l
249.5786 427.3469 l
249.3273 427.3469 l
249.3273 427.3469 l
249.3273 427.3469 l
249.3273 427.5982 l
249.3273 427.5982 l
249.3273 427.5982 l
249.3273 427.5982 l
249.3273 427.8496 l
249.3273 427.8496 l
249.3273 427.8496 l
249.5786 427.8496 l
249.5786 427.8496 l
249.5786 427.8496 l
249.5786 427.8496 l
249.8299 427.8496 l
249.8299 427.8496 l
249.8299 427.8496 l
249.8299 427.5982 l
249.8299 427.5982 l
249.8299 427.5982 l
f
265.161 420.5611 m
265.161 420.5611 l
265.161 420.3097 l
265.161 420.3097 l
265.161 420.3097 l
264.9096 420.3097 l
264.9096 420.0584 l
264.9096 420.0584 l
264.9096 420.0584 l
264.6583 420.3097 l
264.6583 420.3097 l
264.6583 420.3097 l
264.6583 420.3097 l
264.407 420.5611 l
264.407 420.5611 l
264.407 420.5611 l
264.6583 420.8123 l
264.6583 420.8123 l
264.6583 420.8123 l
264.6583 420.8123 l
264.9096 420.8123 l
264.9096 420.8123 l
264.9096 420.8123 l
265.161 420.8123 l
265.161 420.8123 l
265.161 420.8123 l
265.161 420.5611 l
265.161 420.5611 l
265.161 420.5611 l
f
269.9362 423.8283 m
269.9362 423.8283 l
269.6849 423.577 l
269.6849 423.577 l
269.6849 423.577 l
269.6849 423.577 l
269.4336 423.577 l
269.4336 423.577 l
269.4336 423.577 l
269.1822 423.577 l
269.1822 423.577 l
269.1822 423.577 l
268.9309 423.577 l
268.9309 423.577 l
268.9309 423.8283 l
268.9309 423.8283 l
268.9309 423.8283 l
268.9309 424.0797 l
268.9309 424.0797 l
268.9309 424.0797 l
269.1822 424.331 l
269.1822 424.331 l
269.1822 424.331 l
269.4336 424.331 l
269.4336 424.331 l
269.4336 424.331 l
269.6849 424.331 l
269.6849 424.331 l
269.6849 424.0797 l
269.6849 424.0797 l
269.6849 424.0797 l
269.9362 423.8283 l
269.9362 423.8283 l
f
270.4389 419.5557 m
270.4389 419.5557 l
270.1876 419.3044 l
270.1876 419.3044 l
270.1876 419.3044 l
270.1876 419.3044 l
269.9362 419.3044 l
269.9362 419.3044 l
269.9362 419.3044 l
269.6849 419.3044 l
269.6849 419.3044 l
269.6849 419.3044 l
269.6849 419.5557 l
269.6849 419.5557 l
269.6849 419.5557 l
269.6849 419.5557 l
269.6849 419.8071 l
269.6849 419.8071 l
269.6849 419.8071 l
269.9362 419.8071 l
269.9362 420.0584 l
269.9362 420.0584 l
269.9362 419.8071 l
270.1876 419.8071 l
270.1876 419.8071 l
270.1876 419.8071 l
270.1876 419.5557 l
270.4389 419.5557 l
270.4389 419.5557 l
f
289.2885 423.577 m
289.2885 423.577 l
289.2885 423.577 l
289.2885 423.3257 l
289.2885 423.3257 l
289.0372 423.3257 l
289.0372 423.3257 l
289.0372 423.3257 l
288.7859 423.3257 l
288.7859 423.3257 l
288.7859 423.3257 l
288.7859 423.577 l
288.5345 423.577 l
288.5345 423.577 l
288.5345 423.577 l
288.5345 423.8283 l
288.7859 423.8283 l
288.7859 423.8283 l
288.7859 424.0797 l
288.7859 424.0797 l
289.0372 424.0797 l
289.0372 424.0797 l
289.0372 424.0797 l
289.2885 424.0797 l
289.2885 423.8283 l
289.2885 423.8283 l
289.2885 423.8283 l
289.2885 423.577 l
289.2885 423.577 l
f
280.492 420.5611 m
280.492 420.5611 l
280.492 420.3097 l
280.492 420.3097 l
280.2407 420.3097 l
280.2407 420.3097 l
280.2407 420.3097 l
280.2407 420.3097 l
279.9894 420.3097 l
279.9894 420.3097 l
279.9894 420.3097 l
279.738 420.3097 l
279.738 420.5611 l
279.738 420.5611 l
279.738 420.5611 l
279.738 420.5611 l
279.738 420.8123 l
279.9894 420.8123 l
279.9894 420.8123 l
279.9894 420.8123 l
280.2407 421.0637 l
280.2407 421.0637 l
280.2407 421.0637 l
280.2407 420.8123 l
280.492 420.8123 l
280.492 420.8123 l
280.492 420.8123 l
280.492 420.5611 l
280.492 420.5611 l
f
304.3683 416.0371 m
304.3683 415.7858 l
304.1169 415.7858 l
304.1169 415.7858 l
304.1169 415.7858 l
304.1169 415.5345 l
303.8656 415.5345 l
303.8656 415.5345 l
303.8656 415.5345 l
303.6143 415.7858 l
303.6143 415.7858 l
303.6143 415.7858 l
303.6143 415.7858 l
303.6143 416.0371 l
303.6143 416.0371 l
303.6143 416.0371 l
303.6143 416.2885 l
303.6143 416.2885 l
303.6143 416.2885 l
303.8656 416.2885 l
303.8656 416.2885 l
303.8656 416.2885 l
304.1169 416.2885 l
304.1169 416.2885 l
304.1169 416.2885 l
304.1169 416.2885 l
304.3683 416.0371 l
304.3683 416.0371 l
304.3683 416.0371 l
f
306.1275 433.6301 m
306.1275 433.6301 l
306.1275 433.3788 l
306.1275 433.3788 l
306.1275 433.3788 l
305.8762 433.1275 l
305.8762 433.1275 l
305.8762 433.1275 l
305.8762 433.1275 l
305.6249 433.1275 l
305.6249 433.1275 l
305.3736 433.3788 l
305.3736 433.3788 l
305.3736 433.3788 l
305.3736 433.3788 l
305.3736 433.6301 l
305.3736 433.6301 l
305.3736 433.6301 l
305.3736 433.8815 l
305.3736 433.8815 l
305.3736 433.8815 l
305.6249 433.8815 l
305.6249 434.1328 l
305.8762 434.1328 l
305.8762 434.1328 l
305.8762 434.1328 l
305.8762 433.8815 l
306.1275 433.8815 l
306.1275 433.8815 l
306.1275 433.8815 l
306.1275 433.6301 l
306.1275 433.6301 l
306.1275 433.6301 l
f
302.3576 431.1168 m
302.3576 430.8655 l
302.3576 430.8655 l
302.3576 430.8655 l
302.3576 430.6142 l
302.1063 430.6142 l
302.1063 430.6142 l
302.1063 430.6142 l
302.1063 430.6142 l
301.855 430.6142 l
301.855 430.8655 l
301.855 430.8655 l
301.855 430.8655 l
301.6036 431.1168 l
301.6036 431.1168 l
301.6036 431.1168 l
301.855 431.1168 l
301.855 431.3682 l
301.855 431.3682 l
301.855 431.3682 l
302.1063 431.3682 l
302.1063 431.3682 l
302.1063 431.3682 l
302.3576 431.3682 l
302.3576 431.3682 l
302.3576 431.1168 l
302.3576 431.1168 l
302.3576 431.1168 l
302.3576 431.1168 l
f
306.1275 430.3628 m
306.1275 430.3628 l
306.1275 430.1115 l
306.1275 430.1115 l
305.8762 430.1115 l
305.8762 429.8602 l
305.8762 429.8602 l
305.6249 429.8602 l
305.6249 429.8602 l
305.6249 429.8602 l
305.3736 429.8602 l
305.3736 429.8602 l
305.3736 430.1115 l
305.3736 430.1115 l
305.3736 430.1115 l
305.1222 430.3628 l
305.1222 430.3628 l
305.1222 430.3628 l
305.3736 430.6142 l
305.3736 430.6142 l
305.3736 430.6142 l
305.3736 430.6142 l
305.6249 430.8655 l
305.6249 430.8655 l
305.6249 430.8655 l
305.8762 430.8655 l
305.8762 430.6142 l
305.8762 430.6142 l
306.1275 430.6142 l
306.1275 430.6142 l
306.1275 430.3628 l
306.1275 430.3628 l
306.1275 430.3628 l
f
302.3576 425.839 m
302.3576 425.839 l
302.3576 425.839 l
302.3576 425.5876 l
302.3576 425.5876 l
302.1063 425.5876 l
302.1063 425.5876 l
302.1063 425.5876 l
302.1063 425.5876 l
301.855 425.5876 l
301.855 425.5876 l
301.855 425.839 l
301.855 425.839 l
301.6036 425.839 l
301.6036 425.839 l
301.6036 426.0903 l
301.855 426.0903 l
301.855 426.0903 l
301.855 426.3416 l
301.855 426.3416 l
302.1063 426.3416 l
302.1063 426.3416 l
302.1063 426.3416 l
302.3576 426.3416 l
302.3576 426.0903 l
302.3576 426.0903 l
302.3576 426.0903 l
302.3576 425.839 l
302.3576 425.839 l
f
311.6568 436.1434 m
311.6568 435.8921 l
311.6568 435.8921 l
311.6568 435.8921 l
311.6568 435.6408 l
311.4054 435.6408 l
311.4054 435.6408 l
311.4054 435.6408 l
311.4054 435.6408 l
311.1541 435.6408 l
311.1541 435.8921 l
311.1541 435.8921 l
311.1541 435.8921 l
311.1541 436.1434 l
311.1541 436.1434 l
311.1541 436.1434 l
311.1541 436.1434 l
311.1541 436.3948 l
311.1541 436.3948 l
311.4054 436.3948 l
311.4054 436.3948 l
311.4054 436.3948 l
311.4054 436.3948 l
311.6568 436.3948 l
311.6568 436.3948 l
311.6568 436.1434 l
311.6568 436.1434 l
311.6568 436.1434 l
311.6568 436.1434 l
f
312.6621 433.8815 m
312.6621 433.6301 l
312.6621 433.6301 l
312.6621 433.6301 l
312.4108 433.3788 l
312.4108 433.3788 l
312.4108 433.3788 l
312.1594 433.3788 l
312.1594 433.3788 l
312.1594 433.3788 l
312.1594 433.3788 l
311.9081 433.3788 l
311.9081 433.6301 l
311.9081 433.6301 l
311.9081 433.6301 l
311.9081 433.8815 l
311.9081 433.8815 l
311.9081 433.8815 l
311.9081 434.1328 l
311.9081 434.1328 l
311.9081 434.1328 l
311.9081 434.1328 l
312.1594 434.1328 l
312.1594 434.3842 l
312.1594 434.3842 l
312.4108 434.3842 l
312.4108 434.1328 l
312.4108 434.1328 l
312.6621 434.1328 l
312.6621 434.1328 l
312.6621 433.8815 l
312.6621 433.8815 l
312.6621 433.8815 l
f
319.1967 431.1168 m
319.1967 430.8655 l
319.1967 430.8655 l
318.9453 430.8655 l
318.9453 430.6142 l
318.9453 430.6142 l
318.694 430.6142 l
318.694 430.6142 l
318.694 430.6142 l
318.694 430.6142 l
318.4427 430.6142 l
318.4427 430.6142 l
318.4427 430.8655 l
318.1913 430.8655 l
318.1913 430.8655 l
318.1913 431.1168 l
318.1913 431.1168 l
318.1913 431.1168 l
318.1913 431.3682 l
318.4427 431.3682 l
318.4427 431.3682 l
318.4427 431.3682 l
318.4427 431.3682 l
318.694 431.6195 l
318.694 431.6195 l
318.694 431.3682 l
318.9453 431.3682 l
318.9453 431.3682 l
318.9453 431.3682 l
318.9453 431.3682 l
319.1967 431.1168 l
319.1967 431.1168 l
319.1967 431.1168 l
f
312.6621 426.3416 m
312.6621 426.3416 l
312.4108 426.0903 l
312.4108 426.0903 l
312.4108 426.0903 l
312.4108 426.0903 l
312.1594 426.0903 l
312.1594 426.0903 l
312.1594 426.0903 l
311.9081 426.0903 l
311.9081 426.0903 l
311.9081 426.0903 l
311.9081 426.3416 l
311.9081 426.3416 l
311.9081 426.3416 l
311.9081 426.3416 l
311.9081 426.593 l
311.9081 426.593 l
311.9081 426.593 l
312.1594 426.593 l
312.1594 426.593 l
312.1594 426.593 l
312.4108 426.593 l
312.4108 426.593 l
312.4108 426.593 l
312.4108 426.593 l
312.6621 426.3416 l
312.6621 426.3416 l
312.6621 426.3416 l
f
316.6834 430.1115 m
316.6834 430.1115 l
316.6834 430.1115 l
316.432 429.8602 l
316.432 429.8602 l
316.432 429.8602 l
316.1807 429.8602 l
316.1807 429.8602 l
316.1807 429.8602 l
316.1807 429.8602 l
315.9294 429.8602 l
315.9294 429.8602 l
315.9294 430.1115 l
315.9294 430.1115 l
315.9294 430.1115 l
315.9294 430.3628 l
315.9294 430.3628 l
315.9294 430.3628 l
316.1807 430.3628 l
316.1807 430.6142 l
316.1807 430.6142 l
316.1807 430.6142 l
316.432 430.6142 l
316.432 430.6142 l
316.432 430.3628 l
316.6834 430.3628 l
316.6834 430.3628 l
316.6834 430.1115 l
316.6834 430.1115 l
f
315.9294 424.331 m
315.9294 424.0797 l
315.9294 424.0797 l
315.6781 424.0797 l
315.6781 423.8283 l
315.6781 423.8283 l
315.4267 423.8283 l
315.4267 423.8283 l
315.4267 423.8283 l
315.4267 423.8283 l
315.1754 424.0797 l
315.1754 424.0797 l
315.1754 424.0797 l
315.1754 424.331 l
315.1754 424.331 l
315.1754 424.331 l
315.1754 424.331 l
315.1754 424.5823 l
315.4267 424.5823 l
315.4267 424.5823 l
315.4267 424.5823 l
315.4267 424.5823 l
315.6781 424.5823 l
315.6781 424.5823 l
315.6781 424.5823 l
315.9294 424.331 l
315.9294 424.331 l
315.9294 424.331 l
315.9294 424.331 l
f
317.6887 434.1328 m
317.6887 434.1328 l
317.4373 434.1328 l
317.4373 433.8815 l
317.4373 433.8815 l
317.4373 433.8815 l
317.186 433.6301 l
317.186 433.6301 l
316.9347 433.6301 l
316.9347 433.6301 l
316.9347 433.6301 l
316.9347 433.6301 l
316.6834 433.8815 l
316.6834 433.8815 l
316.6834 433.8815 l
316.432 434.1328 l
316.432 434.1328 l
316.432 434.1328 l
316.432 434.1328 l
316.432 434.3842 l
316.432 434.3842 l
316.6834 434.6354 l
316.6834 434.6354 l
316.6834 434.6354 l
316.9347 434.6354 l
316.9347 434.8868 l
316.9347 434.8868 l
316.9347 434.8868 l
317.186 434.8868 l
317.186 434.6354 l
317.4373 434.6354 l
317.4373 434.6354 l
317.4373 434.6354 l
317.4373 434.3842 l
317.6887 434.3842 l
317.6887 434.1328 l
317.6887 434.1328 l
f
313.6674 424.331 m
313.6674 424.0797 l
313.6674 424.0797 l
313.6674 424.0797 l
313.4161 423.8283 l
313.4161 423.8283 l
313.4161 423.8283 l
313.1648 423.8283 l
313.1648 423.8283 l
313.1648 423.8283 l
312.9134 423.8283 l
312.9134 423.8283 l
312.6621 423.8283 l
312.6621 423.8283 l
312.6621 424.0797 l
312.6621 424.0797 l
312.6621 424.0797 l
312.6621 424.331 l
312.6621 424.331 l
312.6621 424.331 l
312.6621 424.5823 l
312.6621 424.5823 l
312.6621 424.5823 l
312.6621 424.8336 l
312.9134 424.8336 l
312.9134 424.8336 l
313.1648 424.8336 l
313.1648 424.8336 l
313.1648 424.8336 l
313.4161 424.8336 l
313.4161 424.8336 l
313.4161 424.5823 l
313.6674 424.5823 l
313.6674 424.5823 l
313.6674 424.331 l
313.6674 424.331 l
313.6674 424.331 l
f
271.4442 471.3294 m
271.1929 471.0781 l
271.1929 471.0781 l
271.1929 470.8268 l
271.1929 470.8268 l
271.1929 470.8268 l
270.9415 470.8268 l
270.9415 470.8268 l
270.6902 470.8268 l
270.6902 470.8268 l
270.4389 470.8268 l
270.4389 470.8268 l
270.4389 470.8268 l
270.1876 470.8268 l
270.1876 470.8268 l
270.1876 471.0781 l
270.1876 471.0781 l
270.1876 471.3294 l
270.1876 471.3294 l
270.1876 471.3294 l
270.1876 471.5808 l
270.1876 471.5808 l
270.1876 471.5808 l
270.4389 471.8321 l
270.4389 471.8321 l
270.4389 471.8321 l
270.6902 471.8321 l
270.6902 471.8321 l
270.9415 471.8321 l
270.9415 471.8321 l
271.1929 471.8321 l
271.1929 471.5808 l
271.1929 471.5808 l
271.1929 471.5808 l
271.1929 471.3294 l
271.4442 471.3294 l
271.4442 471.3294 l
f
292.3045 485.1525 m
292.3045 484.9012 l
292.3045 484.9012 l
292.3045 484.6499 l
292.3045 484.6499 l
292.0531 484.6499 l
292.0531 484.6499 l
292.0531 484.3985 l
291.8018 484.3985 l
291.8018 484.3985 l
291.8018 484.3985 l
291.5505 484.6499 l
291.5505 484.6499 l
291.5505 484.6499 l
291.2992 484.6499 l
291.2992 484.9012 l
291.2992 484.9012 l
291.2992 485.1525 l
291.2992 485.1525 l
291.2992 485.1525 l
291.2992 485.1525 l
291.2992 485.4038 l
291.5505 485.4038 l
291.5505 485.4038 l
291.5505 485.6552 l
291.8018 485.6552 l
291.8018 485.6552 l
291.8018 485.6552 l
292.0531 485.6552 l
292.0531 485.6552 l
292.0531 485.4038 l
292.3045 485.4038 l
292.3045 485.4038 l
292.3045 485.1525 l
292.3045 485.1525 l
292.3045 485.1525 l
292.3045 485.1525 l
f
266.6689 415.0318 m
266.6689 415.0318 l
266.6689 415.0318 l
266.6689 414.7805 l
266.4177 414.7805 l
266.4177 414.7805 l
266.4177 414.5292 l
266.1663 414.5292 l
266.1663 414.5292 l
266.1663 414.5292 l
265.915 414.5292 l
265.915 414.5292 l
265.915 414.7805 l
265.6636 414.7805 l
265.6636 414.7805 l
265.6636 415.0318 l
265.6636 415.0318 l
265.6636 415.0318 l
265.6636 415.0318 l
265.6636 415.2832 l
265.6636 415.2832 l
265.6636 415.5345 l
265.6636 415.5345 l
265.915 415.5345 l
265.915 415.5345 l
265.915 415.7858 l
266.1663 415.7858 l
266.1663 415.7858 l
266.1663 415.7858 l
266.4177 415.5345 l
266.4177 415.5345 l
266.4177 415.5345 l
266.6689 415.5345 l
266.6689 415.2832 l
266.6689 415.2832 l
266.6689 415.0318 l
266.6689 415.0318 l
f
299.593 450.4692 m
300.5983 448.7098 l
301.101 448.9612 l
300.0956 450.9718 l
299.593 450.4692 l
299.593 450.4692 l
f
0 0 0 0.35 k
238.2688 438.4054 m
238.0175 438.4054 l
237.7662 438.154 l
237.5149 438.154 l
237.2635 437.9027 l
237.0122 437.9027 l
236.7608 437.6514 l
236.7608 437.6514 l
236.5095 437.6514 l
236.2582 437.4001 l
236.0069 437.4001 l
236.0069 437.1487 l
235.7555 437.1487 l
235.5042 436.8974 l
235.2529 436.8974 l
235.0015 436.8974 l
235.0015 436.6461 l
234.7502 436.6461 l
234.4989 436.3948 l
234.2476 436.3948 l
233.9962 436.1434 l
233.9962 436.1434 l
233.7449 435.8921 l
233.4935 435.8921 l
233.2422 435.8921 l
233.2422 435.6408 l
232.9909 435.6408 l
232.7396 435.3894 l
232.4882 435.3894 l
232.4882 435.1381 l
232.2369 435.1381 l
231.9856 435.1381 l
231.9856 434.8868 l
231.9856 434.8868 l
232.9909 434.6354 l
232.9909 434.6354 l
233.2422 434.6354 l
233.2422 434.6354 l
233.4935 434.8868 l
233.7449 434.8868 l
233.7449 434.8868 l
233.9962 435.1381 l
233.9962 435.1381 l
234.2476 435.3894 l
234.4989 435.3894 l
234.4989 435.3894 l
234.7502 435.6408 l
235.0015 435.6408 l
235.0015 435.6408 l
235.2529 435.8921 l
235.5042 435.8921 l
235.5042 436.1434 l
235.7555 436.1434 l
236.0069 436.1434 l
236.0069 436.3948 l
236.2582 436.3948 l
236.5095 436.3948 l
236.5095 436.6461 l
236.7608 436.6461 l
237.0122 436.6461 l
237.0122 436.8974 l
237.2635 436.8974 l
237.5149 437.1487 l
237.7662 437.1487 l
237.7662 437.1487 l
238.0175 437.4001 l
238.2688 437.4001 l
238.5202 437.4001 l
238.2688 438.4054 l
f
251.0866 415.5345 m
251.0866 415.5345 l
250.8352 415.2832 l
250.5839 415.0318 l
250.3326 414.7805 l
250.0813 414.7805 l
249.8299 414.5292 l
249.8299 414.2778 l
249.5786 414.0265 l
249.3273 414.0265 l
249.0759 413.7752 l
248.8246 413.5238 l
248.5733 413.2725 l
248.3219 413.2725 l
248.3219 413.0212 l
248.0706 412.7698 l
247.8193 412.5185 l
247.568 412.5185 l
247.3166 412.2672 l
247.0653 412.0158 l
246.814 411.7645 l
246.814 411.5132 l
246.5626 411.5132 l
246.3113 411.2619 l
246.06 411.0105 l
245.8087 410.7592 l
245.5573 410.5079 l
245.306 410.5079 l
245.306 410.2566 l
245.0547 410.0053 l
244.8033 409.7539 l
244.552 409.5026 l
244.3007 409.5026 l
244.3007 409.5026 l
244.3007 407.7433 l
244.3007 407.7433 l
244.3007 407.9946 l
244.552 408.2459 l
244.8033 408.4973 l
245.0547 408.7486 l
245.306 408.7486 l
245.5573 408.9999 l
245.8087 409.2513 l
245.8087 409.5026 l
246.06 409.7539 l
246.3113 410.0053 l
246.5626 410.2566 l
246.814 410.2566 l
247.0653 410.5079 l
247.3166 410.7592 l
247.568 411.0105 l
247.8193 411.2619 l
248.0706 411.5132 l
248.3219 411.7645 l
248.5733 412.0158 l
248.8246 412.0158 l
249.0759 412.2672 l
249.3273 412.5185 l
249.5786 412.7698 l
249.8299 413.0212 l
250.0813 413.2725 l
250.3326 413.5238 l
250.5839 413.7752 l
250.8352 414.0265 l
251.0866 414.2778 l
251.3379 414.5292 l
251.5892 414.7805 l
251.8406 414.7805 l
251.0866 415.5345 l
f
298.839 449.7152 m
286.5239 441.924 l
287.0266 439.9134 l
300.0956 448.7098 l
298.839 449.7152 l
298.839 449.7152 l
f
0 0 0 0 k
258.3751 446.1965 m
258.3751 447.7046 l
258.3751 450.7205 l
258.3751 453.4851 l
258.3751 454.7417 l
258.3751 454.7417 l
256.8671 456.501 l
262.3964 456.501 l
260.6371 454.7417 l
260.6371 441.924 l
262.6477 439.9134 l
255.3592 439.9134 l
248.8246 450.7205 l
248.8246 450.7205 l
248.8246 449.2125 l
248.8246 446.1965 l
248.8246 443.1806 l
248.8246 441.924 l
248.8246 441.924 l
250.5839 439.9134 l
244.552 439.9134 l
246.5626 441.924 l
246.5626 454.7417 l
244.8033 456.501 l
252.0919 456.501 l
258.3751 446.1965 l
258.3751 446.1965 l
f
300.8496 452.2285 m
300.5983 457.5064 l
298.839 456.2497 l
298.839 456.2497 l
298.839 456.2497 l
298.5877 456.2497 l
298.3364 456.501 l
298.085 456.501 l
297.8337 456.501 l
297.5823 456.501 l
297.3311 456.7524 l
297.0797 456.7524 l
296.8284 456.7524 l
296.5771 456.7524 l
296.3258 456.7524 l
296.0744 456.7524 l
295.8231 456.7524 l
295.5717 456.7524 l
295.3204 456.7524 l
295.0691 456.7524 l
294.8177 456.7524 l
294.5664 456.7524 l
294.5664 456.7524 l
294.3151 456.7524 l
294.0638 456.7524 l
293.8124 456.7524 l
293.5611 456.7524 l
293.3098 456.7524 l
293.0585 456.501 l
292.8071 456.501 l
292.8071 456.501 l
292.5558 456.501 l
292.3045 456.2497 l
292.0531 456.2497 l
291.8018 456.2497 l
291.8018 455.9984 l
291.8018 455.9984 l
291.5505 455.9984 l
291.2992 455.9984 l
291.2992 455.7471 l
291.0478 455.7471 l
290.7965 455.4957 l
290.5452 455.4957 l
290.5452 455.4957 l
290.2939 455.2444 l
290.0425 455.2444 l
290.0425 454.9931 l
289.7912 454.7417 l
289.7912 454.7417 l
289.5399 454.4904 l
289.2885 454.4904 l
289.2885 454.2391 l
289.0372 453.9878 l
289.0372 453.9878 l
288.7859 453.7364 l
288.7859 453.4851 l
288.5345 453.4851 l
288.5345 453.2338 l
288.5345 452.9824 l
288.2832 452.7311 l
288.2832 452.4798 l
288.2832 452.4798 l
288.2832 452.2285 l
288.0319 451.9771 l
288.0319 451.7258 l
288.0319 451.4745 l
288.0319 451.2231 l
288.0319 450.9718 l
288.0319 450.7205 l
288.0319 450.7205 l
288.0319 450.4692 l
288.2832 450.2178 l
288.2832 449.9665 l
288.2832 449.9665 l
288.2832 449.7152 l
288.5345 449.4639 l
288.5345 449.2125 l
288.5345 448.9612 l
288.7859 448.9612 l
288.7859 448.7098 l
288.7859 448.4585 l
289.0372 448.4585 l
289.0372 448.2072 l
289.2885 447.9559 l
289.5399 447.9559 l
289.5399 447.7046 l
289.7912 447.7046 l
289.7912 447.4532 l
290.0425 447.4532 l
290.2939 447.2019 l
290.2939 447.2019 l
290.5452 446.9505 l
290.5452 446.9505 l
290.7965 446.9505 l
291.0478 446.6992 l
291.2992 446.6992 l
291.2992 446.6992 l
291.5505 446.4479 l
291.8018 446.4479 l
291.8018 446.4479 l
292.0531 446.1965 l
292.3045 446.1965 l
292.3045 446.1965 l
292.5558 446.1965 l
292.5558 445.9452 l
292.8071 445.9452 l
293.0585 445.6939 l
293.3098 445.6939 l
293.5611 445.6939 l
293.8124 445.4426 l
294.0638 445.4426 l
294.3151 445.4426 l
294.3151 445.4426 l
294.5664 445.1913 l
294.8177 445.1913 l
295.0691 445.1913 l
295.0691 444.9399 l
295.3204 444.9399 l
295.5717 444.9399 l
295.8231 444.6886 l
295.8231 444.6886 l
296.0744 444.6886 l
296.0744 444.6886 l
296.3258 444.4373 l
296.5771 444.4373 l
296.5771 444.1859 l
296.5771 444.1859 l
296.8284 444.1859 l
296.8284 443.9346 l
296.8284 443.9346 l
297.0797 443.9346 l
297.0797 443.6833 l
297.0797 443.6833 l
297.0797 443.4319 l
297.0797 443.4319 l
297.0797 443.4319 l
297.0797 443.1806 l
297.0797 443.1806 l
297.0797 443.1806 l
297.0797 442.9293 l
296.8284 442.9293 l
296.8284 442.6779 l
296.8284 442.6779 l
296.8284 442.6779 l
296.5771 442.4266 l
296.5771 442.4266 l
296.3258 442.4266 l
296.3258 442.1753 l
296.0744 442.1753 l
296.0744 442.1753 l
295.8231 442.1753 l
295.8231 441.924 l
295.5717 441.924 l
295.3204 441.924 l
295.3204 441.924 l
295.3204 441.924 l
295.0691 441.924 l
294.8177 441.924 l
294.8177 441.924 l
294.5664 441.924 l
294.3151 441.924 l
294.3151 441.924 l
294.3151 441.924 l
294.3151 441.924 l
294.0638 441.924 l
293.8124 441.924 l
293.8124 441.924 l
293.5611 441.924 l
293.3098 441.924 l
293.3098 441.924 l
293.0585 441.924 l
292.8071 441.924 l
292.5558 441.924 l
292.5558 441.924 l
292.3045 442.1753 l
292.0531 442.1753 l
291.8018 442.1753 l
291.5505 442.1753 l
291.2992 442.4266 l
291.0478 442.4266 l
290.7965 442.4266 l
290.5452 442.6779 l
290.2939 442.6779 l
290.2939 442.6779 l
290.0425 442.9293 l
289.7912 442.9293 l
289.5399 443.1806 l
289.2885 443.1806 l
289.0372 443.4319 l
288.7859 443.4319 l
288.7859 443.6833 l
288.5345 443.9346 l
288.2832 443.9346 l
288.0319 444.1859 l
288.0319 444.1859 l
288.5345 438.908 l
290.2939 440.1647 l
290.2939 440.1647 l
290.5452 440.1647 l
290.7965 440.1647 l
291.0478 440.1647 l
291.2992 439.9134 l
291.5505 439.9134 l
291.8018 439.9134 l
292.0531 439.9134 l
292.3045 439.662 l
292.5558 439.662 l
292.8071 439.662 l
293.0585 439.662 l
293.3098 439.662 l
293.3098 439.662 l
293.5611 439.4107 l
293.8124 439.4107 l
294.0638 439.4107 l
294.3151 439.4107 l
294.5664 439.4107 l
294.8177 439.4107 l
295.0691 439.4107 l
295.3204 439.4107 l
295.5717 439.4107 l
295.8231 439.4107 l
296.0744 439.4107 l
296.3258 439.662 l
296.5771 439.662 l
296.8284 439.662 l
297.0797 439.662 l
297.3311 439.662 l
297.5823 439.9134 l
297.8337 439.9134 l
298.085 439.9134 l
298.085 439.9134 l
298.3364 439.9134 l
298.5877 440.1647 l
298.839 440.1647 l
299.0903 440.416 l
299.3417 440.416 l
299.593 440.6673 l
299.8443 440.6673 l
300.0956 440.9187 l
300.347 440.9187 l
300.5983 441.17 l
300.5983 441.4213 l
300.8496 441.4213 l
301.101 441.6726 l
301.3523 441.924 l
301.3523 441.924 l
301.6036 442.1753 l
301.855 442.4266 l
301.855 442.6779 l
302.1063 442.9293 l
302.1063 443.1806 l
302.1063 443.4319 l
302.3576 443.6833 l
302.3576 443.9346 l
302.3576 444.1859 l
302.3576 444.4373 l
302.3576 444.6886 l
302.3576 445.1913 l
302.3576 445.4426 l
302.3576 445.6939 l
302.1063 446.1965 l
302.1063 446.4479 l
301.855 446.6992 l
301.855 446.6992 l
301.855 446.9505 l
301.855 446.9505 l
301.855 447.2019 l
301.6036 447.4532 l
301.6036 447.4532 l
301.6036 447.7046 l
301.3523 447.7046 l
301.3523 447.9559 l
301.101 447.9559 l
301.101 448.2072 l
300.8496 448.4585 l
300.8496 448.4585 l
300.8496 448.7098 l
300.5983 448.7098 l
300.5983 448.7098 l
300.347 448.9612 l
300.347 448.9612 l
300.0956 448.9612 l
300.0956 449.2125 l
299.8443 449.2125 l
299.8443 449.2125 l
299.593 449.4639 l
299.593 449.4639 l
299.3417 449.4639 l
299.3417 449.7152 l
299.0903 449.7152 l
299.0903 449.7152 l
298.839 449.7152 l
298.839 449.9665 l
298.5877 449.9665 l
298.5877 449.9665 l
298.5877 449.9665 l
298.3364 449.9665 l
298.3364 449.9665 l
298.085 450.2178 l
298.085 450.2178 l
297.8337 450.2178 l
297.8337 450.2178 l
297.5823 450.4692 l
297.3311 450.4692 l
297.3311 450.4692 l
297.0797 450.4692 l
296.8284 450.7205 l
296.8284 450.7205 l
296.5771 450.7205 l
296.3258 450.7205 l
296.0744 450.9718 l
296.0744 450.9718 l
295.8231 450.9718 l
295.5717 451.2231 l
295.5717 451.2231 l
295.3204 451.2231 l
295.0691 451.4745 l
294.8177 451.4745 l
294.8177 451.4745 l
294.5664 451.4745 l
294.5664 451.7258 l
294.3151 451.7258 l
294.0638 451.7258 l
294.0638 451.7258 l
293.8124 451.9771 l
293.8124 451.9771 l
293.8124 451.9771 l
293.5611 451.9771 l
293.5611 451.9771 l
293.5611 451.9771 l
293.5611 452.2285 l
293.3098 452.2285 l
293.3098 452.2285 l
293.3098 452.4798 l
293.0585 452.4798 l
293.0585 452.7311 l
293.0585 452.7311 l
293.0585 452.9824 l
293.0585 452.9824 l
293.0585 453.2338 l
293.0585 453.2338 l
293.3098 453.4851 l
293.3098 453.4851 l
293.3098 453.7364 l
293.5611 453.7364 l
293.5611 453.9878 l
293.8124 453.9878 l
294.0638 454.2391 l
294.3151 454.2391 l
294.5664 454.2391 l
294.8177 454.4904 l
295.0691 454.4904 l
295.0691 454.4904 l
295.3204 454.4904 l
295.5717 454.4904 l
295.8231 454.4904 l
296.0744 454.4904 l
296.0744 454.4904 l
296.3258 454.4904 l
296.5771 454.4904 l
296.8284 454.2391 l
297.0797 454.2391 l
297.3311 454.2391 l
297.5823 454.2391 l
297.5823 453.9878 l
297.8337 453.9878 l
298.085 453.9878 l
298.3364 453.7364 l
298.5877 453.7364 l
298.839 453.7364 l
298.839 453.4851 l
299.0903 453.4851 l
299.3417 453.4851 l
299.593 453.2338 l
299.593 453.2338 l
299.8443 452.9824 l
300.0956 452.9824 l
300.0956 452.9824 l
300.347 452.7311 l
300.347 452.7311 l
300.5983 452.7311 l
300.5983 452.4798 l
300.5983 452.4798 l
300.8496 452.4798 l
300.8496 452.2285 l
300.8496 452.2285 l
f
272.1982 446.1965 m
270.9415 446.1965 l
272.7008 452.2285 l
274.9628 446.1965 l
272.1982 446.1965 l
272.1982 446.1965 l
272.9522 443.6833 l
275.9681 443.6833 l
276.7221 441.924 l
274.7115 439.9134 l
285.2673 439.9134 l
283.2566 441.924 l
277.4761 456.501 l
269.4336 456.501 l
271.1929 454.7417 l
267.4229 441.924 l
265.4123 439.9134 l
270.9415 439.9134 l
269.4336 441.6726 l
270.1876 443.6833 l
272.9522 443.6833 l
272.1982 446.1965 l
f
307.3842 448.4585 m
309.1435 455.4957 l
307.3842 456.501 l
315.4267 456.501 l
321.4586 441.924 l
323.2179 439.9134 l
312.6621 439.9134 l
314.6727 441.924 l
313.9187 443.6833 l
308.1382 443.6833 l
307.6355 441.6726 l
308.8921 439.9134 l
303.3629 439.9134 l
305.3736 441.924 l
307.3842 448.4585 l
309.3948 448.4585 l
308.8921 446.1965 l
312.9134 446.1965 l
310.6514 452.2285 l
309.3948 448.2072 l
307.3842 448.4585 l
307.3842 448.4585 l
f
0 0 0 0.35 k
330.2551 474.5967 m
327.9931 472.5861 l
325.7312 470.5754 l
323.7206 468.8161 l
321.7099 467.0569 l
319.6993 465.2976 l
317.6887 463.7896 l
315.9294 462.2816 l
314.4214 460.7736 l
312.6621 459.517 l
311.1541 458.2603 l
309.6461 457.255 l
308.1382 455.9984 l
306.6302 454.9931 l
305.3736 453.9878 l
303.8656 452.9824 l
302.6089 452.2285 l
301.3523 451.2231 l
300.0956 450.4692 l
298.839 449.7152 l
297.5823 448.9612 l
296.3258 447.9559 l
295.0691 447.4532 l
294.0638 446.6992 l
292.8071 445.9452 l
291.5505 445.1913 l
290.2939 444.4373 l
289.2885 443.6833 l
288.0319 442.9293 l
286.5239 442.1753 l
285.2673 441.17 l
284.0106 440.416 l
282.754 439.4107 l
282.754 439.4107 l
282 438.908 l
281.246 438.6567 l
280.492 438.154 l
279.738 437.4001 l
278.9841 436.8974 l
277.9787 436.3948 l
277.2247 435.8921 l
276.2194 435.3894 l
275.4654 434.6354 l
274.4601 434.1328 l
273.4548 433.3788 l
272.4495 432.8762 l
271.6955 432.1222 l
270.4389 431.3682 l
269.4336 430.6142 l
268.4282 429.8602 l
267.4229 429.1062 l
266.1663 428.3522 l
265.161 427.5982 l
264.1557 426.8443 l
263.1504 426.0903 l
261.8937 425.085 l
260.8884 424.331 l
259.6317 423.3257 l
258.6264 422.3203 l
257.3698 421.3151 l
256.3645 420.3097 l
255.1078 419.3044 l
253.8512 418.2991 l
252.8459 417.2938 l
251.5892 416.0371 l
250.5839 415.0318 l
250.5839 415.0318 l
251.5892 414.5292 l
251.5892 414.5292 l
252.3432 415.2832 l
253.3486 416.0371 l
254.1025 416.7911 l
255.1078 417.5451 l
256.1132 418.2991 l
256.8671 419.0531 l
257.8724 419.8071 l
258.8778 420.5611 l
259.8831 421.3151 l
260.8884 422.069 l
261.8937 422.823 l
262.6477 423.577 l
263.653 424.0797 l
264.6583 424.8336 l
265.6636 425.5876 l
266.6689 426.3416 l
267.6742 427.0956 l
268.9309 427.8496 l
269.9362 428.6036 l
270.9415 429.3576 l
271.9468 430.1115 l
273.2035 430.6142 l
274.2088 431.3682 l
275.2141 432.1222 l
276.2194 432.8762 l
277.2247 433.6301 l
278.2301 434.3842 l
279.2354 435.1381 l
280.2407 435.6408 l
281.4974 436.3948 l
282.5026 437.1487 l
283.508 437.6514 l
283.508 437.6514 l
285.5186 439.1594 l
288.0319 440.6673 l
290.0425 441.924 l
292.3045 443.4319 l
294.5664 444.9399 l
296.8284 446.1965 l
299.0903 447.7046 l
301.3523 449.2125 l
303.6143 450.7205 l
305.8762 452.2285 l
308.1382 453.7364 l
310.1488 455.2444 l
312.4108 456.7524 l
314.4214 458.2603 l
316.432 459.7683 l
318.4427 461.5276 l
320.4533 463.0356 l
322.4639 464.7949 l
324.2232 466.3029 l
325.9825 468.0622 l
327.7418 469.5701 l
329.5011 471.3294 l
331.0091 473.0887 l
332.5171 474.5967 l
334.025 476.356 l
335.2817 478.1153 l
336.5383 479.8746 l
337.795 481.8852 l
338.8003 483.6445 l
339.8056 485.6552 l
340.5596 487.4145 l
341.3135 489.4251 l
330.2551 474.5967 l
f
283.508 439.9134 m
284.5133 440.6673 l
285.7699 440.416 l
284.7646 439.662 l
283.508 439.9134 l
283.508 439.9134 l
f
0 0 0 0 k
291.2992 485.1525 m
291.2992 485.1525 l
291.2992 485.1525 l
291.2992 485.4038 l
291.2992 485.4038 l
291.5505 485.4038 l
291.5505 485.4038 l
291.5505 485.4038 l
291.5505 485.4038 l
291.8018 486.4091 l
292.0531 485.4038 l
292.0531 485.4038 l
292.0531 485.4038 l
292.0531 485.4038 l
292.3045 485.4038 l
292.3045 485.4038 l
292.3045 485.1525 l
292.3045 485.1525 l
292.3045 485.1525 l
292.3045 485.1525 l
293.3098 484.9012 l
292.3045 484.6499 l
292.3045 484.6499 l
292.3045 484.6499 l
292.3045 484.6499 l
292.3045 484.3985 l
292.3045 484.3985 l
292.0531 484.3985 l
292.0531 484.3985 l
292.0531 484.3985 l
292.0531 484.3985 l
291.8018 483.3932 l
291.5505 484.3985 l
291.5505 484.3985 l
291.5505 484.3985 l
291.5505 484.3985 l
291.2992 484.3985 l
291.2992 484.3985 l
291.2992 484.6499 l
291.2992 484.6499 l
291.2992 484.6499 l
291.2992 484.6499 l
290.2939 484.9012 l
291.2992 485.1525 l
291.2992 485.1525 l
f
265.6636 415.2832 m
265.6636 415.2832 l
265.6636 415.5345 l
265.6636 415.5345 l
265.915 415.5345 l
265.915 415.5345 l
265.915 415.5345 l
266.1663 415.7858 l
266.1663 415.7858 l
266.1663 416.7911 l
266.4177 415.7858 l
266.4177 415.7858 l
266.4177 415.5345 l
266.6689 415.5345 l
266.6689 415.5345 l
266.6689 415.5345 l
266.6689 415.2832 l
266.9203 415.2832 l
266.9203 415.2832 l
266.9203 415.2832 l
267.9256 415.0318 l
266.9203 414.7805 l
266.9203 414.7805 l
266.9203 414.7805 l
266.6689 414.7805 l
266.6689 414.7805 l
266.6689 414.5292 l
266.6689 414.5292 l
266.4177 414.5292 l
266.4177 414.5292 l
266.4177 414.5292 l
266.1663 413.5238 l
266.1663 414.5292 l
266.1663 414.5292 l
265.915 414.5292 l
265.915 414.5292 l
265.915 414.5292 l
265.6636 414.7805 l
265.6636 414.7805 l
265.6636 414.7805 l
265.6636 415.0318 l
265.6636 415.0318 l
264.6583 415.0318 l
265.6636 415.2832 l
265.6636 415.2832 l
f
312.4108 424.331 m
312.6621 424.331 l
312.6621 424.5823 l
312.6621 424.5823 l
312.6621 424.5823 l
312.9134 424.5823 l
312.9134 424.5823 l
312.9134 424.8336 l
312.9134 424.8336 l
313.1648 425.5876 l
313.4161 424.8336 l
313.4161 424.8336 l
313.4161 424.5823 l
313.4161 424.5823 l
313.6674 424.5823 l
313.6674 424.5823 l
313.6674 424.331 l
313.6674 424.331 l
313.6674 424.331 l
313.6674 424.331 l
314.6727 424.0797 l
313.6674 423.8283 l
313.6674 423.8283 l
313.6674 423.8283 l
313.6674 423.8283 l
313.6674 423.8283 l
313.6674 423.577 l
313.4161 423.577 l
313.4161 423.577 l
313.4161 423.577 l
313.4161 423.577 l
313.1648 422.5717 l
312.9134 423.577 l
312.9134 423.577 l
312.9134 423.577 l
312.9134 423.577 l
312.6621 423.577 l
312.6621 423.8283 l
312.6621 423.8283 l
312.6621 423.8283 l
312.4108 424.0797 l
312.4108 424.0797 l
311.6568 424.0797 l
312.4108 424.331 l
312.4108 424.331 l
f
316.1807 434.3842 m
316.1807 434.3842 l
316.1807 434.6354 l
316.432 434.6354 l
316.432 434.6354 l
316.432 434.6354 l
316.6834 434.8868 l
316.6834 434.8868 l
316.6834 434.8868 l
316.9347 435.8921 l
316.9347 434.8868 l
316.9347 434.8868 l
317.186 434.8868 l
317.186 434.6354 l
317.186 434.6354 l
317.4373 434.6354 l
317.4373 434.6354 l
317.4373 434.3842 l
317.4373 434.3842 l
317.4373 434.3842 l
318.4427 434.1328 l
317.4373 434.1328 l
317.4373 434.1328 l
317.4373 433.8815 l
317.4373 433.8815 l
317.186 433.8815 l
317.186 433.6301 l
317.186 433.6301 l
317.186 433.6301 l
316.9347 433.6301 l
316.9347 433.6301 l
316.9347 432.3735 l
316.6834 433.6301 l
316.6834 433.6301 l
316.6834 433.6301 l
316.432 433.6301 l
316.432 433.6301 l
316.432 433.8815 l
316.1807 433.8815 l
316.1807 433.8815 l
316.1807 434.1328 l
316.1807 434.1328 l
315.1754 434.1328 l
316.1807 434.3842 l
316.1807 434.3842 l
f
270.1876 471.3294 m
270.1876 471.3294 l
270.1876 471.5808 l
270.1876 471.5808 l
270.4389 471.5808 l
270.4389 471.8321 l
270.4389 471.8321 l
270.6902 471.8321 l
270.6902 471.8321 l
270.9415 472.8374 l
271.1929 471.8321 l
271.1929 471.8321 l
271.1929 471.8321 l
271.1929 471.8321 l
271.1929 471.5808 l
271.4442 471.5808 l
271.4442 471.5808 l
271.4442 471.3294 l
271.4442 471.3294 l
271.4442 471.3294 l
272.4495 471.0781 l
271.4442 471.0781 l
271.4442 471.0781 l
271.4442 470.8268 l
271.4442 470.8268 l
271.4442 470.8268 l
271.1929 470.8268 l
271.1929 470.5754 l
271.1929 470.5754 l
270.9415 470.5754 l
270.9415 470.5754 l
270.9415 469.5701 l
270.6902 470.5754 l
270.6902 470.5754 l
270.4389 470.5754 l
270.4389 470.5754 l
270.4389 470.8268 l
270.1876 470.8268 l
270.1876 470.8268 l
270.1876 470.8268 l
270.1876 471.0781 l
270.1876 471.0781 l
269.1822 471.0781 l
270.1876 471.3294 l
270.1876 471.3294 l
f
0 0 0 1 k
341.3135 489.4251 m
340.8109 488.1685 l
340.3082 486.9118 l
339.8056 485.6552 l
339.3029 484.3985 l
338.5489 483.1419 l
338.0463 482.1366 l
337.2923 480.8799 l
336.5383 479.6233 l
335.7843 478.6179 l
335.0303 477.6127 l
334.2764 476.356 l
333.2711 475.3507 l
332.5171 474.3454 l
331.5117 473.5914 l
330.7577 472.5861 l
330.0038 471.5808 l
328.9985 470.8268 l
328.2445 470.0728 l
327.4905 469.0675 l
326.7365 468.3135 l
325.7312 467.8108 l
324.9772 467.0569 l
324.2232 466.3029 l
323.7206 465.8002 l
322.9666 465.0462 l
322.2126 464.5436 l
321.7099 464.0409 l
321.2073 463.5382 l
320.7046 463.0356 l
320.202 462.7843 l
319.6993 462.533 l
319.448 462.2816 l
319.448 462.2816 l
319.448 462.2816 l
319.448 462.533 l
319.448 462.7843 l
319.448 463.0356 l
319.6993 463.7896 l
319.6993 464.2922 l
319.6993 464.7949 l
319.9506 465.0462 l
319.9506 465.5489 l
320.202 465.8002 l
320.202 465.8002 l
320.4533 466.0515 l
320.9559 466.3029 l
321.4586 466.5542 l
321.9613 467.0569 l
322.4639 467.3082 l
323.2179 467.8108 l
323.7206 468.3135 l
324.4745 468.8161 l
324.9772 469.5701 l
325.7312 470.0728 l
326.4851 470.8268 l
327.2391 471.5808 l
327.9931 472.0834 l
328.7471 472.8374 l
329.5011 473.5914 l
330.2551 474.3454 l
331.0091 475.3507 l
331.7631 476.1047 l
332.5171 476.8587 l
333.2711 477.864 l
334.2764 478.6179 l
335.0303 479.6233 l
335.7843 480.6286 l
336.5383 481.6339 l
337.041 482.6392 l
337.795 483.6445 l
338.5489 484.3985 l
339.0516 485.4038 l
339.8056 486.4091 l
340.3082 487.4145 l
340.8109 488.4198 l
341.3135 489.4251 l
341.3135 489.4251 l
341.3135 489.4251 l
341.3135 489.4251 l
f
0 0 0 0.35 k
306.6302 454.9931 m
309.8975 457.255 l
312.4108 457.0037 l
307.8868 453.7364 l
306.6302 454.9931 l
306.6302 454.9931 l
f
0 0 0 0 k
292.8071 424.5823 m
294.5664 423.8283 l
296.0744 423.3257 l
297.5823 422.823 l
299.0903 422.823 l
300.0956 422.5717 l
301.3523 422.823 l
302.3576 422.823 l
303.3629 423.3257 l
304.1169 423.577 l
304.8709 424.331 l
305.3736 424.8336 l
305.8762 425.5876 l
306.1275 426.3416 l
306.6302 427.3469 l
306.6302 428.3522 l
306.8815 429.3576 l
306.8815 430.6142 l
306.6302 431.8708 l
306.6302 433.1275 l
306.3789 434.3842 l
306.1275 435.8921 l
305.6249 437.1487 l
305.1222 438.6567 l
304.6196 440.1647 l
304.1169 441.6726 l
303.6143 443.1806 l
302.8603 444.6886 l
301.855 446.1965 l
301.101 447.7046 l
300.347 449.2125 l
299.3417 450.7205 l
298.3364 452.2285 l
298.3364 452.2285 l
297.8337 452.9824 l
297.3311 453.7364 l
296.8284 454.4904 l
296.0744 455.2444 l
295.5717 455.9984 l
295.0691 456.7524 l
294.3151 457.5064 l
293.8124 458.2603 l
293.3098 459.0143 l
292.5558 459.7683 l
292.0531 460.5223 l
291.2992 461.2763 l
290.7965 461.779 l
290.2939 462.533 l
289.5399 463.0356 l
289.0372 463.7896 l
288.2832 464.5436 l
287.7806 465.0462 l
287.2779 465.8002 l
286.5239 466.3029 l
286.0213 466.8055 l
285.2673 467.3082 l
284.7646 467.8108 l
284.2619 468.3135 l
283.7593 468.8161 l
283.0053 469.3188 l
282.5026 469.8215 l
282 470.0728 l
281.4974 470.5754 l
280.9947 471.0781 l
280.7433 471.3294 l
280.2407 471.5808 l
280.2407 471.5808 l
278.7327 472.5861 l
277.2247 473.5914 l
275.9681 474.3454 l
274.4601 475.0994 l
273.2035 475.8534 l
271.9468 476.356 l
270.6902 476.6073 l
269.4336 476.8587 l
268.4282 477.11 l
267.4229 477.11 l
266.4177 477.11 l
265.4123 477.11 l
264.6583 476.8587 l
263.9044 476.356 l
263.1504 475.8534 l
262.6477 475.3507 l
262.145 474.848 l
261.6424 474.0941 l
261.3911 473.0887 l
261.1397 472.3347 l
260.8884 471.3294 l
260.8884 470.0728 l
260.8884 468.8161 l
260.8884 467.5595 l
261.1397 466.0515 l
261.3911 464.5436 l
261.8937 462.7843 l
262.3964 461.025 l
262.899 459.2657 l
263.653 457.255 l
264.6583 455.2444 l
265.6636 453.2338 l
265.6636 453.2338 l
265.915 452.4798 l
266.1663 451.9771 l
266.6689 451.2231 l
266.9203 450.7205 l
267.4229 449.9665 l
267.6742 449.4639 l
268.1769 448.7098 l
268.4282 447.9559 l
268.9309 447.4532 l
269.1822 446.9505 l
269.6849 446.1965 l
269.9362 445.6939 l
270.4389 445.1913 l
270.9415 444.6886 l
271.1929 444.1859 l
271.6955 443.6833 l
271.9468 443.1806 l
272.4495 442.6779 l
272.7008 442.1753 l
273.2035 441.6726 l
273.7061 441.17 l
273.9575 440.6673 l
274.4601 440.1647 l
274.7115 439.662 l
275.2141 439.1594 l
275.4654 438.6567 l
275.9681 438.4054 l
276.2194 437.9027 l
276.4708 437.4001 l
276.9734 436.8974 l
277.2247 436.3948 l
277.7274 436.1434 l
277.7274 436.1434 l
277.9787 435.6408 l
278.2301 435.3894 l
278.4814 435.1381 l
278.7327 434.8868 l
278.9841 434.3842 l
279.4867 434.1328 l
279.738 433.8815 l
279.9894 433.6301 l
280.2407 433.3788 l
280.7433 433.1275 l
280.9947 432.8762 l
281.246 432.6248 l
281.7487 432.3735 l
282 432.1222 l
282.2513 431.8708 l
282.5026 431.6195 l
282.754 431.3682 l
283.0053 431.3682 l
283.2566 431.1168 l
283.508 430.8655 l
283.7593 430.6142 l
283.7593 430.6142 l
284.0106 430.3628 l
284.0106 430.1115 l
284.2619 430.1115 l
284.2619 429.8602 l
284.2619 429.6089 l
284.2619 429.6089 l
284.2619 429.3576 l
284.2619 429.1062 l
284.0106 429.1062 l
284.0106 428.8549 l
284.0106 428.8549 l
283.7593 428.6036 l
283.508 428.6036 l
283.2566 428.6036 l
283.0053 428.6036 l
282.754 428.6036 l
282.5026 428.8549 l
282 428.8549 l
281.7487 429.1062 l
281.4974 429.3576 l
281.246 429.6089 l
280.9947 429.8602 l
280.7433 430.1115 l
280.2407 430.3628 l
279.9894 430.6142 l
279.738 431.1168 l
279.4867 431.3682 l
279.2354 431.8708 l
278.7327 432.1222 l
278.4814 432.3735 l
278.2301 432.8762 l
277.9787 433.3788 l
277.7274 433.6301 l
277.4761 433.8815 l
277.4761 434.1328 l
277.2247 434.3842 l
276.9734 434.6354 l
276.9734 434.8868 l
276.7221 435.1381 l
276.7221 435.3894 l
276.7221 435.3894 l
276.4708 435.3894 l
276.4708 435.6408 l
276.4708 435.6408 l
276.2194 435.8921 l
275.7168 436.3948 l
275.4654 436.8974 l
275.2141 437.4001 l
274.7115 437.6514 l
274.4601 438.154 l
273.9575 438.6567 l
273.7061 439.1594 l
273.4548 439.662 l
272.9522 439.9134 l
272.7008 440.416 l
272.1982 440.9187 l
271.9468 441.4213 l
271.6955 441.924 l
271.1929 442.4266 l
270.9415 442.9293 l
270.4389 443.4319 l
270.1876 443.9346 l
269.6849 444.4373 l
269.4336 444.9399 l
268.9309 445.4426 l
268.6796 445.9452 l
268.4282 446.4479 l
267.9256 447.2019 l
267.6742 447.7046 l
267.1716 448.4585 l
266.9203 448.9612 l
266.6689 449.4639 l
266.1663 450.2178 l
265.915 450.7205 l
265.4123 451.4745 l
265.161 451.9771 l
265.161 451.9771 l
264.407 453.4851 l
263.653 454.9931 l
262.899 456.2497 l
262.3964 457.7577 l
261.8937 459.2657 l
261.3911 460.5223 l
260.8884 462.0303 l
260.6371 463.2869 l
260.3857 464.7949 l
260.1344 466.0515 l
259.8831 467.3082 l
259.8831 468.5648 l
259.8831 469.5701 l
259.8831 470.5754 l
260.1344 471.8321 l
260.1344 472.5861 l
260.3857 473.5914 l
260.8884 474.3454 l
261.1397 475.0994 l
261.6424 475.8534 l
262.145 476.6073 l
262.899 477.11 l
263.653 477.3613 l
264.407 477.864 l
265.161 478.1153 l
266.1663 478.1153 l
267.1716 478.1153 l
268.1769 478.1153 l
269.4336 477.864 l
270.6902 477.6127 l
272.1982 477.11 l
273.4548 476.6073 l
273.4548 476.6073 l
274.7115 475.8534 l
275.9681 475.3507 l
277.2247 474.5967 l
278.4814 473.8427 l
279.738 473.0887 l
280.7433 472.3347 l
282 471.3294 l
283.2566 470.3241 l
284.2619 469.3188 l
285.5186 468.3135 l
286.5239 467.3082 l
287.7806 466.3029 l
289.0372 465.2976 l
290.0425 464.0409 l
291.0478 462.7843 l
292.0531 461.5276 l
293.0585 460.5223 l
294.0638 459.2657 l
295.0691 458.009 l
296.0744 456.7524 l
296.8284 455.4957 l
297.8337 454.2391 l
298.5877 453.2338 l
299.3417 451.9771 l
300.0956 450.7205 l
300.8496 449.4639 l
301.6036 448.2072 l
302.3576 446.9505 l
303.1116 445.6939 l
303.6143 444.6886 l
304.1169 443.4319 l
304.6196 442.4266 l
304.6196 442.4266 l
304.8709 441.924 l
305.1222 441.17 l
305.3736 440.416 l
305.6249 439.662 l
305.8762 438.908 l
306.1275 437.9027 l
306.3789 437.1487 l
306.6302 436.1434 l
306.8815 435.1381 l
307.1329 434.1328 l
307.1329 433.1275 l
307.3842 431.8708 l
307.3842 430.8655 l
307.3842 429.8602 l
307.3842 428.8549 l
307.3842 428.1009 l
307.1329 427.0956 l
306.8815 426.3416 l
306.6302 425.5876 l
306.3789 424.8336 l
305.8762 424.0797 l
305.1222 423.577 l
304.6196 423.0743 l
303.8656 422.5717 l
302.8603 422.3203 l
301.6036 422.3203 l
300.5983 422.3203 l
299.3417 422.3203 l
297.8337 422.5717 l
296.3258 423.0743 l
294.8177 423.577 l
292.8071 424.331 l
292.8071 424.5823 l
f
0 0 0 0.35 k
269.9362 451.2231 m
268.6796 446.4479 l
268.4282 446.4479 l
266.1663 449.9665 l
268.1769 450.4692 l
269.9362 451.2231 l
269.9362 451.2231 l
f
283.508 439.9134 m
276.2194 435.1381 l
277.9787 436.3948 l
279.2354 435.1381 l
277.4761 433.6301 l
276.2194 435.1381 l
276.2194 435.1381 l
283.508 439.9134 l
f
311.9081 456.501 m
310.9028 458.2603 l
310.6514 458.009 l
311.6568 456.501 l
311.9081 456.501 l
311.9081 456.501 l
f
0 0 0 0.36 k
310.6514 458.009 m
310.9028 458.2603 l
312.1594 456.7524 l
311.9081 456.501 l
310.6514 458.009 l
310.6514 458.009 l
f
310.9028 458.2603 m
311.1541 458.2603 l
312.4108 456.7524 l
311.9081 456.7524 l
310.9028 458.2603 l
310.9028 458.2603 l
f
0 0 0 0.37 k
310.9028 458.2603 m
311.4054 458.5117 l
312.4108 457.0037 l
312.1594 456.7524 l
310.9028 458.2603 l
310.9028 458.2603 l
f
0 0 0 0.38 k
311.1541 458.5117 m
311.4054 458.5117 l
312.6621 457.0037 l
312.4108 456.7524 l
311.1541 458.5117 l
311.1541 458.5117 l
f
311.4054 458.5117 m
311.6568 458.763 l
312.6621 457.255 l
312.4108 457.0037 l
311.4054 458.5117 l
311.4054 458.5117 l
f
0 0 0 0.39 k
311.4054 458.5117 m
311.6568 458.763 l
312.9134 457.255 l
312.6621 457.0037 l
311.4054 458.5117 l
311.4054 458.5117 l
f
0 0 0 0.4 k
311.6568 458.763 m
311.9081 459.0143 l
313.1648 457.5064 l
312.6621 457.255 l
311.6568 458.763 l
311.6568 458.763 l
f
311.6568 458.763 m
312.1594 459.0143 l
313.1648 457.5064 l
312.9134 457.255 l
311.6568 458.763 l
311.6568 458.763 l
f
0 0 0 0.41 k
311.9081 459.0143 m
312.1594 459.2657 l
313.4161 457.7577 l
313.1648 457.5064 l
311.9081 459.0143 l
311.9081 459.0143 l
f
312.1594 459.0143 m
312.4108 459.2657 l
313.4161 457.7577 l
313.1648 457.5064 l
312.1594 459.0143 l
312.1594 459.0143 l
f
0 0 0 0.42 k
312.1594 459.2657 m
312.4108 459.517 l
313.6674 457.7577 l
313.4161 457.7577 l
312.1594 459.2657 l
312.1594 459.2657 l
f
0 0 0 0.43 k
312.4108 459.2657 m
312.6621 459.517 l
313.9187 458.009 l
313.6674 457.7577 l
312.4108 459.2657 l
312.4108 459.2657 l
f
312.4108 459.517 m
312.9134 459.7683 l
313.9187 458.009 l
313.6674 457.7577 l
312.4108 459.517 l
312.4108 459.517 l
f
0 0 0 0.44 k
312.6621 459.517 m
312.9134 459.7683 l
314.1701 458.2603 l
313.9187 458.009 l
312.6621 459.517 l
312.6621 459.517 l
f
0 0 0 0.45 k
312.9134 459.7683 m
313.1648 460.0196 l
314.4214 458.2603 l
313.9187 458.009 l
312.9134 459.7683 l
312.9134 459.7683 l
f
312.9134 459.7683 m
313.1648 460.0196 l
314.4214 458.5117 l
314.1701 458.2603 l
312.9134 459.7683 l
312.9134 459.7683 l
f
0 0 0 0.46 k
313.1648 460.0196 m
313.4161 460.271 l
314.6727 458.5117 l
314.4214 458.2603 l
313.1648 460.0196 l
313.1648 460.0196 l
f
0 0 0 0.47 k
313.1648 460.0196 m
313.6674 460.271 l
314.9241 458.763 l
314.4214 458.5117 l
313.1648 460.0196 l
313.1648 460.0196 l
f
313.4161 460.271 m
313.6674 460.5223 l
314.9241 458.763 l
314.6727 458.5117 l
313.4161 460.271 l
313.4161 460.271 l
f
0 0 0 0.48 k
313.6674 460.271 m
313.9187 460.5223 l
315.1754 459.0143 l
314.6727 458.763 l
313.6674 460.271 l
313.6674 460.271 l
f
0 0 0 0.49 k
313.6674 460.271 m
313.9187 460.5223 l
315.1754 459.0143 l
314.9241 458.763 l
313.6674 460.271 l
313.6674 460.271 l
f
313.9187 460.5223 m
314.1701 460.7736 l
315.4267 459.2657 l
315.1754 459.0143 l
313.9187 460.5223 l
313.9187 460.5223 l
f
0 0 0 0.5 k
314.1701 460.7736 m
314.4214 460.7736 l
315.6781 459.2657 l
315.1754 459.0143 l
314.1701 460.7736 l
314.1701 460.7736 l
f
314.1701 460.7736 m
314.4214 461.025 l
315.6781 459.517 l
315.4267 459.2657 l
314.1701 460.7736 l
314.1701 460.7736 l
f
0 0 0 0.51 k
314.4214 460.7736 m
314.6727 461.025 l
315.9294 459.517 l
315.6781 459.2657 l
314.4214 460.7736 l
314.4214 460.7736 l
f
0 0 0 0.52 k
314.4214 461.025 m
314.6727 461.2763 l
315.9294 459.517 l
315.6781 459.2657 l
314.4214 461.025 l
314.4214 461.025 l
f
314.6727 461.025 m
314.9241 461.2763 l
316.1807 459.7683 l
315.9294 459.517 l
314.6727 461.025 l
314.6727 461.025 l
f
0 0 0 0.53 k
314.6727 461.2763 m
315.1754 461.5276 l
316.432 459.7683 l
315.9294 459.517 l
314.6727 461.2763 l
314.6727 461.2763 l
f
0 0 0 0.54 k
314.9241 461.2763 m
315.1754 461.5276 l
316.432 460.0196 l
316.1807 459.7683 l
314.9241 461.2763 l
314.9241 461.2763 l
f
315.1754 461.5276 m
315.4267 461.779 l
316.6834 460.0196 l
316.432 459.7683 l
315.1754 461.5276 l
315.1754 461.5276 l
f
0 0 0 0.55 k
315.1754 461.5276 m
315.4267 461.779 l
316.9347 460.271 l
316.432 460.0196 l
315.1754 461.5276 l
315.1754 461.5276 l
f
0 0 0 0.56 k
315.4267 461.779 m
315.6781 462.0303 l
316.9347 460.271 l
316.6834 460.0196 l
315.4267 461.779 l
315.4267 461.779 l
f
315.4267 461.779 m
315.6781 462.0303 l
317.186 460.5223 l
316.9347 460.271 l
315.4267 461.779 l
315.4267 461.779 l
f
0 0 0 0.57 k
315.6781 462.0303 m
315.9294 462.2816 l
317.186 460.5223 l
316.9347 460.271 l
315.6781 462.0303 l
315.6781 462.0303 l
f
0 0 0 0.58 k
315.9294 462.0303 m
316.1807 462.2816 l
317.4373 460.7736 l
317.186 460.5223 l
315.9294 462.0303 l
315.9294 462.0303 l
f
315.9294 462.2816 m
316.1807 462.533 l
317.6887 460.7736 l
317.186 460.5223 l
315.9294 462.2816 l
315.9294 462.2816 l
f
0 0 0 0.59 k
316.1807 462.2816 m
316.432 462.533 l
317.6887 461.025 l
317.4373 460.7736 l
316.1807 462.2816 l
316.1807 462.2816 l
f
316.1807 462.533 m
316.6834 462.7843 l
317.94 461.025 l
317.6887 460.7736 l
316.1807 462.533 l
316.1807 462.533 l
f
0 0 0 0.6 k
316.432 462.533 m
316.6834 462.7843 l
317.94 461.2763 l
317.6887 461.025 l
316.432 462.533 l
316.432 462.533 l
f
0 0 0 0.61 k
316.432 462.7843 m
316.9347 463.0356 l
318.1913 461.2763 l
317.94 461.025 l
316.432 462.7843 l
316.432 462.7843 l
f
316.6834 462.7843 m
316.9347 463.0356 l
318.4427 461.2763 l
317.94 461.025 l
316.6834 462.7843 l
316.6834 462.7843 l
f
0 0 0 0.62 k
316.9347 463.0356 m
317.186 463.2869 l
318.694 461.5276 l
318.4427 461.2763 l
316.9347 463.0356 l
316.9347 463.0356 l
f
0 0 0 0.63 k
316.9347 463.0356 m
317.186 463.2869 l
318.694 461.5276 l
318.4427 461.2763 l
316.9347 463.0356 l
316.9347 463.0356 l
f
317.186 463.2869 m
317.4373 463.5382 l
318.9453 461.779 l
318.694 461.5276 l
317.186 463.2869 l
317.186 463.2869 l
f
0 0 0 0.64 k
317.186 463.2869 m
317.6887 463.5382 l
318.9453 461.779 l
318.694 461.5276 l
317.186 463.2869 l
317.186 463.2869 l
f
0 0 0 0.65 k
317.4373 463.5382 m
317.6887 463.7896 l
319.1967 462.0303 l
318.9453 461.779 l
317.4373 463.5382 l
317.4373 463.5382 l
f
317.6887 463.5382 m
317.94 463.7896 l
319.448 462.0303 l
319.1967 461.779 l
317.6887 463.5382 l
317.6887 463.5382 l
f
0 0 0 0.66 k
317.6887 463.7896 m
317.94 464.0409 l
319.448 462.2816 l
319.1967 462.0303 l
317.6887 463.7896 l
317.6887 463.7896 l
f
0 0 0 0.67 k
317.94 463.7896 m
318.4427 464.0409 l
319.6993 462.2816 l
319.448 462.0303 l
317.94 463.7896 l
317.94 463.7896 l
f
317.94 464.0409 m
318.4427 464.2922 l
319.9506 462.533 l
319.448 462.2816 l
317.94 464.0409 l
317.94 464.0409 l
f
0 0 0 0.68 k
318.1913 464.2922 m
318.694 464.5436 l
319.9506 462.533 l
319.6993 462.2816 l
318.1913 464.2922 l
318.1913 464.2922 l
f
318.4427 464.2922 m
318.694 464.5436 l
320.202 462.7843 l
319.9506 462.533 l
318.4427 464.2922 l
318.4427 464.2922 l
f
0 0 0 0.69 k
318.694 464.5436 m
318.9453 464.5436 l
320.202 462.7843 l
319.9506 462.533 l
318.694 464.5436 l
318.694 464.5436 l
f
0 0 0 0.7 k
318.694 464.5436 m
319.1967 464.7949 l
320.4533 463.0356 l
320.202 462.7843 l
318.694 464.5436 l
318.694 464.5436 l
f
318.9453 464.7949 m
319.1967 464.7949 l
320.7046 463.0356 l
320.202 462.7843 l
318.9453 464.7949 l
318.9453 464.7949 l
f
0 0 0 0.71 k
319.1967 464.7949 m
319.448 465.0462 l
320.7046 463.2869 l
320.4533 463.0356 l
319.1967 464.7949 l
319.1967 464.7949 l
f
0 0 0 0.72 k
319.1967 464.7949 m
319.448 465.0462 l
320.9559 463.2869 l
320.7046 463.0356 l
319.1967 464.7949 l
319.1967 464.7949 l
f
319.448 465.0462 m
319.6993 465.2976 l
320.9559 463.5382 l
320.7046 463.2869 l
319.448 465.0462 l
319.448 465.0462 l
f
0 0 0 0.73 k
319.448 465.0462 m
319.6993 465.2976 l
321.2073 463.5382 l
320.9559 463.2869 l
319.448 465.0462 l
319.448 465.0462 l
f
0 0 0 0.74 k
319.6993 465.2976 m
319.9506 465.5489 l
321.4586 463.7896 l
320.9559 463.5382 l
319.6993 465.2976 l
319.6993 465.2976 l
f
319.6993 465.2976 m
320.202 465.5489 l
321.4586 463.7896 l
321.2073 463.5382 l
319.6993 465.2976 l
319.6993 465.2976 l
f
0 0 0 0.75 k
319.9506 465.5489 m
320.202 465.8002 l
321.7099 464.0409 l
321.4586 463.7896 l
319.9506 465.5489 l
319.9506 465.5489 l
f
0 0 0 0.76 k
320.202 465.5489 m
320.4533 465.8002 l
321.7099 464.2922 l
321.4586 463.7896 l
320.202 465.5489 l
320.202 465.5489 l
f
320.202 465.8002 m
320.7046 466.0515 l
321.9613 464.2922 l
321.7099 464.0409 l
320.202 465.8002 l
320.202 465.8002 l
f
0 0 0 0.77 k
320.4533 465.8002 m
320.7046 466.0515 l
322.2126 464.5436 l
321.7099 464.2922 l
320.4533 465.8002 l
320.4533 465.8002 l
f
320.7046 466.0515 m
320.9559 466.3029 l
322.2126 464.5436 l
321.9613 464.2922 l
320.7046 466.0515 l
320.7046 466.0515 l
f
0 0 0 0.78 k
320.7046 466.0515 m
321.2073 466.3029 l
322.4639 464.7949 l
322.2126 464.5436 l
320.7046 466.0515 l
320.7046 466.0515 l
f
0 0 0 0.79 k
320.9559 466.3029 m
321.2073 466.5542 l
322.4639 464.7949 l
322.2126 464.5436 l
320.9559 466.3029 l
320.9559 466.3029 l
f
321.2073 466.3029 m
321.4586 466.5542 l
322.7153 465.0462 l
322.4639 464.7949 l
321.2073 466.3029 l
321.2073 466.3029 l
f
0 0 0 0.8 k
321.2073 466.5542 m
321.4586 466.5542 l
322.9666 465.0462 l
322.4639 464.7949 l
321.2073 466.5542 l
321.2073 466.5542 l
f
0 0 0 0.81 k
321.4586 466.5542 m
321.7099 466.8055 l
322.9666 465.2976 l
322.7153 465.0462 l
321.4586 466.5542 l
321.4586 466.5542 l
f
321.4586 466.5542 m
321.9613 466.8055 l
323.2179 465.2976 l
322.9666 465.0462 l
321.4586 466.5542 l
321.4586 466.5542 l
f
0 0 0 0.82 k
321.7099 466.8055 m
321.9613 467.0569 l
323.2179 465.5489 l
322.9666 465.2976 l
321.7099 466.8055 l
321.7099 466.8055 l
f
0 0 0 0.83 k
321.9613 466.8055 m
322.2126 467.0569 l
323.4692 465.5489 l
323.2179 465.2976 l
321.9613 466.8055 l
321.9613 466.8055 l
f
321.9613 467.0569 m
322.2126 467.3082 l
323.4692 465.8002 l
323.2179 465.5489 l
321.9613 467.0569 l
321.9613 467.0569 l
f
0 0 0 0.84 k
322.2126 467.0569 m
322.4639 467.3082 l
323.7206 465.8002 l
323.4692 465.5489 l
322.2126 467.0569 l
322.2126 467.0569 l
f
0 0 0 0.85 k
322.4639 467.3082 m
322.7153 467.5595 l
323.9719 466.0515 l
323.4692 465.8002 l
322.4639 467.3082 l
322.4639 467.3082 l
f
322.4639 467.3082 m
322.7153 467.5595 l
323.9719 466.0515 l
323.7206 465.8002 l
322.4639 467.3082 l
322.4639 467.3082 l
f
0 0 0 0.86 k
322.7153 467.5595 m
322.9666 467.8108 l
324.2232 466.3029 l
323.9719 466.0515 l
322.7153 467.5595 l
322.7153 467.5595 l
f
322.7153 467.5595 m
322.9666 467.8108 l
324.2232 466.3029 l
323.9719 466.0515 l
322.7153 467.5595 l
322.7153 467.5595 l
f
0 0 0 0.87 k
322.9666 467.8108 m
323.2179 468.0622 l
324.4745 466.5542 l
324.2232 466.3029 l
322.9666 467.8108 l
322.9666 467.8108 l
f
0 0 0 0.88 k
322.9666 467.8108 m
323.4692 468.0622 l
324.7259 466.5542 l
324.2232 466.3029 l
322.9666 467.8108 l
322.9666 467.8108 l
f
323.2179 468.0622 m
323.4692 468.3135 l
324.7259 466.8055 l
324.4745 466.5542 l
323.2179 468.0622 l
323.2179 468.0622 l
f
0 0 0 0.89 k
323.4692 468.0622 m
323.7206 468.3135 l
324.9772 466.8055 l
324.7259 466.5542 l
323.4692 468.0622 l
323.4692 468.0622 l
f
0 0 0 0.9 k
323.4692 468.3135 m
323.7206 468.5648 l
324.9772 467.0569 l
324.7259 466.8055 l
323.4692 468.3135 l
323.4692 468.3135 l
f
323.7206 468.3135 m
323.9719 468.5648 l
325.2285 467.0569 l
324.9772 466.8055 l
323.7206 468.3135 l
323.7206 468.3135 l
f
0 0 0 0.91 k
323.7206 468.5648 m
324.2232 468.8161 l
325.2285 467.3082 l
324.9772 467.0569 l
323.7206 468.5648 l
323.7206 468.5648 l
f
0 0 0 0.92 k
323.9719 468.5648 m
324.2232 468.8161 l
325.4798 467.3082 l
325.2285 467.0569 l
323.9719 468.5648 l
323.9719 468.5648 l
f
324.2232 468.8161 m
324.4745 469.0675 l
325.7312 467.5595 l
325.2285 467.3082 l
324.2232 468.8161 l
324.2232 468.8161 l
f
0 0 0 0.93 k
324.2232 468.8161 m
324.4745 469.0675 l
325.7312 467.5595 l
325.4798 467.3082 l
324.2232 468.8161 l
324.2232 468.8161 l
f
0 0 0 0.94 k
324.4745 469.0675 m
324.7259 469.3188 l
325.9825 467.8108 l
325.7312 467.5595 l
324.4745 469.0675 l
324.4745 469.0675 l
f
324.4745 469.0675 m
324.9772 469.3188 l
325.9825 467.8108 l
325.7312 467.5595 l
324.4745 469.0675 l
324.4745 469.0675 l
f
0 0 0 0.95 k
324.7259 469.3188 m
324.9772 469.5701 l
326.2338 468.0622 l
325.7312 467.8108 l
324.7259 469.3188 l
324.7259 469.3188 l
f
324.9772 469.3188 m
325.2285 469.5701 l
326.2338 468.3135 l
325.9825 467.8108 l
324.9772 469.3188 l
324.9772 469.3188 l
f
0 0 0 0.96 k
324.9772 469.5701 m
325.2285 469.8215 l
326.4851 468.3135 l
326.2338 468.0622 l
324.9772 469.5701 l
324.9772 469.5701 l
f
0 0 0 0.97 k
325.2285 469.5701 m
325.4798 469.8215 l
326.7365 468.5648 l
326.2338 468.0622 l
325.2285 469.5701 l
325.2285 469.5701 l
f
325.2285 469.8215 m
325.4798 470.0728 l
326.7365 468.5648 l
326.4851 468.3135 l
325.2285 469.8215 l
325.2285 469.8215 l
f
0 0 0 0.98 k
325.4798 469.8215 m
325.7312 470.0728 l
326.9878 468.8161 l
326.7365 468.5648 l
325.4798 469.8215 l
325.4798 469.8215 l
f
0 0 0 0.99 k
325.4798 470.0728 m
325.9825 470.3241 l
326.9878 468.8161 l
326.7365 468.5648 l
325.4798 470.0728 l
325.4798 470.0728 l
f
325.7312 470.0728 m
325.9825 470.3241 l
327.2391 469.0675 l
326.9878 468.8161 l
325.7312 470.0728 l
325.7312 470.0728 l
f
0 0 0 1 k
327.2391 469.0675 m
326.2338 470.5754 l
325.9825 470.3241 l
326.9878 468.8161 l
327.2391 469.0675 l
327.2391 469.0675 l
f
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
0 0 612 792 C
0 66 576 66 2 L
9 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
318 634 576 730 R
7 X
V
0 15.5 Q
0 X
(NASA Technical Memorandum 4592) 323.1 719.67 T
72 72 576 615 R
7 X
V
72 581 576 591 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
72 581.64 610 581.64 2 L
1 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
0 24 Q
0 X
0 0 0 1 0 0 0 K
(ASSIST User Manual) 72 599 T
1 12 Q
(Sally C. Johnson) 72 563 T
(Langley Resear) 72 549 T
(ch Center \245 Hampton, V) 145.46 549 T
(ir) 263.8 549 T
(ginia) 271.58 549 T
(David P) 72 523 T
(. Boerschlein) 110.78 523 T
(Lockheed Engineering & Sciences Company \245 Hampton, V) 72 509 T
(ir) 355.8 509 T
(ginia) 363.59 509 T
72 40 576 57 R
7 X
V
0 15.5 Q
0 X
(August 1995) 490.13 46.67 T
72 144 320 387 R
7 X
V
72 72 576 140 R
V
330 144 576 240 R
V
195 632 314 733 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
195 632 314 733 R
7 X
0 0 0 1 0 0 0 K
V
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 1
%%Page: "2" 2
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
66.06 65.5 570 129 R
7 X
0 0 0 1 0 0 0 K
V
2 9 Q
0 X
(Printed copies available from the following:) 66.06 123 T
(NASA Center for AeroSpace Information) 66.06 101 T
(National Technical Information Service \050NTIS\051) 270.06 101 T
(800 Elkridge Landing Road) 66.06 90 T
(5285 Port Royal Road) 270.06 90 T
(Linthicum Heights, MD 21090-2934) 66.06 79 T
(Springfield, VA 22161-2171) 270.06 79 T
(\050301\051 621-0390) 66.06 68 T
(\050703\051 487-4650) 270.06 68 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0.34 (The use of trademarks or names of manufacturers in this report is for) 192 462 P
1.54 (accurate reporting and does not constitute an official endorsement,) 192 451 P
0.23 (either expressed or implied, of such products or manufacturers by the) 192 440 P
(National Aeronautics and Space Administration.) 192 429 T
66 142 572 151 R
7 X
V
0 X
(Available electronically at the following URL address:) 66 145 T
(http://techreports.larc.nasa.gov/ltrs/ltrs.html) 270.22 145 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 2
%%Page: "iii" 3
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(iii) 301.62 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Contents) 78 718 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(1. Introduction) 78 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 145.75 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(1) 528.5 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2. Basic Concepts) 78 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 159.5 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 528.5 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3. Input-Language Syntax) 78 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 195.25 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 528.5 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1. Language Building Blocks) 87 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 225.5 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 528.5 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.1. Identifiers) 96 633.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 170.5 633.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 528.5 633.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.2. Numeric Expressions) 96 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4) 528.5 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.3. Numeric Precision) 96 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 206.25 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 607.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.4. Boolean Expressions) 96 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 217.25 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 594.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.5. Arrays) 96 581.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 154 581.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 528.5 581.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.6. Ranges) 96 568.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 156.75 568.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6) 528.5 568.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.7. Repetition) 96 555.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 170.5 555.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 555.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.8. Built-in Functions) 96 542.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 206.25 542.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 542.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.8.1. Mathematical functions) 105 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 247.5 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 529.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.8.2. Trigonometric functions) 105 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 250.25 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 516.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.8.3. Combinatorial functions) 105 503.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 250.25 503.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 528.5 503.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.1.8.4. Array/list functions) 105 490.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228.25 490.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 528.5 490.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2. Language Statements) 87 473.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 200.75 473.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9) 528.5 473.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1. Setup Section) 96 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 187 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 523 458.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.1. Constant definition statement) 105 445.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 272.25 445.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(10) 523 445.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.2. Option definitions) 105 432.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 222.75 432.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(11) 523 432.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.3. INPUT statement) 105 419.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 419.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(12) 523 419.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.4. Comments) 105 406.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 189.75 406.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 523 406.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.5. Quoted SURE statement) 105 393.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 250.25 393.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(13) 523 393.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.1.6. SPACE statement) 105 380.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 380.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(14) 523 380.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.2. Start Section) 96 367.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 181.5 367.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 523 367.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.3. IMPLICIT Statement) 96 354.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 354.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16) 523 354.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.4. FUNCTION Statement) 96 341.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228.25 341.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(17) 523 341.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.5. VARIABLE Statement) 96 328.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228.25 328.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(18) 523 328.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.6. START Statement) 96 315.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 206.25 315.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(20) 523 315.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7. Rule Section) 96 302.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 181.5 302.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 523 302.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.1. TRANTO statement) 105 289.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 231 289.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(21) 523 289.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.2. Block IF construct) 105 276.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 222.75 276.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 523 276.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.3. FOR construct) 105 263.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 206.25 263.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(24) 523 263.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.4. ASSERT statement) 105 250.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228.25 250.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 523 250.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.5. DEATHIF statement) 105 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 233.75 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 523 237.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3.2.7.6. PRUNEIF statement) 105 224.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 233.75 224.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(26) 523 224.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4. Model Reduction Techniques) 78 207.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 207.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(27) 523 207.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.1. Model Pruning) 87 190.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 173.25 190.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 523 190.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.2. Model Trimming) 87 173.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 184.25 173.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(28) 523 173.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(4.3. Assignment of State Numbers) 87 156.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 239.25 156.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 523 156.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5. Model Generation Algorithm) 78 139.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 139.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(29) 523 139.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6. File Processing) 78 122.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 156.75 122.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(31) 523 122.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1. Input File) 87 105.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 151.25 105.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 523 105.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.1. Model File) 96 90.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 173.25 90.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 523 90.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.2. Log File) 96 77.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 162.25 77.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(33) 523 77.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iii" 3
%%Page: "iv" 4
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(iv) 301.92 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(6.1.3. Object File) 96 718.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 173.25 718.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 523 718.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(6.1.4. Temporary Files) 96 705.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 198 705.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 523 705.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7. Examples) 78 688.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 134.75 688.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 523 688.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.1. Triad With Cold Spares) 87 671.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 211.75 671.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(34) 523 671.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.2. Many Triads With Pool of Spares) 87 654.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 255.75 654.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(39) 523 654.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.3. Quad With Transient Faults) 87 637.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 231 637.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 523 637.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.4. Monitored Sensor Failure) 87 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 220 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(41) 523 620.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.5. Two Triads With Three Power Supplies) 87 603.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 283.25 603.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(42) 523 603.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.6. Triad With Intermittent Faults) 87 586.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 239.25 586.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(44) 523 586.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.7. Degradable Triad With Intermittent Faults) 87 569.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 294.25 569.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(46) 523 569.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7.8. Triad With Hot/Warm/Cold Spares) 87 552.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 261.25 552.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(47) 523 552.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8. Command-Line Parameters and Options) 78 535.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 266.75 535.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(50) 523 535.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.1. Controlling Error/Warning Limits) 87 518.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 258.5 518.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 523 518.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.2. Changing Allowable Input-Line Width) 87 501.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 277.75 501.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 523 501.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.3. Generating Identifier Cross-Reference Map) 87 484.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 299.75 484.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(51) 523 484.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.4. Piping Model to Standard Output) 87 467.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 253 467.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 523 467.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.5. Batch Mode) 87 450.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 162.25 450.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 523 450.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8.6. Controlling Printing of Warning Messages) 87 433.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 294.25 433.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 523 433.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(9. Concluding Remarks) 78 416.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 184.25 416.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(52) 523 416.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appendix A\321) 78 399.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Expression Precedence) 143.08 399.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 247.5 399.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 523 399.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appendix B\321) 78 382.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(BNF Language Description) 142.47 382.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 266.75 382.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(56) 523 382.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appendix C\321) 78 365.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Errors/Warnings Detected) 142.47 365.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 258.5 365.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(65) 523 365.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appendix D\321) 78 348.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Debugging ASSIST Input Files) 143.08 348.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 283.25 348.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(91) 523 348.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Appendix E\321) 78 331.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Command-Line Options) 141.85 331.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 250.25 331.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(93) 523 331.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(References) 78 314.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 129.25 314.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(96) 523 314.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(List of T) 78 289 T
(ables) 120.9 289 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(Table 1.) 78 270.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Truth Table for) 120 270.67 T
3 F
(AND) 190.57 270.67 T
2 F
( Conjunction) 214.39 270.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 272.25 270.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 270.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 2.) 78 253.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Truth Table for) 120 253.67 T
3 F
(OR) 190.57 253.67 T
2 F
( Conjunction) 207.07 253.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 266.75 253.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 253.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 3.) 78 236.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Truth Table for) 120 236.67 T
3 F
(XOR) 190.57 236.67 T
2 F
( Conjunction) 215.01 236.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 272.25 236.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 236.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 4.) 78 219.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Truth Table for) 120 219.67 T
3 F
(NOT) 190.57 219.67 T
2 F
( Conjunction) 214.4 219.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 272.25 219.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(5) 528.5 219.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 5.) 78 202.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Built-in Math Functions) 120 202.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 228.25 202.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 202.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 6.) 78 185.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Built-in Trigonometric Functions) 120 185.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 266.75 185.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(7) 528.5 185.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 7.) 78 168.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Built-in Combinatorial Functions) 120 168.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 266.75 168.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 528.5 168.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 8.) 78 151.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Built-in Array/List  Functions) 120 151.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 253 151.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(8) 528.5 151.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 9.) 78 134.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Bits Required to Pack a State-Space Variable) 120 134.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 321.75 134.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15) 523 134.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table 10.) 78 117.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Number of Model States for Various Initial Configurations \050With) 126 117.67 T
4 F
(ONEDEATH OFF) 416.55 117.67 T
2 F
(\051) 495.75 117.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . .) 500.5 117.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(40) 523 117.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table A1.) 78 100.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Order of Precedence Used by ASSIST for Mathematical Expressions) 126 100.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . .) 431.75 100.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(54) 523 100.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Table C1.) 78 83.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(ASSIST Warning Levels) 126 83.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 236.5 83.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(87) 523 83.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "iv" 4
%%Page: "v" 5
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(v) 303.38 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(List of Figur) 78 718 T
(es) 142.45 718 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(Figure 1.) 78 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semi-Markov triad model \050SURE state numbers\051) 123 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 341 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(2) 528.5 699.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Figure 2.) 78 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semi-Markov triad model \050ASSIST state numbers\051) 123 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 349.25 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(3) 528.5 682.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Figure 3.) 78 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Data file flow in ASSIST) 123 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .) 236.5 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(32) 523 665.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Figure 4.) 78 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semi-Markov triad model with cold spares \050ASSIST state numbers\051) 123 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(. . . . . . . . . . . . . . . . . .) 423.5 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(37) 523 648.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Figure 5.) 78 631.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(Semi-Markov triad model with cold spares \050SURE state numbers\051) 123 631.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
( . . . . . . . . . . . . . . . . . . .) 415.25 631.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(38) 523 631.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "v" 5
%%Page: "1" 6
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
0 X
0 0 0 1 0 0 0 K
(Abstract) 292.67 718 T
5 11 Q
-0.23 (Semi-Markov models can be used to analyze the reliability of virtu-) 177 688.67 P
0.55 (ally any fault-tolerant system. However, the process of delineating all) 159 675.67 P
0 (the states and transitions in the model of a complex system can be dev-) 159 662.67 P
0.01 (astatingly tedious and error prone. The Abstract Semi-Markov Specifi-) 159 649.67 P
2.19 (cation Interface to the Semi-Markov Unreliability Range Evaluator) 159 636.67 P
0.62 (\050SURE\051 Tool \050ASSIST\051 computer program allows the user to describe) 159 623.67 P
0.25 (the semi-Markov model in a high-level language. Instead of listing the) 159 610.67 P
2.69 (individual model states, the user specifies the rules governing the) 159 597.67 P
0.11 (behavior of the system, and these are used to generate the model auto-) 159 584.67 P
1.47 (matically. A few statements in the abstract language can describe a) 159 571.67 P
1.16 (very large, complex model. Because no assumptions are made about) 159 558.67 P
1.96 (the system being modeled, ASSIST can be used to generate models) 159 545.67 P
1.41 (describing the behavior of any system. The ASSIST program and its) 159 532.67 P
(input language are described and illustrated by examples.) 159 519.67 T
3 12 Q
(10. Intr) 87 491 T
(oduction) 125.45 491 T
2 11 Q
0.51 (Semi-Markov models can be used to calculate the reliability of virtually any fault-tolerant system.) 105 470.67 P
0.91 (New advances in computation, such as the Semi-Markov Unreliability Range Evaluator \050SURE\051 pro-) 87 457.67 P
0.49 (gram, enable the accurate solution of extremely large and complex Markov models \050refs. 1 and 2\051. \050In) 87 444.67 P
0.88 (this paper, the term) 87 431.67 P
5 F
0.88 (Markov) 178.18 431.67 P
2 F
0.88 ( will be used to refer to both Markov and the more general semi-Markov) 212.39 431.67 P
0.36 (models.\051 However, the generation \050by hand\051 of the large models needed to capture the complex failure) 87 418.67 P
0.48 (and reconfiguration behavior of most realistic fault-tolerant architectures has been an intractable prob-) 87 405.67 P
0.52 (lem. Many of the early fault-tolerant architectures are relatively simple to model. Even the early com-) 87 392.67 P
0.57 (plex systems usually had subsystems that could be modeled independently. However, as flight-critical) 87 379.67 P
0.95 (systems become more complex and more highly integrated, the Markov models describing them will) 87 366.67 P
0.01 (become enormously complex. The complexity of the model stems from the interactions between failure) 87 353.67 P
(and recovery processes of the various subsystems, which can no longer be modeled independently.) 87 340.67 T
1.05 (Often, even the most complex system characteristics can be described by relatively simple rules.) 105 319.67 P
0.76 (The models only become complex because these few rules combine many times to form models with) 87 306.67 P
0.91 (large numbers of states and transitions between them. The rules describing the behavior of each sub-) 87 293.67 P
0.19 (system can be developed and verified separately; the submodels are then easily combined to accurately) 87 280.67 P
0.05 (model the behavior of the entire integrated system. Butler \050ref. 3\051 developed an abstract, high-level lan-) 87 267.67 P
2.1 (guage for describing system behavior rules and a methodology for automatically generating semi-) 87 254.67 P
1.21 (Markov models from the language. This methodology was implemented in a computer program, the) 87 241.67 P
2.18 (Abstract Semi-Markov Specification Interface to the SURE Tool \050ASSIST\051. ASSIST is written in) 87 228.67 P
0.53 (ANSI-standard \322C\323 and executes under the VMS and UNIX operating systems. The ASSIST program) 87 215.67 P
1.74 (produces a file containing the generated semi-Markov model in the format needed for input to the) 87 202.67 P
1.61 (Langley-developed reliability analysis programs SURE, STEM \050Scaled Taylor Exponential Matrix\051,) 87 189.67 P
0.28 (and PAWS \050Pad\216 Approximation with Scaling \050ref. 4\051\051. For Markov analysis programs requiring a dif-) 87 176.67 P
1.2 (ferent form of input for the Markov model, a simple program could be written to modify the model) 87 163.67 P
(description file.) 87 150.67 T
0.17 (Describing a system in the ASSIST abstract input language forces the reliability engineer to under-) 105 129.67 P
0.64 (stand clearly the fault tolerance strategies of the system, and the abstract description is also useful for) 87 116.67 P
(communicating and validating the system model.) 87 103.67 T
0.95 (This paper describes the ASSIST computer program and input language and shows a few simple) 105 82.67 P
0.21 (examples. For a detailed tutorial on how to use the SURE and ASSIST programs, the reader is referred) 87 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 6
%%Page: "2" 7
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(2) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
-0.16 (to reference 5. The basic concepts of the ASSIST program are introduced in section 2. The syntax of the) 87 718.67 P
0.79 (ASSIST input language is detailed in section 3, and techniques for reducing the size of the generated) 87 705.67 P
0.95 (model are described in section 4. Section 5 presents the algorithm used to generate the semi-Markov) 87 692.67 P
2.39 (reliability model from the input description. The files generated by the program are described in) 87 679.67 P
-0.01 (section) 87 666.67 P
-0.01 (6. Section 7 leads the reader through a number of example problems. Finally, the commands for) 120.91 666.67 P
(executing the ASSIST program are presented in section 8, followed by the Concluding Remarks.) 87 653.67 T
3 12 Q
(1) 87 624.91 T
(1. Basic Concepts) 92.34 624.91 T
2 11 Q
0.93 (The ASSIST program is based on concepts that are used to design compilers. The ASSIST input) 105 603.48 P
0.01 (language defines rules for generating a model. The model states are defined by a set of state-space vari-) 87 590.48 P
0.34 (ables, which represent system-state characteristics such as the number of failed processors or the num-) 87 577.48 P
0.71 (ber of spares. The model generation rules are first applied to a) 87 564.48 P
5 F
0.71 (start state) 371.4 564.48 P
2 F
0.71 (. The rules create transitions) 415.82 564.48 P
0.65 (from the start state to new states. The program then applies the rules to the newly created states. This) 87 551.48 P
0.41 (process is continued until all states are either) 87 538.48 P
5 F
0.41 (death) 290.12 538.48 P
2 F
0.41 ( states or have already been processed. The expres-) 314.57 538.48 P
-0.14 (siveness of the ASSIST language is derived from the use of) 87 525.48 P
5 F
-0.14 (recursive) 350.32 525.48 P
2 F
-0.14 ( semantics for its constructs. Thus,) 391.25 525.48 P
0.04 (a small, compact description in the ASSIST input language can efficiently, yet accurately, represent the) 87 512.48 P
1.91 (failure behavior of a system that may require an extremely large semi-Markov model to solve for) 87 499.48 P
(system-failure probability.) 87 486.48 T
0.11 (Absorbing model states \050i.e., states with no transitions leaving them\051 represent system failure. Typ-) 105 464.39 P
0.69 (ically, the reliability engineer needs to determine the probability of entering an absorbing state within) 87 451.39 P
-0.2 (the specified mission time. The absorbing state \050death conditions\051 of the model must be defined in terms) 87 438.39 P
0.58 (of state-space variables. These death conditions could be system failure, the onset of degraded perfor-) 87 425.39 P
(mance operation, or other situations resulting from failures.) 87 412.39 T
-0.21 (Consider an example system that has a triad of processors performing the same function. A majority) 105 390.29 P
1.25 (voter is used to detect and resolve any discrepancies between the outputs of the three processors. A) 87 377.29 P
0.01 (semi-Markov reliability model for this example appears in figure 6. In this figure, the triad begins oper-) 87 364.29 P
0.38 (ation in state 1 with three working processors. Processor failures are exponentially distributed at a rate) 87 351.29 P
0.77 (of) 87 338.29 P
6 F
0.77 (l) 99.69 338.29 P
2 F
0.77 (. Since there are three processors that can fail, there is a transition leaving state 1 at a rate of 3) 105.73 338.29 P
6 F
0.77 (l) 534.21 338.29 P
2 F
0.77 (.) 540.25 338.29 P
0.02 (After one of the three processors fails, the system is in state 2. In this state, the system is still functional) 87 325.29 P
-0.02 (since there are two working processors and one failed one. The failed processor is outvoted by the good) 87 312.29 P
-0.25 (processors. After one of the two remaining processors fails at rate) 87 299.29 P
6 F
-0.25 (l) 376.32 299.29 P
2 F
-0.25 (, the system is in state 3. This state is) 382.36 299.29 P
0.68 (a failure death state, because there are two failed processors and one good processor and the majority) 87 286.29 P
0.82 (voter can no longer correctly eliminate the erroneous outputs. Death states \050absorbing states\051 are pre-) 87 273.29 P
(cisely those with no arrows leaving them.) 87 260.29 T
(An ASSIST input description that would generate the above model is) 105 138.76 T
4 10 Q
(LAMBDA = 1.2E-4;) 132 117.33 T
(SPACE = \050NP:1..3,NFP:0..3\051;) 132 105.33 T
(START = \0503,0\051;) 132 93.33 T
(DEATHIF \050NFP>=\050NP-NFP\051\051;) 132 81.33 T
(IF \050NFP<3\051 TRANTO NFP=NFP+1 BY \050NP-NFP\051*LAMBDA;) 132 69.33 T
2 9 Q
(Figure 6.  Semi-Markov triad model \050SURE state numbers\051.) 207.01 176.19 T
87 182.19 543 232.63 C
192.5 193.19 437.5 232.63 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 187 374 420 417 233 43 198.5 191.41 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/fig1.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (fig1.ps)
%%CreationDate: (3/9/95) (10:22 AM)
%%BoundingBox: 187 374 420 417
%%DocumentProcessColors: Black
%%DocumentFonts: Symbol
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 150.5 356.5 461.5 435.5
%AI3_TemplateFile: DiamondDrive510::21322:t-1
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Symbol
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 0.75 w 4 M []0 d
%AI3_Note:
0 D
208 377.4688 m
217.9582 377.4688 226.0312 385.5418 226.0312 395.5 c
226.0312 405.4582 217.9582 413.5312 208 413.5312 c
198.0418 413.5312 189.9688 405.4582 189.9688 395.5 c
189.9688 385.5418 198.0418 377.4688 208 377.4688 c
s
208 395.5 m
S
U
226 395.5 m
282.5 395.5 l
S
0 To
1 0 0 1 208 392.5 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(1) Tx 
(\r) TX 
TO
u
285.1963 395.5 m
278.645 393.9565 l
280.0513 395.5 L
278.645 397.0435 l
285.1963 395.5 L
f
U
u
0 R
0 G
0.75 w
303.5 377.4688 m
313.4582 377.4688 321.5312 385.5418 321.5312 395.5 c
321.5312 405.4582 313.4582 413.5312 303.5 413.5312 c
293.5418 413.5312 285.4688 405.4582 285.4688 395.5 c
285.4688 385.5418 293.5418 377.4688 303.5 377.4688 c
s
303.5 395.5 m
S
U
321.5 395.5 m
378 395.5 l
S
0 To
1 0 0 1 303.5 392.5 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(2) Tx 
(\r) TX 
TO
u
380.6963 395.5 m
374.145 393.9565 l
375.5513 395.5 L
374.145 397.0435 l
380.6963 395.5 L
f
U
u
0 R
0 G
0.75 w
399 377.4688 m
408.9582 377.4688 417.0312 385.5418 417.0312 395.5 c
417.0312 405.4582 408.9582 413.5312 399 413.5312 c
389.0418 413.5312 380.9688 405.4582 380.9688 395.5 c
380.9688 385.5418 389.0418 377.4688 399 377.4688 c
s
399 395.5 m
S
U
0 To
1 0 0 1 399 392.5 0 Tp
TP
-2.25 0 Td
0 Tr
0 O
0 g
1 w
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 253.5 400 0 Tp
TP
-4.7197 0 Td
0 Tr
(3) Tx 
/_Symbol 9 Tf
(l) Tx 
(\r) TX 
TO
0 To
1 0 0 1 349 400 0 Tp
TP
-4.7197 0 Td
0 Tr
/_Times-Roman 9 Tf
(2) Tx 
/_Symbol 9 Tf
(l) Tx 
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
87 182.19 543 232.63 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "2" 7
%%Page: "3" 8
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(3) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.59 (The first input-description statement defines) 105 718.67 P
4 F
1.42 (LAMBDA) 305.63 718.67 P
2 F
0.59 (, a constant with a value of) 345.23 718.67 P
0.59 (. This) 517.35 718.67 P
-0.16 (constant will be used to denote the exponential processor failure rate in the example. The next statement) 87 705.67 P
0.31 (defines the state space as an ordered pair of integers. The first integer is named) 87 692.67 P
4 F
0.76 (NP) 441.8 692.67 P
2 F
0.31 ( \050number of proces-) 455 692.67 P
0.16 (sors\051 and can take on values between 1 and 3. The second integer is named) 87 679.67 P
4 F
0.38 (NFP) 421.76 679.67 P
2 F
0.16 ( \050number of failed pro-) 441.56 679.67 P
0.44 (cessors\051 and can take on values between 0 and 3. The third statement indicates that the model starts in) 87 666.67 P
-0.23 (state \0503,0\051. This state has three processors and none failed. The words) 87 653.67 P
4 F
-0.56 (LAMBDA) 393.05 653.67 P
2 F
-0.23 (,) 432.65 653.67 P
4 F
-0.56 (NP) 437.92 653.67 P
2 F
-0.23 (, and) 451.11 653.67 P
4 F
-0.56 (NFP) 474.78 653.67 P
2 F
-0.23 ( are simply) 494.58 653.67 P
(names chosen for this particular example; they have no intrinsic meaning to the ASSIST program.) 87 640.67 T
1.3 (The) 105 620.2 P
4 F
3.13 (DEATHIF) 126.16 620.2 P
2 F
1.3 ( statement indicates that system failure \050death\051 occurs when the number of failed) 172.36 620.2 P
(processors equals or exceeds the number of working processors.) 87 607.2 T
1.03 (The last statement is a) 105 586.74 P
4 F
2.46 (TRANTO) 210.65 586.74 P
2 F
1.03 ( statement. The) 250.25 586.74 P
4 F
2.46 (IF) 323.6 586.74 P
2 F
1.03 ( clause specifies that this transition is valid if) 336.8 586.74 P
0.65 (there is still a working processor left. The) 87 573.74 P
4 F
1.56 (TRANTO) 278.25 573.74 P
2 F
0.65 ( clause describes how to compute the ordered pair) 317.85 573.74 P
0.14 (representing the new state from the old state values. In this example, the number of faulty processors is) 87 560.74 P
(increased by one. The) 87 547.74 T
4 F
(BY) 186.27 547.74 T
2 F
( clause defines the rate at which the transition occurs.) 199.48 547.74 T
0.12 (Every ASSIST input description must contain a) 105 527.28 P
4 F
0.29 (SPACE) 318.2 527.28 P
2 F
0.12 ( statement, a) 351.2 527.28 P
4 F
0.29 (START) 409.61 527.28 P
2 F
0.12 ( statement, at least one) 442.61 527.28 P
4 F
2.41 (TRANTO) 87 514.28 P
2 F
1 ( statement, and at least one) 126.6 514.28 P
4 F
2.41 (DEATHIF) 253.91 514.28 P
2 F
1 ( statement. Figure 7 shows the semi-Markov example) 300.11 514.28 P
(model for the system with the states labeled with the corresponding ASSIST state-space values.) 87 501.28 T
3 12 Q
(12. Input-Language Syntax) 87 378.71 T
2 11 Q
1.21 (This section contains a detailed description of the ASSIST input-language syntax. The first sub-) 105 358.91 P
0.5 (section introduces the lexical details and basic building blocks of the language, such as identifiers and) 87 345.91 P
(expressions. The ASSIST statements themselves are then described in the second subsection.) 87 332.91 T
3 10.5 Q
(12.1. Language Building Blocks) 105 306.78 T
2 11 Q
0.58 (This section introduces the syntax for the identifier names, numeric and Boolean expressions, and) 105 287.48 P
(built-in functions that are the basic building blocks of the ASSIST input language.) 87 274.48 T
7 10.5 Q
(12.1.1. Identi\336ers) 105 248.35 T
2 11 Q
-0.12 (An identifier is a name that is assigned to a constant or variable in the language. All identifiers must) 105 229.06 P
(begin with a letter and contain letters, digits, or underscored characters.) 87 216.06 T
(The following are valid identifiers:) 105 195.59 T
4 10 Q
(A) 132 175.8 T
(ABC) 132 163.8 T
(PI) 132 151.8 T
(MU_TRIAD) 132 139.8 T
(X123) 132 127.8 T
2 11 Q
0.19 (An ASSIST identifier must not exceed 28 characters. Identifiers used for named constants that will) 105 108.67 P
-0.06 (be passed to SURE must be unique in the first 12 characters. Constant array names should generally not) 87 95.67 P
1.37 (exceed eight characters. Section 3.2.1 \050Setup Section\051 discusses constant definitions and gives more) 87 82.67 P
(details on the limitations of constant array names.) 87 69.67 T
2 9 Q
(Figure 7.  Semi-Markov triad model \050ASSIST state numbers\051.) 203.51 417.17 T
470.36 714.04 517.35 729.35 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(1) 471.36 718.67 T
(.) 476.61 718.67 T
(2) 479.24 718.67 T
(1) 495.5 718.67 T
(0) 500.75 718.67 T
2 8.5 Q
(4) 511.1 721.97 T
(\320) 506.53 721.97 T
6 10.5 Q
(\264) 487.11 718.67 T
0 0 612 792 C
87 423.17 543 473.61 C
192.5 434.17 437.5 473.61 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 190 376 423 419 233 43 198.5 432.39 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/fig2.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (fig2.ps)
%%CreationDate: (3/9/95) (10:23 AM)
%%BoundingBox: 190 376 423 419
%%DocumentProcessColors: Black
%%DocumentFonts: Symbol
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 177.5 364 434.5 428
%AI3_TemplateFile: DiamondDrive510::21322:t-2
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Symbol
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 0.75 w 4 M []0 d
%AI3_Note:
0 D
211 379.4688 m
220.9582 379.4688 229.0312 387.5418 229.0312 397.5 c
229.0312 407.4582 220.9582 415.5312 211 415.5312 c
201.0418 415.5312 192.9688 407.4582 192.9688 397.5 c
192.9688 387.5418 201.0418 379.4688 211 379.4688 c
s
211 397.5 m
S
U
229 397.5 m
285.5 397.5 l
S
0 To
1 0 0 1 211 394.5 0 Tp
TP
-9.7449 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 9 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9 0 Tl
0 Tc
0 Tw
(\(3, 0\)) Tx 
(\r) TX 
TO
u
288.1963 397.5 m
281.645 395.9565 l
283.0513 397.5 L
281.645 399.0435 l
288.1963 397.5 L
f
U
u
0 R
0 G
0.75 w
306.5 379.4688 m
316.4582 379.4688 324.5312 387.5418 324.5312 397.5 c
324.5312 407.4582 316.4582 415.5312 306.5 415.5312 c
296.5418 415.5312 288.4688 407.4582 288.4688 397.5 c
288.4688 387.5418 296.5418 379.4688 306.5 379.4688 c
s
306.5 397.5 m
S
U
324.5 397.5 m
381 397.5 l
S
0 To
1 0 0 1 306.5 394.5 0 Tp
TP
-9.7449 0 Td
0 Tr
0 O
0 g
1 w
(\(3, 1\)) Tx 
(\r) TX 
TO
u
383.6963 397.5 m
377.145 395.9565 l
378.5513 397.5 L
377.145 399.0435 l
383.6963 397.5 L
f
U
u
0 R
0 G
0.75 w
402 379.4688 m
411.9582 379.4688 420.0312 387.5418 420.0312 397.5 c
420.0312 407.4582 411.9582 415.5312 402 415.5312 c
392.0418 415.5312 383.9688 407.4582 383.9688 397.5 c
383.9688 387.5418 392.0418 379.4688 402 379.4688 c
s
402 397.5 m
S
U
0 To
1 0 0 1 402 394.5 0 Tp
TP
-9.7449 0 Td
0 Tr
0 O
0 g
1 w
(\(3, 2\)) Tx 
(\r) TX 
TO
0 To
1 0 0 1 256.5 402 0 Tp
TP
-4.7197 0 Td
0 Tr
(3) Tx 
/_Symbol 9 Tf
(l) Tx 
(\r) TX 
TO
0 To
1 0 0 1 352 402 0 Tp
TP
-4.7197 0 Td
0 Tr
/_Times-Roman 9 Tf
(2) Tx 
/_Symbol 9 Tf
(l) Tx 
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
87 423.17 543 473.61 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "3" 8
%%Page: "4" 9
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(4) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(The following are) 105 718.67 T
5 F
(invalid) 186.57 718.67 T
2 F
( identifiers:) 217.12 718.67 T
4 10 Q
(6A     \050identifiers must begin with a letter\051) 132 699.93 T
(_X     \050identifiers must begin with a letter\051) 132 687.93 T
(A#2    \050special characters are not allowed\051) 132 675.93 T
(A 3    \050embedded whitespace and newlines are illegal\051) 132 663.93 T
7 10.5 Q
(12.1.2. Numeric Expressions) 105 639.19 T
2 11 Q
0.02 (A) 105 620.95 P
5 F
0.02 (numeric expression) 115.71 620.95 P
2 F
0.02 ( is any mathematical expression that produces either an integer or a real num-) 201.57 620.95 P
-0.26 (ber when evaluated. A numeric expression may contain literal values, named constants, state-space vari-) 87 607.95 P
(ables, index variables, and arithmetic operations.) 87 594.95 T
0.85 (A literal value, or number, is a contiguous sequence \050up to 28 characters\051 consisting of digits, an) 105 575.54 P
-0.25 (optional decimal point, and an optional signed or unsigned exponent that is preceded by the letter) 87 562.54 P
4 F
-0.61 (e) 514.05 562.54 P
2 F
-0.25 (. The) 520.65 562.54 P
(ASSIST language requires that each number begin with a digit. The following are legal numbers:) 87 549.54 T
4 10 Q
(6) 132 530.8 T
(2.) 132 518.8 T
(2.0) 132 506.8 T
(1.00001) 132 494.8 T
(0.00001) 132 482.8 T
2 11 Q
(The following are) 105 464.73 T
5 F
(illegal numbers) 186.57 464.73 T
2 F
(:) 255.32 464.73 T
4 10 Q
(1.1.1   \050only one decimal allowed\051) 132 445.99 T
(.1      \050does not begin with a digit; use 0.1 instead\051) 132 433.99 T
(6 3     \050embedded blank not allowed within a number\051) 132 421.99 T
2 11 Q
0.14 (Scientific notation is also allowed. The letter) 105 403.92 P
4 F
0.32 (e) 305.76 403.92 P
2 F
0.14 ( embedded in a literal numeric value denotes that an) 312.36 403.92 P
(integer power of 10 follows. For example, the values of) 87 390.92 T
(are written in ASSIST as) 87 332.7 T
4 10 Q
(6.023e23) 132 314.96 T
(4.111e-13) 132 302.96 T
2 11 Q
(respectively.) 87 284.89 T
(Valid operations in numeric expressions are) 105 266.48 T
4 10 Q
(+     addition) 132 247.74 T
(-     subtraction) 132 235.74 T
(*     multiplication) 132 223.74 T
(/     real division) 132 211.74 T
(DIV   integer division for quotient) 132 199.74 T
(MOD   integer division for remainder) 132 187.74 T
(CYC   integer division for cyclically wrapped quotient) 132 175.74 T
(x CYC y = 1+\050\050x-1\051 MOD y\051\051) 168.83 163.74 T
(**    exponentiation) 132 151.74 T
(\050 \051   parentheses enclose operations to be performed first) 132 139.74 T
2 11 Q
0.74 (Operations within parentheses are always performed first. Exponentiation is performed next, with) 105 121.67 P
1.23 (right-to-left associativity. Multiplication and division \050including) 87 108.67 P
4 F
2.94 (DIV) 379.43 108.67 P
2 F
1.23 (,) 399.23 108.67 P
4 F
2.94 (MOD) 405.96 108.67 P
2 F
1.23 (, and) 425.76 108.67 P
4 F
2.94 (CYC) 452.34 108.67 P
2 F
1.23 (\051 are performed) 472.14 108.67 P
1.79 (next, with left-to-right associativity. Addition and subtraction are performed next, with left-to-right) 87 95.67 P
0.39 (associativity. The order of precedence used in ASSIST for evaluating mathematical expressions is dis-) 87 82.67 P
(cussed in appendix A.) 87 69.67 T
132 366.89 189.16 382.19 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(6) 133 371.51 T
(.) 138.25 371.51 T
(0) 140.88 371.51 T
(2) 146.12 371.51 T
(3) 151.38 371.51 T
(1) 167.64 371.51 T
(0) 172.89 371.51 T
2 8.5 Q
(2) 178.66 374.82 T
(3) 182.91 374.82 T
6 10.5 Q
(\264) 159.25 371.51 T
0 0 612 792 C
132 347.48 193.74 362.79 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(4) 133 352.1 T
(.) 138.25 352.1 T
(1) 140.88 352.1 T
(1) 146.12 352.1 T
(1) 151.38 352.1 T
(1) 167.64 352.1 T
(0) 172.89 352.1 T
2 8.5 Q
(1) 183.24 355.41 T
(3) 187.49 355.41 T
(\320) 178.66 355.41 T
6 10.5 Q
(\264) 159.25 352.1 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "4" 9
%%Page: "5" 10
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(5) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 F
(12.1.3. Numeric Precision) 105 719 T
2 11 Q
0.9 (The numeric precision of integer arithmetic in) 105 699.85 P
4 F
2.15 (ASSIST) 316.88 699.85 P
2 F
0.9 ( is at least 32 bits. The maximum integer) 356.48 699.85 P
-0.25 (value is 2147483647. The minimum integer value is) 87 686.85 P
6 F
-0.25 (-) 317.51 686.85 P
2 F
-0.25 (2147483648. Future ports to machines with 60- or) 323.55 686.85 P
(64-bit architectures may allow even larger integers.) 87 673.85 T
0.94 (The numeric precision of real number arithmetic in) 105 653.53 P
4 F
2.25 (ASSIST) 340.4 653.53 P
2 F
0.94 ( is at least 12 significant digits. The) 380 653.53 P
-0.07 (exponent size range is machine dependent and amounts to double precision on most 32-bit architectures) 87 640.53 P
1.1 (and to single precision on most 60- or 64-bit architectures. Currently,) 87 627.53 P
4 F
2.63 (ASSIST) 406.73 627.53 P
2 F
1.1 ( is supported only on) 446.33 627.53 P
(32-) 87 614.53 T
(bit machines.) 101.66 614.53 T
7 10.5 Q
(12.1.4. Boolean Expressions) 105 588.55 T
2 11 Q
-0.26 (A) 105 569.39 P
5 F
-0.26 (Boolean expression) 115.43 569.39 P
2 F
-0.26 ( is any mathematical expression that evaluates to) 201.64 569.39 P
4 F
-0.62 (TRUE) 417.11 569.39 P
2 F
-0.26 ( or) 443.51 569.39 P
4 F
-0.62 (FALSE) 457.66 569.39 P
2 F
-0.26 (. A Boolean) 490.66 569.39 P
(expression may contain numeric expressions plus relational operators and conjunctions.) 87 556.39 T
2.06 (There are two possible literal truth \050Boolean\051 values:) 105 536.08 P
4 F
4.94 (TRUE) 356.69 536.08 P
2 F
2.06 ( or) 383.09 536.08 P
4 F
4.94 (FALSE) 401.87 536.08 P
2 F
2.06 (. These values must be) 434.87 536.08 P
0.46 (spelled out in an ASSIST input file and cannot be abbreviated, even though ASSIST abbreviates them) 87 523.08 P
(to) 87 510.08 T
3 F
(T) 98.31 510.08 T
2 F
( and) 105.64 510.08 T
3 F
(F) 127.03 510.08 T
2 F
( in comments when writing the model output file for SURE.) 133.75 510.08 T
(Valid relational operators that can be used in Boolean expressions are) 105 489.76 T
8 10 Q
(<) 132 470.11 T
4 F
(     less than) 138 470.11 T
8 F
(>) 132 458.11 T
4 F
(     greater than) 138 458.11 T
8 F
(<=) 132 446.11 T
4 F
(    less than or equal to) 144 446.11 T
8 F
(>=) 132 434.11 T
4 F
(    greater than or equal to) 144 434.11 T
8 F
(=) 132 422.11 T
4 F
(     equal to) 138 422.11 T
8 F
(<>) 132 410.11 T
4 F
(    not equal to) 144 410.11 T
2 11 Q
(Valid comparative operators that can be used in Boolean expressions are) 105 391.12 T
8 10 Q
(AND) 132 371.47 T
4 F
(   true when both sides are true; otherwise false) 150 371.47 T
8 F
(OR) 132 359.47 T
4 F
(    true when either side is true; otherwise false) 144 359.47 T
8 F
(XOR) 132 347.47 T
4 F
(   true when only one side is true; otherwise false) 150 347.47 T
8 F
(NOT) 132 335.47 T
4 F
(   true when right side is false; false when right side is true) 150 335.47 T
2 11 Q
1.4 (Optionally, an ampersand can be used instead of the word) 105 316.49 P
3 F
1.4 (AND) 376.52 316.49 P
2 F
1.4 ( and a vertical bar can be used) 400.34 316.49 P
0.62 (instead of the word) 87 303.49 P
3 F
0.62 (OR) 176.85 303.49 P
2 F
0.62 (. See the language syntax in appendix B for details on the use of special sym-) 193.35 303.49 P
(bols.) 87 290.49 T
(Truth tables for the comparators are given in tables 11 through 4.) 105 270.17 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
86.69 68.31 302.69 232.69 R
7 X
V
2 9 Q
0 X
(T) 115.53 226.69 T
(able 1) 120.4 226.69 T
(1. T) 141.81 226.69 T
(ruth T) 155.99 226.69 T
(able for) 177.61 226.69 T
3 F
(AND) 207.6 226.69 T
2 F
( Conjunction) 227.09 226.69 T
3 F
(AND) 132.94 203.69 T
2 F
(TRUE) 182.94 203.69 T
(F) 233.27 203.69 T
(ALSE) 237.61 203.69 T
(TRUE) 130.94 191.69 T
(TRUE) 182.94 191.69 T
(F) 233.27 191.69 T
(ALSE) 237.61 191.69 T
(F) 129.27 179.69 T
(ALSE) 133.61 179.69 T
(F) 181.27 179.69 T
(ALSE) 185.61 179.69 T
(F) 233.27 179.69 T
(ALSE) 237.61 179.69 T
(T) 117.36 133.69 T
(able 3. T) 122.23 133.69 T
(ruth T) 153.66 133.69 T
(able for) 175.28 133.69 T
3 F
(XOR) 205.26 133.69 T
2 F
( Conjunction) 225.26 133.69 T
3 F
(XOR) 132.69 110.69 T
2 F
(TRUE) 182.94 110.69 T
(F) 233.27 110.69 T
(ALSE) 237.61 110.69 T
(TRUE) 130.94 98.69 T
(F) 181.27 98.69 T
(ALSE) 185.61 98.69 T
(TRUE) 234.94 98.69 T
(F) 129.27 86.69 T
(ALSE) 133.61 86.69 T
(TRUE) 182.94 86.69 T
(F) 233.27 86.69 T
(ALSE) 237.61 86.69 T
116.69 211.44 116.69 175.94 2 L
V
0.5 H
0 Z
N
168.69 211.94 168.69 175.44 2 L
V
N
220.69 211.94 220.69 175.44 2 L
V
N
272.69 211.44 272.69 175.94 2 L
V
N
116.44 211.69 272.94 211.69 2 L
V
N
116.44 199.69 272.94 199.69 2 L
V
N
116.44 187.69 272.94 187.69 2 L
V
N
116.44 175.69 272.94 175.69 2 L
V
N
116.69 118.44 116.69 82.94 2 L
V
N
168.69 118.94 168.69 82.44 2 L
V
N
220.69 118.94 220.69 82.44 2 L
V
N
272.69 118.44 272.69 82.94 2 L
V
N
116.44 118.69 272.94 118.69 2 L
V
N
116.44 106.69 272.94 106.69 2 L
V
N
116.44 94.69 272.94 94.69 2 L
V
N
116.44 82.69 272.94 82.69 2 L
V
N
327 68.38 543 232.75 R
7 X
V
0 X
(T) 360.92 226.75 T
(able 2. T) 365.79 226.75 T
(ruth T) 397.22 226.75 T
(able for) 418.84 226.75 T
3 F
(OR) 448.83 226.75 T
2 F
( Conjunction) 462.33 226.75 T
3 F
(OR) 376.25 203.75 T
2 F
(TRUE) 423.25 203.75 T
(F) 473.58 203.75 T
(ALSE) 477.92 203.75 T
(TRUE) 371.25 191.75 T
(TRUE) 423.25 191.75 T
(TRUE) 475.25 191.75 T
(F) 369.58 179.75 T
(ALSE) 373.92 179.75 T
(TRUE) 423.25 179.75 T
(F) 473.58 179.75 T
(ALSE) 477.92 179.75 T
(T) 357.92 133.75 T
(able 4. T) 362.79 133.75 T
(ruth T) 394.22 133.75 T
(able for) 415.83 133.75 T
3 F
(NOT) 445.82 133.75 T
2 F
( Conjunction) 465.33 133.75 T
9 F
(P) 393.57 110.75 T
3 F
(NOT) 460.69 110.75 T
9 F
(P) 482.45 110.75 T
2 F
(F) 382.58 98.75 T
(ALSE) 386.92 98.75 T
(TRUE) 462.25 98.75 T
(TRUE) 384.25 86.75 T
(F) 460.58 86.75 T
(ALSE) 464.92 86.75 T
357 211.5 357 176 2 L
V
N
409 212 409 175.5 2 L
V
N
461 212 461 175.5 2 L
V
N
513 211.5 513 176 2 L
V
N
356.75 211.75 513.25 211.75 2 L
V
N
356.75 199.75 513.25 199.75 2 L
V
N
356.75 187.75 513.25 187.75 2 L
V
N
356.75 175.75 513.25 175.75 2 L
V
N
357 118.5 357 83 2 L
V
N
435 119 435 82.5 2 L
V
N
513 118.5 513 83 2 L
V
N
356.75 118.75 513.25 118.75 2 L
V
N
356.75 106.75 513.25 106.75 2 L
V
N
356.75 94.75 513.25 94.75 2 L
V
N
356.75 82.75 513.25 82.75 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "5" 10
%%Page: "6" 11
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(6) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 F
(12.1.5. Arrays) 105 719 T
2 11 Q
0.15 (The ASSIST language supports the use of both singly and doubly subscripted arrays. A singly sub-) 105 700.05 P
0.44 (scripted array is simply an ordered sequence of scalars. A scalar is usually an integer or a real number) 87 687.05 P
0.35 (but could also be a Boolean value. The index number refers to the position in the sequence. For exam-) 87 674.05 P
(ple, index 3 corresponds to the third scalar in the sequence. Consider the array) 87 661.05 T
8 10 Q
(ELE) 132 641.6 T
4 F
( = [ 5, 11, 22, 17, 4, 37, 99, 2 ];) 150 641.6 T
2 11 Q
-0.26 (The) 105 622.81 P
3 F
-0.26 (ELE) 124.6 622.81 P
2 F
-0.26 ( array has eight scalars. The third scalar is 22. To reference the third scalar in the array, use) 146.61 622.81 P
3 F
0.83 (ELE[3]) 87 609.81 P
2 F
0.83 (. The square brackets denote an index or subscript used to reference an individual position or) 121.84 609.81 P
1.24 (scalar value within the array. Reference to the array name without the bracketed index indicates the) 87 596.81 P
(whole array.) 87 583.81 T
0.67 (With the exception of a few built-in array functions, arithmetic can be performed only on scalars,) 105 563.7 P
-0.02 (not on arrays. Therefore, the user must always use an index after the array name to indicate which array) 87 550.7 P
(values to use in the arithmetic expression.) 87 537.7 T
0.73 (There are some built-in functions that operate on entire arrays. One example is the function) 105 517.58 P
4 F
1.76 (SUM) 520.45 517.58 P
2 F
0.73 (,) 540.25 517.58 P
(which, when given an array name, will return the sum of all array elements. For example,) 87 504.58 T
4 10 Q
(ARR = [ 6, 3, 1 ];) 132 485.13 T
(ARRSUM = SUM\050ARR\051;) 132 473.13 T
2 11 Q
-0.18 (In the above example, the array) 105 454.34 P
3 F
-0.18 (ARR) 245.35 454.34 P
2 F
-0.18 ( contains three scalars. The scalar constant) 269.18 454.34 P
4 F
-0.43 (ARRSUM) 457.93 454.34 P
2 F
-0.18 ( is defined) 497.53 454.34 P
0.51 (as the sum of all scalars in the array) 87 441.34 P
3 F
0.51 (ARR) 252 441.34 P
2 F
0.51 (. This sum is 10. In this example, the following are numeri-) 275.82 441.34 P
(cally equivalent:) 87 428.34 T
4 10 Q
(ARRSUM = 10;) 132 408.89 T
(ARRSUM = ARR[1] + ARR[2] + ARR[3];) 132 396.89 T
(ARRSUM = SUM\050ARR\051;) 132 384.89 T
2 11 Q
(A doubly subscripted array is similar to a table or a matrix. For example, consider the table) 105 366.11 T
4 10 Q
(17  38  24   12  15) 132 346.66 T
(28  11  99   54  37) 132 334.66 T
(29  44  66  102  13) 132 322.66 T
2 11 Q
0.06 (Two index values are required to denote a scalar in a doubly subscripted table. The first index gives the) 87 303.87 P
-0.05 (row, and the second index gives the column. The scalar represented by) 87 290.87 P
4 F
-0.12 (TABLE[2,5]) 400.46 290.87 P
2 F
-0.05 ( has the value) 466.46 290.87 P
3 F
-0.05 (37) 529.25 290.87 P
2 F
-0.05 (.) 540.25 290.87 P
-0.02 (The first index indicates that the value is in the second row. The second index indicates that the value is) 87 277.87 P
(in the fifth column.) 87 264.87 T
(The above array can be typed into an ASSIST input file as illustrated:) 105 245.76 T
4 10 Q
(TABLE = [) 132 226.3 T
(           [ 17,  38,  24,   12,  15 ],) 132 214.3 T
(           [ 28,  11,  99,   54,  37 ],) 132 202.3 T
(           [ 29,  44,  66,  102,  13 ]) 132 190.3 T
(        ];) 132 178.3 T
7 10.5 Q
(12.1.6. Ranges) 105 152.85 T
2 11 Q
1.54 (A range specifies a contiguous sequence of whole numbers \050positive integers\051. The syntax of a) 105 133.9 P
(range is) 87 120.9 T
4 10 Q
(<expression>) 132 101.45 T
8 F
(..) 210 101.45 T
4 F
(<expression>) 228 101.45 T
2 11 Q
-0.24 (The ellipsis) 105 82.67 P
8 F
-0.58 (..) 158.29 82.67 P
2 F
-0.24 ( indicates a value range beginning with the left value and ending with the right value,) 171.49 82.67 P
(inclusively. Thus,) 87 69.67 T
3 F
(5) 168.28 69.67 T
8 F
(..) 173.78 69.67 T
3 F
(9) 186.98 69.67 T
2 F
( specifies the numbers) 192.48 69.67 T
3 F
(5,6,7,8,9) 293.29 69.67 T
2 F
( whereas) 331.79 69.67 T
3 F
(5,9) 373.33 69.67 T
2 F
( specifies the numbers) 387.08 69.67 T
3 F
(5) 487.89 69.67 T
2 F
( and) 493.39 69.67 T
3 F
(9) 514.78 69.67 T
2 F
(.) 520.28 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "6" 11
%%Page: "7" 12
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(7) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 F
(12.1.7. Repetition) 105 719 T
2 11 Q
(The ASSIST language allows the use of repetition in several places. For example, instead of typing) 105 700.65 T
4 10 Q
(0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3) 132 681.81 T
2 11 Q
(one can merely type) 87 663.62 T
4 10 Q
(13 OF 0, 5 OF 3) 132 645.78 T
7 10.5 Q
(12.1.8. Built-in Functions) 105 620.93 T
2 11 Q
1.41 (Several mathematical, trigonometric, combinatorial, list, and array functions are available in the) 105 602.58 P
1.38 (ASSIST language. These functions can be used in expressions to compute numeric quantities based) 87 589.58 P
(upon the parameter values passed to them. For example, the expression) 87 576.58 T
4 10 Q
(TRANTO NWP-- BY SQRT\050MU\051*LAMBDA;) 132 557.74 T
2 11 Q
(can be written to denote a transition to a new state at rate:) 87 539.56 T
(.) 373.35 539.56 T
7 10.5 Q
(12.1.8.1. Mathematical functions.) 105 515.88 T
2 11 Q
0.23 (The mathematical functions are listed in table 5. Example uses of) 253.19 515.88 P
(these mathematical functions are) 87 502.88 T
4 10 Q
(FOO = SQRT\050FOOBAR\051) 132 484.03 T
(FOO_POW = EXP\0500.5*FOO\051;) 132 472.03 T
(LOGDIFF = LN\050FOO-FOOBAR\051) 132 460.03 T
(ABSFOO_PLUS = 1.0 + ABS\050FOO\051) 132 448.03 T
7 10.5 Q
(12.1.8.2. T) 105 305.18 T
(rigonometric functions.) 150.4 305.18 T
2 11 Q
1.91 (The trigonometric functions are listed in table 6. Examples of) 255.13 305.18 P
(expressions using these trigonometric functions are) 87 292.18 T
4 10 Q
(PI = 4.0 * ARCTAN\0501.0\051;) 132 273.33 T
(TWOPI = 2.0*PI;) 132 261.33 T
(COSPI = COS\050PI\051;) 132 249.33 T
(SINHALFPI = SIN\050PI/2.0\051;) 132 237.33 T
(ANG = ARCSIN\0500.5\051;) 132 225.33 T
(VAL = SQRT \050 \050COS\050LAMBDA*PI\051\051**2 + \050SIN\050MU*TWOPI\051\051**2 \051;) 132 213.33 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
(T) 255.94 420.7 T
(able 5. Built-in Math Functions) 260.81 420.7 T
(Function) 186.5 397.7 T
(Parameter type) 248.88 397.7 T
(Result) 339.5 397.7 T
(Description) 405 397.7 T
(SQR) 191.27 381.7 T
(T) 208.23 381.7 T
(Real) 267.75 381.7 T
(Real) 342.75 381.7 T
(EXP) 194 366.7 T
(Real) 267.75 366.7 T
(Real) 342.75 366.7 T
(LN) 196.5 352.7 T
(Real) 267.75 352.7 T
(Real) 342.75 352.7 T
(ABS) 193.75 337.7 T
(Real) 267.75 337.7 T
(Real) 342.75 337.7 T
(T) 239.6 186 T
(able 6. Built-in T) 244.47 186 T
(rigonometric Functions) 306.15 186 T
(Function) 186.5 163 T
(Parameter type) 248.88 163 T
(Result) 339.5 163 T
(Description) 405 163 T
(SIN) 195.25 147 T
(Real) 267.75 147 T
(Real) 342.75 147 T
(COS) 193.75 132 T
(Real) 267.75 132 T
(Real) 342.75 132 T
(T) 193.61 118 T
(AN) 198.39 118 T
(Real) 267.75 118 T
(Real) 342.75 118 T
(ARCSIN) 186 103 T
(Real) 267.75 103 T
(Real) 342.75 103 T
(ARCCOS) 184.5 87 T
(Real) 267.75 87 T
(Real) 342.75 87 T
(ARCT) 184.36 71 T
(AN) 207.64 71 T
(Real) 267.75 71 T
(Real) 342.75 71 T
166.5 405.45 166.5 332.95 2 L
V
0.5 H
0 Z
N
238.5 405.95 238.5 332.45 2 L
V
N
313.5 405.95 313.5 332.45 2 L
V
N
388.5 405.95 388.5 332.45 2 L
V
N
463.5 405.45 463.5 332.95 2 L
V
N
166.25 405.7 463.75 405.7 2 L
V
N
166.25 392.7 463.75 392.7 2 L
V
N
166.25 332.7 463.75 332.7 2 L
V
N
166.5 170.75 166.5 66.25 2 L
V
N
238.5 171.25 238.5 65.75 2 L
V
N
313.5 171.25 313.5 65.75 2 L
V
N
388.5 171.25 388.5 65.75 2 L
V
N
463.5 170.75 463.5 66.25 2 L
V
N
166.25 171 463.75 171 2 L
V
N
166.25 158 463.75 158 2 L
V
N
166.25 66 463.75 66 2 L
V
N
343.31 534.93 373.35 551 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(m) 351.66 539.56 T
(l) 365.58 539.56 T
(\327) 360.33 539.56 T
356.66 548.95 351.66 548.95 348.51 538.45 3 L
0.47 H
2 Z
N
348.51 538.45 346.41 541.46 345.36 539.96 3 L
N
0 0 612 792 C
419.36 377.45 432.64 391.65 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(x) 426.65 381.7 T
429.74 389.75 426.65 389.75 423.95 380.75 3 L
0.41 H
2 Z
N
423.95 380.75 422.15 383.32 421.26 382.04 3 L
N
0 0 612 792 C
420.72 362.44 431.28 375.71 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(e) 421.72 366.7 T
5 7 Q
(x) 426.17 369.46 T
0 0 612 792 C
417.61 348.45 434.39 360.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(l) 418.61 352.7 T
(n) 421.11 352.7 T
5 F
(x) 428.39 352.7 T
0 0 612 792 C
420.3 333.45 431.7 345.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(x) 423.5 337.7 T
422.2 336.34 422.2 344.45 2 L
0.41 H
2 Z
N
428.4 336.34 428.4 344.45 2 L
N
0 0 612 792 C
415.86 142.75 436.14 154.75 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(s) 416.86 147 T
(i) 420.36 147 T
(n) 422.86 147 T
5 F
(x) 430.14 147 T
0 0 612 792 C
415.11 127.75 436.89 139.75 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(c) 416.11 132 T
(o) 420.11 132 T
(s) 424.61 132 T
5 F
(x) 430.89 132 T
0 0 612 792 C
415.61 113.75 436.39 125.75 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(t) 416.61 118 T
(a) 419.11 118 T
(n) 423.11 118 T
5 F
(x) 430.39 118 T
0 0 612 792 C
411.74 98.75 440.26 112.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(s) 412.74 103 T
(i) 416.24 103 T
(n) 418.74 103 T
2 7 Q
(1) 427.45 105.76 T
(\320) 423.69 105.76 T
5 9 Q
(x) 434.27 103 T
0 0 612 792 C
410.99 82.75 441.01 96.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(c) 411.99 87 T
(o) 415.99 87 T
(s) 420.49 87 T
2 7 Q
(1) 428.2 89.76 T
(\320) 424.44 89.76 T
5 9 Q
(x) 435.01 87 T
0 0 612 792 C
411.49 66.75 440.51 80.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(t) 412.49 71 T
(a) 414.99 71 T
(n) 418.99 71 T
2 7 Q
(1) 427.7 73.76 T
(\320) 423.94 73.76 T
5 9 Q
(x) 434.51 71 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "7" 12
%%Page: "8" 13
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(8) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 F
(12.1.8.3. Combinatorial functions.) 105 717.16 T
2 11 Q
1.66 (The combinatorial functions are listed in table 7. Examples of) 256.12 719 P
(expressions using these combinatorial functions are) 87 706 T
4 10 Q
(FOO = COMB\05012,5\051/FACT\0504\051;) 132 685.83 T
(FOOBAR = PERM\05012,2\051;) 132 673.83 T
(FOO_BAR = GAM\0506.113\051;) 132 661.83 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 10.5 Q
(12.1.8.4. Array/list functions.) 105 145.33 T
2 11 Q
1.48 (The array/list functions are listed in table 8. All array/list functions) 233.94 145.33 P
0.51 (operate on lists of arrays, subarrays, or scalars. For example, if) 87 132.33 P
5 F
0.51 (A) 371.57 132.33 P
2 F
0.51 (1,) 378.29 132.33 P
5 F
0.51 (A) 389.81 132.33 P
2 F
0.51 (2, and) 396.53 132.33 P
5 F
0.51 (A) 427.19 132.33 P
2 F
0.51 (3 are arrays, and if) 433.91 132.33 P
5 F
0.51 (X) 521.4 132.33 P
2 F
0.51 (,) 528.12 132.33 P
5 F
0.51 (Y) 534.13 132.33 P
2 F
0.51 (,) 540.25 132.33 P
(and) 87 119.33 T
5 F
(Z) 105.63 119.33 T
2 F
( are scalars,) 111.75 119.33 T
2 9 Q
(T) 239.44 616.5 T
(able 7. Built-in Combinatorial Functions) 244.3 616.5 T
(Function) 186.5 593.5 T
(Parameter type) 248.88 593.5 T
(Result) 339.5 593.5 T
(Description) 405 593.5 T
(F) 191.33 577.5 T
(ACT) 195.67 577.5 T
(Int) 271 577.5 T
(Int) 346 577.5 T
(COMB) 189.25 555.49 T
(Int,int) 265.12 555.49 T
(Int) 346 555.49 T
(PERM) 190.25 527.46 T
(Int,int) 265.12 527.46 T
(Int) 346 527.46 T
(GAM) 192 505.45 T
(Real) 267.75 505.45 T
(Real) 342.75 505.45 T
(T) 245.57 458.45 T
(able 8. Built-in Array/List  Functions) 250.43 458.45 T
(Function) 107 435.45 T
(Parameter type) 169.38 435.45 T
(Result) 264.5 435.45 T
(Description) 409.5 435.45 T
(SUM) 113.25 406.55 T
(Array) 186.01 406.55 T
(Scalar) 264.76 406.55 T
(SUM) 113.25 373.15 T
(List) 189.5 373.15 T
(Scalar) 264.76 373.15 T
5 F
(Wher) 237.21 362.15 T
(e a, b ar) 256.38 362.15 T
(e scalar) 286.04 362.15 T
2 F
(COUNT) 107.5 328.4 T
(Bool-array) 177.01 328.4 T
(Int) 271 328.4 T
(COUNT) 107.5 293.66 T
(Bool-list) 180.75 293.66 T
(Int) 271 293.66 T
5 F
(Wher) 237.21 282.66 T
(e p, q ar) 256.38 282.66 T
(e scalar) 286.04 282.66 T
2 F
(MIN) 114.25 261.16 T
(List) 189.5 261.16 T
(Scalar) 264.76 261.16 T
(MAX) 112.5 245.16 T
(List) 189.5 245.16 T
(Scalar) 264.76 245.16 T
(ANY) 113.25 229.16 T
(Bool-list) 180.75 229.16 T
(Bool-scalar) 255.26 229.16 T
(ALL) 114.25 213.16 T
(Bool-list) 180.75 213.16 T
(Bool-scalar) 255.26 213.16 T
(SIZE) 113.5 197.16 T
(Array) 186.01 197.16 T
(Scalar) 264.76 197.16 T
166.5 601.25 166.5 500.7 2 L
V
0.5 H
0 Z
N
238.5 601.75 238.5 500.2 2 L
V
N
313.5 601.75 313.5 500.2 2 L
V
N
388.5 601.75 388.5 500.2 2 L
V
N
463.5 601.25 463.5 500.7 2 L
V
N
166.25 601.5 463.75 601.5 2 L
V
N
166.25 588.5 463.75 588.5 2 L
V
N
166.25 500.45 463.75 500.45 2 L
V
N
87 443.2 87 192.41 2 L
V
N
159 443.7 159 191.91 2 L
V
N
234 443.7 234 191.91 2 L
V
N
318 443.7 318 191.91 2 L
V
N
543 443.2 543 192.41 2 L
V
N
86.75 443.45 543.25 443.45 2 L
V
N
86.75 430.45 543.25 430.45 2 L
V
N
86.75 192.16 543.25 192.16 2 L
V
N
420.75 573.25 431.25 585.25 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(n) 421.75 577.5 T
2 F
(!) 426.25 577.5 T
0 0 612 792 C
402.07 545.47 449.93 568.5 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(n) 421.75 560.75 T
2 F
(!) 426.25 560.75 T
5 F
(k) 403.25 549.72 T
2 F
(!) 407.25 549.72 T
5 F
(n) 422.35 549.72 T
(k) 435.84 549.72 T
2 F
(\320) 429.1 549.72 T
6 F
(\050) 418.49 549.72 T
(\051) 440.25 549.72 T
2 F
(!) 444.75 549.72 T
6 F
(\327) 412.49 549.72 T
2 F
(-) 403.25 555.75 T
(-) 404.75 555.75 T
(-) 406.25 555.75 T
(-) 407.75 555.75 T
(-) 409.25 555.75 T
(-) 410.74 555.75 T
(-) 412.24 555.75 T
(-) 413.74 555.75 T
(-) 415.24 555.75 T
(-) 416.74 555.75 T
(-) 418.24 555.75 T
(-) 419.74 555.75 T
(-) 421.23 555.75 T
(-) 422.73 555.75 T
(-) 424.23 555.75 T
(-) 425.73 555.75 T
(-) 427.23 555.75 T
(-) 428.73 555.75 T
(-) 430.23 555.75 T
(-) 431.72 555.75 T
(-) 433.22 555.75 T
(-) 434.72 555.75 T
(-) 436.22 555.75 T
(-) 437.72 555.75 T
(-) 439.22 555.75 T
(-) 440.71 555.75 T
(-) 442.21 555.75 T
(-) 443.71 555.75 T
(-) 444.75 555.75 T
0 0 612 792 C
408.94 517.45 443.06 540.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(n) 421.75 532.72 T
2 F
(!) 426.25 532.72 T
5 F
(n) 415.48 521.7 T
(k) 428.98 521.7 T
2 F
(\320) 422.23 521.7 T
6 F
(\050) 411.62 521.7 T
(\051) 433.38 521.7 T
2 F
(!) 437.88 521.7 T
(-) 410.12 527.73 T
(-) 411.62 527.73 T
(-) 413.12 527.73 T
(-) 414.62 527.73 T
(-) 416.11 527.73 T
(-) 417.61 527.73 T
(-) 419.11 527.73 T
(-) 420.61 527.73 T
(-) 422.11 527.73 T
(-) 423.61 527.73 T
(-) 425.11 527.73 T
(-) 426.6 527.73 T
(-) 428.1 527.73 T
(-) 429.6 527.73 T
(-) 431.1 527.73 T
(-) 432.6 527.73 T
(-) 434.1 527.73 T
(-) 435.6 527.73 T
(-) 437.09 527.73 T
(-) 437.88 527.73 T
0 0 612 792 C
414.39 501.2 437.61 513.2 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 9 Q
0 X
0 0 0 1 0 0 0 K
(G) 415.39 505.45 T
5 F
(x) 426.71 505.45 T
6 F
(\050) 422.85 505.45 T
(\051) 431.11 505.45 T
0 0 612 792 C
417.26 390.65 443.74 425.45 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(x) 435.45 406.38 T
5 7 Q
(i) 439.79 403.03 T
(i) 419.38 393.5 T
2 F
(1) 429.93 393.5 T
(=) 423.66 393.5 T
(d) 418.26 419.2 T
(i) 421.76 419.2 T
(m) 423.71 419.2 T
5 F
(x) 431.45 419.2 T
6 16 Q
(\345) 420.7 403.17 T
0 0 612 792 C
359.74 351.91 501.26 386.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(S) 360.74 367.65 T
(U) 365.75 367.65 T
(M) 372.24 367.65 T
5 F
(a) 386.14 367.65 T
(x) 395.13 367.65 T
(b) 403.63 367.65 T
6 F
(,) 390.64 367.65 T
(,) 399.13 367.65 T
(\050) 382.28 367.65 T
(\051) 408.54 367.65 T
5 F
(a) 432.46 367.65 T
6 F
(\050) 428.6 367.65 T
(\051) 437.38 367.65 T
5 F
(x) 468.63 367.65 T
5 7 Q
(i) 472.97 364.3 T
(i) 452.56 354.77 T
2 F
(1) 463.11 354.77 T
(=) 456.84 354.77 T
(d) 451.44 380.47 T
(i) 454.94 380.47 T
(m) 456.89 380.47 T
5 F
(x) 464.62 380.47 T
6 16 Q
(\345) 453.88 364.44 T
5 9 Q
(b) 489.85 367.65 T
6 F
(\050) 485.99 367.65 T
(\051) 494.76 367.65 T
2 F
(+) 444.12 367.65 T
(+) 477.16 367.65 T
(=) 417.53 367.65 T
0 0 612 792 C
348.48 311.16 512.52 348.65 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 9 Q
0 X
0 0 0 1 0 0 0 K
(d) 366.28 328.46 T
5 F
(r) 376.62 328.46 T
5 7 Q
(i) 380.46 325.11 T
6 9 Q
(\050) 372.76 328.46 T
(\051) 382.82 328.46 T
(d) 406.63 328.46 T
5 F
(r) 416.97 328.46 T
5 7 Q
(i) 420.81 325.11 T
6 9 Q
(\050) 413.11 328.46 T
(\051) 423.17 328.46 T
2 F
(;) 387.85 328.46 T
5 7 Q
(i) 350.41 315.58 T
2 F
(1) 360.96 315.58 T
(=) 354.68 315.58 T
(d) 349.48 341.28 T
(i) 352.98 341.28 T
(m) 354.93 341.28 T
5 F
(r) 362.66 341.28 T
6 16 Q
(\345) 351.73 325.25 T
2 9 Q
(1) 452.42 335.51 T
(i) 463.4 335.51 T
(f) 465.9 335.51 T
5 F
(r) 471.68 335.51 T
5 7 Q
(i) 475.52 332.15 T
2 9 Q
(t) 488.53 335.51 T
(r) 491.03 335.51 T
(u) 494.03 335.51 T
(e) 498.53 335.51 T
(=) 480.46 335.51 T
(0) 452.42 320.06 T
(i) 463.29 320.06 T
(f) 465.79 320.06 T
5 F
(r) 471.57 320.06 T
5 7 Q
(i) 475.41 316.71 T
2 9 Q
(f) 488.42 320.06 T
(a) 491.42 320.06 T
(l) 495.42 320.06 T
(s) 497.92 320.06 T
(e) 501.42 320.06 T
(=) 480.35 320.06 T
6 F
(\356) 443.23 321.08 T
(\355) 443.23 328.8 T
(\354) 443.23 336.51 T
2 F
(=) 432.16 328.46 T
0 0 612 792 C
347.58 272.43 513.42 307.23 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(c) 348.58 288.16 T
(o) 352.58 288.16 T
(u) 357.08 288.16 T
(n) 361.58 288.16 T
(t) 366.08 288.16 T
5 F
(p) 374.47 288.16 T
(r) 383.47 288.16 T
(q) 391.47 288.16 T
6 F
(,) 378.97 288.16 T
(,) 386.97 288.16 T
(\050) 370.61 288.16 T
(\051) 396.38 288.16 T
(d) 414.94 288.16 T
5 F
(p) 425.28 288.16 T
6 F
(\050) 421.42 288.16 T
(\051) 430.19 288.16 T
(d) 461.06 288.16 T
5 F
(r) 471.4 288.16 T
5 7 Q
(i) 475.24 284.81 T
6 9 Q
(\050) 467.54 288.16 T
(\051) 477.6 288.16 T
(d) 491.67 288.16 T
5 F
(q) 502.01 288.16 T
6 F
(\050) 498.15 288.16 T
(\051) 506.92 288.16 T
2 F
(+) 484.35 288.16 T
5 7 Q
(i) 445.19 275.28 T
2 F
(1) 455.74 275.28 T
(=) 449.46 275.28 T
(d) 444.26 300.98 T
(i) 447.76 300.98 T
(m) 449.71 300.98 T
5 F
(r) 457.44 300.98 T
6 16 Q
(\345) 446.51 284.95 T
2 9 Q
(+) 436.94 288.16 T
(=) 405.37 288.16 T
0 0 612 792 C
343.34 254.06 517.66 268.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(y) 344.34 261.16 T
2 F
(:) 351.12 261.16 T
5 F
(y) 356.4 261.16 T
2 F
(l) 376.67 261.16 T
(i) 379.17 261.16 T
(s) 381.67 261.16 T
(t) 385.17 261.16 T
6 F
(\050) 372.81 261.16 T
(\051) 388.09 261.16 T
(\316) 362.64 261.16 T
2 F
(a) 415.06 261.16 T
(n) 419.05 261.16 T
(d) 423.55 261.16 T
5 F
(y) 450.52 261.16 T
(y) 463.95 261.16 T
5 7 Q
(i) 468.29 257.81 T
5 9 Q
(y) 477.18 261.16 T
5 7 Q
(i) 481.52 257.81 T
6 9 Q
(") 470.77 261.16 T
2 F
(l) 499.74 261.16 T
(i) 502.24 261.16 T
(s) 504.74 261.16 T
(t) 508.24 261.16 T
6 F
(\050) 495.88 261.16 T
(\051) 511.16 261.16 T
(\316) 485.71 261.16 T
(\243) 456.76 261.16 T
0 0 612 792 C
343.34 238.06 517.66 252.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
5 9 Q
0 X
0 0 0 1 0 0 0 K
(y) 344.34 245.16 T
2 F
(:) 351.12 245.16 T
5 F
(y) 356.4 245.16 T
2 F
(l) 376.67 245.16 T
(i) 379.17 245.16 T
(s) 381.67 245.16 T
(t) 385.17 245.16 T
6 F
(\050) 372.81 245.16 T
(\051) 388.09 245.16 T
(\316) 362.64 245.16 T
2 F
(a) 415.06 245.16 T
(n) 419.05 245.16 T
(d) 423.55 245.16 T
5 F
(y) 450.52 245.16 T
(y) 463.95 245.16 T
5 7 Q
(i) 468.29 241.81 T
5 9 Q
(y) 477.18 245.16 T
5 7 Q
(i) 481.52 241.81 T
6 9 Q
(") 470.77 245.16 T
2 F
(l) 499.74 245.16 T
(i) 502.24 245.16 T
(s) 504.74 245.16 T
(t) 508.24 245.16 T
6 F
(\050) 495.88 245.16 T
(\051) 511.16 245.16 T
(\316) 485.71 245.16 T
(\263) 456.76 245.16 T
0 0 612 792 C
392.9 224.91 468.1 236.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(C) 399.26 229.16 T
(O) 405.26 229.16 T
(U) 411.76 229.16 T
(N) 418.26 229.16 T
(T) 424.76 229.16 T
(\050) 430.26 229.16 T
(l) 433.25 229.16 T
(i) 435.75 229.16 T
(s) 438.26 229.16 T
(t) 441.76 229.16 T
(\051) 444.26 229.16 T
(0) 456.69 229.16 T
6 F
(>) 449.5 229.16 T
(\050) 395.4 229.16 T
(\051) 461.6 229.16 T
0 0 612 792 C
380.7 208.91 480.3 220.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(C) 387.07 213.16 T
(O) 393.07 213.16 T
(U) 399.57 213.16 T
(N) 406.06 213.16 T
(T) 412.56 213.16 T
(\050) 418.06 213.16 T
(l) 421.06 213.16 T
(i) 423.56 213.16 T
(s) 426.06 213.16 T
(t) 429.56 213.16 T
(\051) 432.07 213.16 T
(d) 446.12 213.16 T
(i) 450.62 213.16 T
(m) 453.12 213.16 T
(l) 462.38 213.16 T
(i) 464.88 213.16 T
(s) 467.38 213.16 T
(t) 470.88 213.16 T
(=) 438.05 213.16 T
6 F
(\050) 383.2 213.16 T
(\051) 473.8 213.16 T
0 0 612 792 C
396.68 192.91 464.32 204.91 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
0 X
0 0 0 1 0 0 0 K
(s) 397.68 197.16 T
(i) 401.18 197.16 T
(z) 403.68 197.16 T
(e) 407.68 197.16 T
5 F
(a) 417.56 197.16 T
6 F
(\050) 413.7 197.16 T
(\051) 422.48 197.16 T
2 F
(d) 441.04 197.16 T
(i) 445.54 197.16 T
(m) 448.04 197.16 T
5 F
(a) 457.82 197.16 T
2 F
(=) 431.47 197.16 T
0 0 612 792 C
112.08 66 520.55 105.82 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(S) 113.08 83.91 T
(U) 118.92 83.91 T
(M) 126.5 83.91 T
5 F
(A) 142.71 83.91 T
2 F
(1) 149.74 83.91 T
5 F
(X) 160.24 83.91 T
(Y) 171.91 83.91 T
(A) 183 83.91 T
2 F
(2) 190.03 83.91 T
5 F
(Z) 200.53 83.91 T
(A) 211.62 83.91 T
2 F
(3) 218.65 83.91 T
6 F
(,) 154.99 83.91 T
(,) 166.66 83.91 T
(,) 177.75 83.91 T
(,) 195.28 83.91 T
(,) 206.37 83.91 T
(\050) 138.2 83.91 T
(\051) 224.39 83.91 T
5 F
(A) 279.47 83.91 T
2 F
(1) 286.5 83.91 T
5 8.5 Q
(i) 292.15 79.73 T
(i) 256.83 69.12 T
2 F
(1) 269.65 69.12 T
(=) 262.02 69.12 T
(d) 252.31 98.45 T
(i) 256.56 98.45 T
(m) 258.93 98.45 T
5 F
(A) 268.32 98.45 T
2 F
(1) 274.17 98.45 T
6 17.5 Q
(\345) 259.13 80.54 T
6 10.5 Q
(\350) 246.06 75.3 T
(\370) 295 75.3 T
(\347) 246.06 84.3 T
(\367) 295 84.3 T
(\346) 246.06 93.3 T
(\366) 295 93.3 T
5 F
(X) 317.68 83.91 T
6 F
(\050) 313.17 83.91 T
(\051) 324.58 83.91 T
5 F
(Y) 347.25 83.91 T
6 F
(\050) 342.75 83.91 T
(\051) 353.57 83.91 T
5 F
(A) 403.41 83.91 T
2 F
(2) 410.44 83.91 T
5 8.5 Q
(i) 416.09 79.73 T
(i) 380.77 69.12 T
2 F
(1) 393.59 69.12 T
(=) 385.96 69.12 T
(d) 376.25 98.45 T
(i) 380.5 98.45 T
(m) 382.87 98.45 T
5 F
(A) 392.26 98.45 T
2 F
(2) 398.11 98.45 T
6 17.5 Q
(\345) 383.07 80.54 T
6 10.5 Q
(\350) 369.99 75.3 T
(\370) 418.94 75.3 T
(\347) 369.99 84.3 T
(\367) 418.94 84.3 T
(\346) 369.99 93.3 T
(\366) 418.94 93.3 T
5 F
(Z) 441.61 83.91 T
6 F
(\050) 437.11 83.91 T
(\051) 447.94 83.91 T
5 F
(A) 497.77 83.91 T
2 F
(3) 504.8 83.91 T
5 8.5 Q
(i) 510.45 79.73 T
(i) 475.13 69.12 T
2 F
(1) 487.95 69.12 T
(=) 480.33 69.12 T
(d) 470.61 98.45 T
(i) 474.86 98.45 T
(m) 477.23 98.45 T
5 F
(A) 486.62 98.45 T
2 F
(3) 492.47 98.45 T
6 17.5 Q
(\345) 477.43 80.54 T
6 10.5 Q
(\350) 464.36 75.3 T
(\370) 513.3 75.3 T
(\347) 464.36 84.3 T
(\367) 513.3 84.3 T
(\346) 464.36 93.3 T
(\366) 513.3 93.3 T
2 F
(+) 302.87 83.91 T
(+) 332.45 83.91 T
(+) 361.45 83.91 T
(+) 426.81 83.91 T
(+) 455.81 83.91 T
(=) 234.88 83.91 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "8" 13
%%Page: "9" 14
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(9) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.59 (where dim) 87 718.67 P
5 F
0.59 (Ax) 137.67 718.67 P
2 F
0.59 ( is the dimension of) 149.27 718.67 P
5 F
0.59 (Ax) 241.75 718.67 P
2 F
0.59 (. Note that the array functions operate on all array elements as if) 253.36 718.67 P
0.39 (they had each been listed individually. If an array is doubly subscripted, all elements in the array table) 87 705.67 P
(are operated upon. For example, if) 87 692.67 T
5 F
(X) 241.57 692.67 T
2 F
( is a 3 by 5 array, then) 248.29 692.67 T
0.01 (The asterisk wild card can be used to limit summation within a doubly subscripted array to a single row) 87 625.84 P
(or column, as in) 87 612.84 T
(The new features in ASSIST revisions 7.0 and higher, namely the combinatorial functions) 105 498.19 T
(FACT) 132 479.19 T
(\050factorial\051) 183 479.19 T
(COMB) 132 466.18 T
(\050combinatorial\051) 183 466.18 T
(PERM) 132 453.18 T
(\050permulation\051) 183 453.18 T
(GAM) 132 440.18 T
(\050gamma\051) 183 440.18 T
0.85 (and the absolute value function \050ABS\051, require revision 7.9 or greater of SURE, STEM, or PAWS in) 87 422.18 P
1.09 (order to solve models using these features. Model files produced with ASSIST 7.0 can be processed) 87 409.18 P
(with older revisions of SURE, STEM, or PAWS, provided that the new functions are not referenced.) 87 396.18 T
3 10.5 Q
(12.2.  Language Statements) 105 371.51 T
2 11 Q
0.28 (This section describes the syntax for the statements that make up the ASSIST input language. Cer-) 105 353.68 P
0.88 (tain conventions will be used throughout this manual for introducing the syntax of the ASSIST input) 87 340.68 P
(language statements:) 87 327.68 T
(1.) 99 308.68 T
(All reserved words will appear in bold as in) 111 308.68 T
3 F
(FOR) 306.22 308.68 T
2 F
( and) 329.44 308.68 T
3 F
(IN [1) 350.82 308.68 T
8 F
(..) 374.96 308.68 T
3 F
(10]) 388.16 308.68 T
2 F
(.) 402.82 308.68 T
(2.) 99 289.68 T
0.04 (Items that are enclosed in angle brackets such as) 111 289.68 P
2 9 Q
0.03 (<expression>) 327.31 289.68 P
2 11 Q
0.04 ( are expressions that must be supplied) 375.96 289.68 P
(by the user) 111 276.68 T
(.) 158.66 276.68 T
(3.) 99 257.67 T
1.02 (Lar) 111 257.67 P
1.02 (ge braces such as) 126.07 257.67 P
3 18 Q
1.68 ({) 208.97 257.67 P
2 11 Q
1.02 ( and) 216.07 257.67 P
3 18 Q
1.68 (}) 239.5 257.67 P
2 11 Q
1.02 ( are used to denote constructs that may be omitted or repeated as) 246.59 257.67 P
(many times as desired.) 111 244.67 T
(4.) 99 225.67 T
0.2 (Lar) 111 225.67 P
0.2 (ge brackets such as) 126.07 225.67 P
3 18 Q
0.32 ([) 214.22 225.67 P
2 11 Q
0.2 ( and) 220.21 225.67 P
3 18 Q
0.32 (]) 241.99 225.67 P
2 11 Q
0.2 ( are used to denote optional constructs that may be present once or) 247.98 225.67 P
(omitted.) 111 212.67 T
(5.) 99 193.67 T
0.1 (The suf) 111 193.67 P
0.1 (\336x) 144.2 193.67 P
5 F
0.1 (list) 158.67 193.67 P
2 F
0.1 ( denotes a sequence of at least one construct in which each construct is separated by) 172.12 193.67 P
(a delimiter) 111 180.67 T
(, such as a comma.) 157.91 180.67 T
(The ASSIST input file can be subdivided into three parts:) 105 161.67 T
2 12 Q
(\245) 99 142.67 T
2 11 Q
0.84 (The) 111 142.67 P
5 F
0.84 (setup) 131.69 142.67 P
2 F
0.84 ( section is \336rst in the input \336le; it contains de\336nitions and terminates with the) 154.91 142.67 P
4 F
2.01 (SPACE) 510 142.67 P
2 F
(statement.) 111 129.67 T
2 12 Q
(\245) 99 112.67 T
2 11 Q
0.8 (The) 111 112.67 P
5 F
0.8 (start) 131.65 112.67 P
2 F
0.8 ( section of the \336le contains more de\336nitions and a single) 151.83 112.67 P
4 F
1.92 (START) 411.47 112.67 P
2 F
0.8 ( statement; it can also) 444.47 112.67 P
(contain) 111 99.67 T
4 F
(FUNCTION) 146.13 99.67 T
2 F
( and) 198.93 99.67 T
4 F
(IMPLICIT) 220.32 99.67 T
2 F
( de\336nitions.) 273.12 99.67 T
2 12 Q
(\245) 99 82.67 T
2 11 Q
2.27 (The) 111 82.67 P
5 F
2.27 (rule) 133.13 82.67 P
2 F
2.27 ( section of the \336le begins with the \336rst model generation rule statement, such as a) 150.85 82.67 P
4 F
(TRANTO) 111 69.67 T
2 F
( or) 150.6 69.67 T
4 F
(DEATHIF) 165.26 69.67 T
2 F
( statement. The rule section of the \336le must not contain any de\336nitions.) 211.46 69.67 T
254.62 641.17 375.38 681 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(S) 255.62 659.08 T
(U) 261.45 659.08 T
(M) 269.04 659.08 T
(\050) 278.37 659.08 T
(X) 281.87 659.08 T
(\051) 289.45 659.08 T
5 F
(X) 351.86 659.08 T
5 8.5 Q
(i) 358.67 654.91 T
(j) 365.29 654.91 T
6 F
(,) 361.04 654.91 T
5 F
(j) 333.74 644.3 T
2 F
(1) 346.56 644.3 T
(=) 338.93 644.3 T
(5) 340.15 673.62 T
6 17.5 Q
(\345) 336.04 655.71 T
5 8.5 Q
(i) 315.62 644.3 T
2 F
(1) 328.44 644.3 T
(=) 320.82 644.3 T
(3) 322.03 673.62 T
6 17.5 Q
(\345) 317.92 655.71 T
6 10.5 Q
(\350) 309.36 650.47 T
(\370) 368.13 650.47 T
(\347) 309.36 659.47 T
(\367) 368.13 659.47 T
(\346) 309.36 668.47 T
(\366) 368.13 668.47 T
2 F
(=) 298.19 659.08 T
0 0 612 792 C
237.54 561.35 392.47 601.17 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(S) 238.54 579.26 T
(U) 244.37 579.26 T
(M) 251.95 579.26 T
(\050) 261.29 579.26 T
(X) 264.79 579.26 T
([) 272.37 579.26 T
(F) 275.86 579.26 T
(O) 281.7 579.26 T
(O) 289.28 579.26 T
(,) 296.86 579.26 T
(*) 299.49 579.26 T
(]) 304.74 579.26 T
(\051) 308.23 579.26 T
5 F
(X) 352.53 579.26 T
5 8.5 Q
(F) 359.34 575.08 T
(O) 365.19 575.08 T
(O) 371.98 575.08 T
(j) 382.37 575.08 T
6 F
(,) 378.12 575.08 T
5 F
(j) 334.41 564.47 T
2 F
(1) 347.23 564.47 T
(=) 339.6 564.47 T
(5) 340.82 593.8 T
6 17.5 Q
(\345) 336.7 575.89 T
6 10.5 Q
(\350) 328.15 570.65 T
(\370) 385.22 570.65 T
(\347) 328.15 579.65 T
(\367) 385.22 579.65 T
(\346) 328.15 588.65 T
(\366) 385.22 588.65 T
2 F
(=) 316.98 579.26 T
0 0 612 792 C
237.54 513.52 392.46 553.35 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 10.5 Q
0 X
0 0 0 1 0 0 0 K
(S) 238.54 531.43 T
(U) 244.37 531.43 T
(M) 251.96 531.43 T
(\050) 261.29 531.43 T
(X) 264.79 531.43 T
([) 272.37 531.43 T
(*) 275.86 531.43 T
(,) 281.11 531.43 T
(F) 283.74 531.43 T
(O) 289.58 531.43 T
(O) 297.16 531.43 T
(]) 304.74 531.43 T
(\051) 308.23 531.43 T
5 F
(X) 352.53 531.43 T
5 8.5 Q
(i) 359.34 527.25 T
(F) 365.95 527.25 T
(O) 371.8 527.25 T
(O) 378.59 527.25 T
6 F
(,) 361.7 527.25 T
5 F
(i) 334.41 516.65 T
2 F
(1) 347.23 516.65 T
(=) 339.6 516.65 T
(3) 340.82 545.97 T
6 17.5 Q
(\345) 336.7 528.06 T
6 10.5 Q
(\350) 328.15 522.82 T
(\370) 385.21 522.82 T
(\347) 328.15 531.82 T
(\367) 385.21 531.82 T
(\346) 328.15 540.82 T
(\366) 385.21 540.82 T
2 F
(=) 316.98 531.43 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "9" 14
%%Page: "10" 15
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(10) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.52 (Definitions can be organized in any sequence within the setup and start sections. The only restric-) 105 718.67 P
0.3 (tion is that an identifier must be defined before it is referenced. Comments may be placed anywhere in) 87 705.67 P
-0.14 (the ASSIST input file. Quoted SURE statements may also be placed anywhere in the input file. Because) 87 692.67 P
0.19 (SURE statements can appear in more than one section, they will be described next under the setup sec-) 87 679.67 P
(tion description.) 87 666.67 T
7 10.5 Q
(12.2.1. Setup Section) 105 640.92 T
2 11 Q
1.97 (The Setup Section is first in the ASSIST input file and contains definitions and a terminating) 105 622.01 P
4 F
-0.15 (SPACE) 87 609.01 P
2 F
-0.06 ( statement. The definitions can occur in any sequence, except that an identifier may not be refer-) 120 609.01 P
1.17 (enced before it is defined. The following sections detail the ASSIST statements that are valid in the) 87 596.01 P
(setup section of the file.) 87 583.01 T
7 10.5 Q
(12.2.1.1. Constant de\336nition statement.) 105 558.77 T
2 11 Q
1.12 (A constant definition statement equates an identifier to the) 276.83 558.77 P
(value it represents. For example) 87 545.77 T
4 10 Q
(NP = 3;) 132 526.35 T
(LAMBDA = 0.0052;) 132 514.35 T
(RECOVER = 0.005;) 132 502.35 T
2 11 Q
0.45 (These constants are also called) 105 483.61 P
5 F
0.45 (named constants) 245.63 483.61 P
2 F
0.45 ( to distinguish them from) 319.71 483.61 P
5 F
0.45 (literal values) 435.94 483.61 P
2 F
0.45 (. The word) 494.14 483.61 P
5 F
0.05 (constant) 87 470.61 P
2 F
0.05 ( is used generally to include both named constants and literal values. In the above example, the) 124.28 470.61 P
(name) 87 457.61 T
4 F
(LAMBDA) 113.58 457.61 T
2 F
( is a) 153.18 457.61 T
5 F
(named constant) 173.65 457.61 T
2 F
( whereas the value 0.0052 is a) 243 457.61 T
5 F
(literal value) 378.03 457.61 T
2 F
(.) 431.5 457.61 T
(Constants can also be defined in terms of previously defined constants as illustrated:) 105 437.53 T
4 10 Q
(LAMBDA = 1E-4;) 132 418.12 T
(GAMMA = 10*LAMBDA;) 132 406.12 T
2 11 Q
0.43 (Once defined, a named-constant identifier may be used instead of the value it represents. Constant) 105 387.37 P
0.76 (definitions remain static throughout the execution; thus, once a constant is defined, it cannot be rede-) 87 374.37 P
(fined to another value.) 87 361.37 T
1.03 (The ASSIST language assumes that all named constants are numeric constants. If the expression) 105 341.29 P
-0.12 (evaluates to an integer, then the constant will be an integer constant. If the expression evaluates to a real) 87 328.29 P
0.07 (number, the constant will be a real constant. If one of the values in the expression is an integer but con-) 87 315.29 P
(tains a decimal point, the constant will be a real constant even though its value might be an integer.) 87 302.29 T
0.4 (The user must use the word) 105 282.22 P
4 F
0.97 (BOOLEAN) 231.45 282.22 P
2 F
0.4 ( to specify that the constant will be a Boolean constant. For) 277.65 282.22 P
(example) 87 269.22 T
4 10 Q
(FLAG = BOOLEAN NP > 3;) 132 249.8 T
2 11 Q
(Optional parentheses may be added for clarity:) 105 231.06 T
4 10 Q
(FLAG = BOOLEAN \050NP > 3\051;) 132 211.65 T
2 11 Q
(The complete syntax of a constant definition is) 105 192.9 T
2 9 Q
(<identi\336er>) 132 168.16 T
2 10.5 Q
( =) 174.65 168.16 T
3 18 Q
([) 185.82 168.16 T
3 10.5 Q
(BOOLEAN) 191.82 168.16 T
3 18 Q
(]) 244.33 168.16 T
2 9 Q
(<de\336nition-clause>) 252.95 168.16 T
2 11 Q
(where) 87 145.74 T
2 9 Q
(<definition-clause>) 116.62 145.74 T
2 11 Q
( defines either a scalar or an array. Its syntax is) 187.26 145.74 T
2 9 Q
(<expr>) 132 127 T
2 7 Q
(or) 132 117.33 T
2 10.5 Q
([) 132 101 T
3 18 Q
([) 138.12 101 T
2 10.5 Q
( <#>) 144.12 101 T
3 F
(OF) 166.46 101 T
3 18 Q
(]) 183.67 101 T
2 9 Q
(<expr>) 192.29 101 T
3 18 Q
({) 221.06 101 T
3 10.5 Q
(,) 230.77 101 T
3 18 Q
([) 236.02 101 T
2 10.5 Q
( <#>) 242.02 101 T
3 F
(OF) 264.36 101 T
3 18 Q
(]) 281.57 101 T
2 9 Q
(<expr>) 290.19 101 T
3 18 Q
(}) 318.96 101 T
2 10.5 Q
( ]) 326.05 101 T
2 7 Q
(or) 132 88.33 T
3 10.5 Q
(ARRA) 132 72 T
(Y) 161.36 72 T
2 F
( \050) 168.94 72 T
3 18 Q
([) 177.68 72 T
2 10.5 Q
( <#>) 183.68 72 T
3 F
(OF) 206.02 72 T
3 18 Q
(]) 223.23 72 T
2 9 Q
(<expr>) 231.85 72 T
3 18 Q
({) 260.62 72 T
3 10.5 Q
(,) 270.34 72 T
3 18 Q
([) 275.59 72 T
2 10.5 Q
( <#>) 281.58 72 T
3 F
(OF) 303.93 72 T
3 18 Q
(]) 321.14 72 T
2 9 Q
(<expr>) 329.76 72 T
3 18 Q
(}) 358.52 72 T
2 10.5 Q
( \051) 365.62 72 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "10" 15
%%Page: "11" 16
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(1) 304.08 46 T
(1) 308.75 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.14 (The third form is included for compatibility with prior versions. Doubly subscripted arrays are also) 105 718.67 P
(allowed via repetition of the second form listed above. The syntax is) 87 705.67 T
2 10.5 Q
([) 132 687.81 T
(   [) 132 670.31 T
2 18 Q
([) 146 670.31 T
2 10.5 Q
( <#>) 151.99 670.31 T
3 F
(OF) 174.33 670.31 T
3 18 Q
(]) 191.54 670.31 T
2 9 Q
(<expr>) 200.16 670.31 T
3 18 Q
({) 228.93 670.31 T
3 10.5 Q
(,) 238.65 670.31 T
2 18 Q
([) 243.9 670.31 T
2 10.5 Q
( <#>) 249.89 670.31 T
3 F
(OF) 272.24 670.31 T
3 18 Q
(]) 289.45 670.31 T
2 9 Q
(<expr>) 298.07 670.31 T
3 18 Q
(}) 326.84 670.31 T
2 10.5 Q
( ]) 333.93 670.31 T
3 18 Q
({) 132 650.31 T
3 10.5 Q
(,) 141.72 650.31 T
2 F
( [) 144.34 650.31 T
3 18 Q
([) 153.09 650.31 T
2 10.5 Q
( <#>) 159.08 650.31 T
3 F
(OF) 181.43 650.31 T
3 18 Q
(]) 198.64 650.31 T
2 9 Q
(<expr>) 207.26 650.31 T
3 18 Q
({) 236.02 650.31 T
3 10.5 Q
(,) 245.74 650.31 T
3 18 Q
([) 250.99 650.31 T
2 10.5 Q
( <#>) 256.99 650.31 T
3 F
(OF) 279.33 650.31 T
3 18 Q
(]) 296.54 650.31 T
2 9 Q
(<expr>) 305.16 650.31 T
3 18 Q
(}) 333.93 650.31 T
2 10.5 Q
( ]) 341.02 650.31 T
3 18 Q
(}) 349.77 650.31 T
2 10.5 Q
(]) 132 635.31 T
2 11 Q
(All nonBoolean constants are echoed to the model output file.) 87 618.28 T
0.19 (An ASSIST identifier must not exceed 28 characters. Identifiers used for named constants that will) 105 600.08 P
0.55 (be passed to SURE must be unique in the first 12 characters. Constant array names should not exceed) 87 587.08 P
2.33 (8) 87 574.08 P
2.33 (characters because ASSIST automatically generates scalar identifier names to pass to SURE by) 95.25 574.08 P
0.59 (appending the index value. If the upper bound of a singly subscripted constant array index is no more) 87 561.08 P
0.59 (than 9, then 10 characters can be used for the array name. If the upper bounds of the two doubly sub-) 87 548.08 P
0.42 (scripted constant array indices exceed 9, then 6 or fewer characters may be required. To illustrate this,) 87 535.08 P
(consider the arrays:) 87 522.08 T
4 10 Q
(SINGLE = [ 1.2, 4.4, 0.00333 ];) 132 505.56 T
(DOUBLE = [) 132 493.56 T
(           [ 1.1,  1.2,  1.3 ],) 132 481.56 T
(           [ 2.1,  2.2,  2.3 ]) 132 469.56 T
(         ];) 132 457.56 T
2 11 Q
(The resulting model file output will contain the lines) 87 440.7 T
4 10 Q
(SINGLE_1 = 1.2;) 132 423.17 T
(SINGLE_2 = 4.4;) 132 411.17 T
(SINGLE_3 = 0.00333;) 132 399.17 T
(DOUBLE_1_1 = 1.1;) 132 387.17 T
(DOUBLE_1_2 = 1.2;) 132 375.17 T
(DOUBLE_1_3 = 1.3;) 132 363.17 T
(DOUBLE_2_1 = 2.1;) 132 351.17 T
(DOUBLE_2_2 = 2.2;) 132 339.17 T
(DOUBLE_2_3 = 2.3;) 132 327.17 T
2 11 Q
1.43 (All these model file identifiers are unique to their first 12 characters. An error message will be) 105 310.31 P
(printed by ASSIST if two separate constant identifier names are not unique to the first 12 characters.) 87 297.31 T
7 10.5 Q
(12.2.1.2. Option de\336nitions.) 105 273.95 T
2 11 Q
1.48 (The ASSIST language has some predefined identifiers called options) 227.52 273.95 P
0.01 (that can have states set to one of three values. The values are on, off, or full; equivalently, they are inte-) 87 260.95 P
(ger values of zero, one or two.) 87 247.95 T
(The syntax of an option definition is) 105 230.75 T
2 9 Q
(<option-name>) 132 212.89 T
(<\337ag-status>) 203.4 212.89 T
3 F
(;) 252.8 212.89 T
2 11 Q
(where the flag status is one of the following:) 87 195.86 T
3 10.5 Q
(OFF) 132 177 T
2 7 Q
(or) 132 166.83 T
3 10.5 Q
(ON) 132 155.5 T
2 7 Q
(or) 132 145.33 T
3 10.5 Q
(FULL) 132 134 T
2 7 Q
(or) 132 123.83 T
3 10.5 Q
(= 0) 132 112.5 T
2 7 Q
(or) 132 102.33 T
3 10.5 Q
(= 1) 132 91 T
2 7 Q
(or) 132 80.83 T
3 10.5 Q
(= 2) 132 69.5 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "11" 16
%%Page: "12" 17
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(12) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(The following options are currently defined in the ASSIST language:) 105 718.67 T
2 12 Q
(\245) 99 697.58 T
2 11 Q
0.1 (The) 111 697.58 P
4 F
0.25 (COMMENT) 130.96 697.58 P
2 F
0.1 ( option is used to control whether or not the source and destination state nodes of a) 177.16 697.58 P
0.9 (transition are written to the model output \336le as an ordered) 111 684.58 P
5 F
0.9 (n) 382.08 684.58 P
2 F
0.9 (-tuple in comments. The default is) 387.58 684.58 P
4 F
1.79 (COMMENT ON) 111 671.58 P
2 F
0.75 (. If the) 178.79 671.58 P
4 F
1.79 (SPACE) 212.8 671.58 P
2 F
0.75 ( statement has a great number of state-space variables, it will take) 245.8 671.58 P
0.28 (many characters on a line to print the state node. In such instances, ASSIST will force) 111 658.58 P
4 F
0.68 (COMMENT) 496.8 658.58 P
1.24 (OFF) 111 645.58 P
2 F
0.51 (, regardless of what the user requested. When) 129.92 645.58 P
4 F
1.24 (COMMENT) 336.87 645.58 P
2 F
0.51 ( is) 383.07 645.58 P
4 F
1.24 (ON) 396.94 645.58 P
2 F
0.51 ( but is forced) 410.14 645.58 P
4 F
1.24 (OFF) 472.69 645.58 P
2 F
0.51 ( because of) 492.49 645.58 P
-0.14 (length, a warning message is generated. T) 111 632.58 P
-0.14 (o suppress the warning, add a) 293.91 632.58 P
4 F
-0.34 (COMMENT OFF) 425.96 632.58 P
2 F
-0.14 ( statement) 498.23 632.58 P
(to the input \336le. Use of) 111 619.58 T
4 F
(COMMENT FULL) 215.19 619.58 T
2 F
( is equivalent to) 294.39 619.58 T
4 F
(COMMENT ON) 367.11 619.58 T
2 F
(;) 433.11 619.58 T
2 12 Q
(\245) 99 600.5 T
2 11 Q
-0.19 (The) 111 600.5 P
4 F
-0.46 (ECHO) 130.66 600.5 P
2 F
-0.19 ( option controls whether or not the input \336le lines are echoed to the standard error \336le. If) 157.06 600.5 P
0.33 (set to) 111 587.5 P
4 F
0.8 (ON) 137.95 587.5 P
2 F
0.33 (, the input \336le lines are echoed. If the model \336le must contain the echo option, the state-) 151.15 587.5 P
0.68 (ment must be a SURE statement included in quotes as in \322ECHO = 1;\323. Use of) 111 574.5 P
4 F
1.63 (ECHO FULL) 471.2 574.5 P
2 F
0.68 ( is) 532.23 574.5 P
(equivalent to) 111 561.5 T
4 F
(ECHO ON) 170.88 561.5 T
2 F
(;) 217.08 561.5 T
2 12 Q
(\245) 99 542.42 T
2 11 Q
-0.14 (The) 111 542.42 P
4 F
-0.33 (ONEDEATH) 130.72 542.42 P
2 F
-0.14 ( option controls the number of death states in the model. If reset to) 183.52 542.42 P
4 F
-0.33 (OFF) 477.01 542.42 P
2 F
-0.14 (, then each) 495.93 542.42 P
0.25 (distinct death state will be enumerated as a separate death state in the SURE model output \336le. In) 111 529.42 P
0.04 (some models thousands of dif) 111 516.42 P
0.04 (ferent death states will result. The default is) 242.35 516.42 P
4 F
0.1 (ONEDEATH ON) 437.88 516.42 P
2 F
0.04 (, which) 510.58 516.42 P
-0.02 (forces the lumping of all death states according to the \336rst) 111 503.42 P
4 F
-0.06 (DEATHIF) 368.9 503.42 P
2 F
-0.02 ( statement to which that state) 415.1 503.42 P
0.42 (conformed. State 1 will contain all death states satisfying the \336rst) 111 490.42 P
4 F
1.01 (DEATHIF) 405.89 490.42 P
2 F
0.42 (; state 2 will contain) 452.09 490.42 P
-0.07 (all death states that did not satisfy the \336rst) 111 477.42 P
4 F
-0.18 (DEATHIF) 298.25 477.42 P
2 F
-0.07 ( but satis\336ed the second, and so on. Thus, the) 344.45 477.42 P
0.23 (probability of system failure caused by each condition speci\336ed by a) 111 464.42 P
4 F
0.56 (DEATHIF) 418.18 464.42 P
2 F
0.23 ( statement will be) 464.38 464.42 P
0.62 (given by the probability of reaching the corresponding death state. Use of) 111 451.42 P
4 F
1.49 (ONEDEATH FULL) 445.01 451.42 P
2 F
0.62 ( is) 532.29 451.42 P
(equivalent to) 111 438.42 T
4 F
(ONEDEATH ON) 170.88 438.42 T
2 F
(;) 243.48 438.42 T
2 12 Q
(\245) 99 419.33 T
2 11 Q
0.41 (The) 111 419.33 P
4 F
0.99 (TRIM) 131.27 419.33 P
2 F
0.41 ( option controls the kind of trimming that is done in the model. T) 157.67 419.33 P
0.41 (rimming is discussed) 449.28 419.33 P
(in section 4.2. The default is) 111 406.33 T
4 F
(TRIM OFF) 238.71 406.33 T
2 F
(.) 290.63 406.33 T
0.47 (Unlike constant definitions, which are written to the model file, option definitions are known only) 105 387.25 P
(to ASSIST.) 87 374.25 T
7 10.5 Q
(12.2.1.3. INPUT statement.) 105 349 T
2 11 Q
1.15 (An) 225.75 349 P
4 F
2.76 (INPUT) 243.09 349 P
2 F
1.15 ( statement specifies that the user should be queried for the) 276.09 349 P
(values of one or more named constants.) 87 336 T
(The syntax is) 105 314.92 T
3 10.5 Q
(INPUT) 132 294.17 T
2 9 Q
(<input-list>) 167.29 294.17 T
3 10.5 Q
(;) 212.57 294.17 T
2 11 Q
1.18 (where) 87 273.25 P
2 9 Q
0.97 (<input-list>) 117.81 273.25 P
2 11 Q
1.18 ( consists of a series of identifiers separated by commas and where each identifier is) 160.47 273.25 P
(optionally preceded by a prompt message.) 87 260.25 T
(For example, interactive input for identifiers LAMBDA and DELTA may be specified as follows:) 105 240.17 T
4 10 Q
(INPUT LAMBDA,DELTA;) 132 219.75 T
2 11 Q
(This statement will result in the default prompt messages during execution:) 87 200 T
4 10 Q
(LAMBDA?) 132 180.58 T
(DELTA?) 132 168.58 T
2 11 Q
-0.07 (For the above example, the user is first prompted for) 105 148.83 P
4 F
-0.17 (LAMBDA) 338.62 148.83 P
2 F
-0.07 ( and must enter an integer, real value,) 378.22 148.83 P
0.25 (or expression. The user is then prompted for) 87 135.83 P
4 F
0.59 (DELTA) 286.62 135.83 P
2 F
0.25 ( and must again enter an integer, value, real value,) 319.62 135.83 P
(or expression. Each expression must be entered with a terminating semicolon.) 87 122.83 T
(The previous example could also have been specified as follows:) 105 101.75 T
4 10 Q
(INPUT \322Enter failure rate of a processor:\323,LAMBDA,) 132 81.33 T
(      \322Enter rate to reconfigure in a spare:\323,DELTA;) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "12" 17
%%Page: "13" 18
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(13) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(in which case the prompt messages would read) 87 718.67 T
4 10 Q
(Enter failure rate of a processor:) 132 699.76 T
(Enter rate to reconfigure in a spare:) 132 687.76 T
2 11 Q
(More generally, the syntax of an input item in the input list is) 87 668.52 T
2 9 Q
(<identi\336er>) 132 649.28 T
2 7 Q
(or) 132 639.61 T
4 10 Q
(\322) 132 628.28 T
2 9 Q
(<prompt>) 140.62 628.28 T
4 10 Q
(\322) 179.4 628.28 T
3 10.5 Q
(:) 188.03 628.28 T
2 9 Q
(<identi\336er>) 194.15 628.28 T
2 11 Q
-0.07 (Each entered value or expression must be terminated by a semicolon. Because expressions can span) 105 607.88 P
0.51 (more than one line, pressing the return key is not a substitute for a semicolon. Failure to enter a semi-) 87 594.88 P
(colon will cause ASSIST to wait until one is typed in.) 87 581.88 T
0.46 (A Boolean constant can also be input. The method is to precede the identifier name with the word) 105 561.3 P
4 F
(BOOLEAN) 87 548.3 T
2 F
( in the) 133.2 548.3 T
4 F
(INPUT) 163.45 548.3 T
2 F
( statement. For example,) 196.45 548.3 T
4 10 Q
(INPUT BOOLEAN FLAG;) 132 528.4 T
(INPUT \322Enter the flag: \322 : BOOLEAN FLAG;) 132 516.4 T
2 11 Q
(resulting in respective prompts) 87 497.16 T
4 10 Q
(FLAG?) 132 478.25 T
(Enter the flag:) 132 466.25 T
7 10.5 Q
(12.2.1.4. Comments.) 105 441.84 T
2 11 Q
3.13 (Comments in ASSIST must either be initiated with) 195.72 441.84 P
3 F
3.13 (\322\050*\323) 448.14 441.84 P
2 F
3.13 ( and terminated) 468.3 441.84 P
(with) 87 428.84 T
3 F
(\322*\051\323) 109.31 428.84 T
2 F
( or be initiated with a left curly bracket) 129.47 428.84 T
3 F
(\322{\323) 303.91 428.84 T
2 F
(and terminated with a right curly bracket) 321.99 428.84 T
3 F
(\322}\323) 504.37 428.84 T
2 F
(.) 519.71 428.84 T
0.4 (A comment may appear anywhere in the input where an extra space could occur. A comment may) 105 408.27 P
(not appear in the middle of a literal constant or an identifier. For example, the following are) 87 395.27 T
5 F
(illegal) 493.63 395.27 T
2 F
(:) 521.74 395.27 T
4 10 Q
(PI = 1.14\050* more decimals *\05115926;) 132 375.36 T
(PI = 1.14{ more decimals }15926;) 132 363.36 T
(MU = 4 * P\050*comment*\051I;) 132 351.36 T
2 11 Q
0.41 (When a comment spans more than one line, a capital) 105 332.12 P
4 F
1 (X) 344.08 332.12 P
2 F
0.41 ( appears in the log file for each of the lines) 350.67 332.12 P
(that begins with the continuation of a comment. For example,) 87 319.12 T
4 10 Q
(\0500001\051: \050*) 132 299.22 T
(\0500002\051X    This is a very very very) 132 287.22 T
(\0500003\051X    long comment.) 132 275.22 T
(\0500004\051X *\051) 132 263.22 T
(\0500005\051:) 132 251.22 T
7 10.5 Q
(12.2.1.5. Quoted SURE statement.) 105 226.81 T
2 11 Q
0.42 (Statements in the ASSIST input file that are put inside quotation) 255.22 226.81 P
(marks are copied into the SURE input file and are not otherwise processed by ASSIST. For example,) 87 213.81 T
4 10 Q
(\322INPUT DELTA;\323) 132 193.91 T
(\322FOO = 1 TO 10 BY 2;\323) 132 181.91 T
(\322\050* THIS IS A LONG COMMENT TO BE) 132 169.91 T
(INCLUDED IN THE SURE INPUT FILE *\051\323) 132 157.91 T
2 11 Q
0.18 (The statements in quotation marks need not be followed by a semicolon for ASSIST. However, for) 105 138.67 P
0.17 (the statement to be followed by a semicolon in the SURE input file, a semicolon must be put inside the) 87 125.67 P
1.91 (quotation marks in the ASSIST input file. These statements are put in the SURE input file in the) 87 112.67 P
0.71 (sequence encountered. Older versions of ASSIST \050before version 7.0\051, placed these statements before) 87 99.67 P
1.82 (the constant definitions. The new version gives the user more control because constant and option) 87 86.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "13" 18
%%Page: "14" 19
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(14) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.3 (definitions can now be mixed with quoted SURE statements, and they will be placed in the model out-) 87 718.67 P
(put file in the same order in which they were typed into the input file.) 87 705.67 T
7 10.5 Q
(12.2.1.6. SP) 105 679.78 T
(ACE statement.) 155.85 679.78 T
2 11 Q
1.2 (The) 226.16 679.78 P
4 F
2.88 (SPACE) 247.21 679.78 P
2 F
1.2 ( statement is used to specify the state space on which the) 280.21 679.78 P
0.57 (model is defined. The state space is defined by an) 87 666.78 P
5 F
0.57 (n) 314.15 666.78 P
2 F
0.57 (-dimensional vector where each component of the) 319.65 666.78 P
0.38 (vector is called a) 87 653.78 P
5 F
0.38 (state-space variable) 165.49 653.78 P
2 F
0.38 ( and defines an attribute of the system being modeled. Attributes) 254.77 653.78 P
(can be whatever is convenient. Examples might include such things as) 87 640.78 T
2 12 Q
(\245) 99 619.05 T
2 11 Q
(the number of components) 111 619.05 T
2 12 Q
(\245) 99 599.32 T
2 11 Q
(the number of working components) 111 599.32 T
2 12 Q
(\245) 99 579.6 T
2 11 Q
(the number of spare components) 111 579.6 T
2 12 Q
(\245) 99 559.87 T
2 11 Q
(the number of active failed components) 111 559.87 T
2 12 Q
(\245) 99 540.15 T
2 11 Q
(the number with benign faults) 111 540.15 T
2 12 Q
(\245) 99 520.42 T
2 11 Q
(a \337ag for each component indicating whether it is working) 111 520.42 T
(The syntax of the) 87 500.7 T
4 F
(SPACE) 166.43 500.7 T
2 F
( statement is) 199.43 500.7 T
3 10.5 Q
(SP) 132 479.3 T
(ACE) 143.48 479.3 T
2 F
( =) 165.64 479.3 T
2 9 Q
(<space-picture>) 176.81 479.3 T
3 10.5 Q
(;) 237.57 479.3 T
2 11 Q
(The syntax of a <space-picture> is) 87 457.74 T
2 10.5 Q
(\050) 132 431.35 T
2 9 Q
(<space-item>) 138.12 431.35 T
3 18 Q
({) 189.89 431.35 T
3 10.5 Q
(,) 199.6 431.35 T
2 9 Q
(<space-item>) 204.85 431.35 T
3 18 Q
(}) 256.62 431.35 T
2 10.5 Q
( \051) 263.71 431.35 T
2 11 Q
(The syntax of a) 87 407.29 T
2 9 Q
(<space-item>) 157.87 407.29 T
2 11 Q
( is) 207.01 407.29 T
2 9 Q
(<ident>) 132 386.9 T
2 7 Q
(or) 132 377.23 T
2 9 Q
(<ident>) 132 360.9 T
3 10.5 Q
(:) 162.78 360.9 T
3 18 Q
([) 168.9 360.9 T
3 10.5 Q
(ARRA) 177.52 360.9 T
(Y) 206.88 360.9 T
2 F
( [) 214.46 360.9 T
2 9 Q
(<expr>) 223.2 360.9 T
8 10.5 Q
(..) 251.97 360.9 T
2 9 Q
(<expr>) 267.2 360.9 T
2 10.5 Q
( ]) 293.34 360.9 T
3 F
(OF) 302.09 360.9 T
3 18 Q
(]) 319.3 360.9 T
2 9 Q
(<expr>) 327.92 360.9 T
8 10.5 Q
(..) 356.69 360.9 T
2 9 Q
(<expr>) 371.91 360.9 T
2 7 Q
(or) 132 348.23 T
2 9 Q
(<ident>) 132 331.9 T
3 10.5 Q
(:) 162.78 331.9 T
3 18 Q
([) 168.9 331.9 T
3 10.5 Q
(ARRA) 177.52 331.9 T
(Y) 206.88 331.9 T
2 F
( [) 214.46 331.9 T
2 9 Q
(<expr>) 223.2 331.9 T
8 10.5 Q
(..) 251.97 331.9 T
2 9 Q
(<expr>) 267.2 331.9 T
2 10.5 Q
( ]) 293.34 331.9 T
3 F
(OF) 302.09 331.9 T
3 18 Q
(]) 319.3 331.9 T
3 10.5 Q
(BOOLEAN) 327.92 331.9 T
2 7 Q
(or) 132 319.23 T
2 9 Q
(<space-picture>) 132 308.9 T
2 11 Q
1.14 (The ellipsis) 105 287.84 P
8 10.5 Q
2.62 (..) 161.07 287.84 P
2 11 Q
1.14 ( between the square brackets following the word) 173.67 287.84 P
4 F
2.75 (ARRAY) 399.11 287.84 P
2 F
1.14 ( denotes the value range) 432.11 287.84 P
-0 (over which an index into the array can vary. The ellipses that are shown immediately after the colon for) 87 274.84 P
0.84 (a scalar and immediately after the word) 87 261.84 P
4 F
2.02 (OF) 269.76 261.84 P
2 F
0.84 ( for an array denote the value range over which the state-) 282.96 261.84 P
0.46 (space variable can vary, i.e., the value range that legally can be stored for the scalar \050array\051 during the) 87 248.84 P
(generation phase. Any values between 0 and 32767 are allowed for subscripts or ranges.) 87 235.84 T
-0.04 (The syntax for the) 105 214.12 P
4 F
-0.1 (SPACE) 187.93 214.12 P
2 F
-0.04 ( statement is recursive because a space picture can contain a nested space) 220.93 214.12 P
(picture within it. This allows for states such as) 87 201.12 T
4 10 Q
(\0506,0,\0502,2,2\051,8\051) 132 180.06 T
(\0506,0,\0502,2,\0504,1,4\051,TRUE,8\051,FALSE,4\051) 132 168.06 T
2 11 Q
0.34 (This feature can be useful for analysis and for checking correctness when a model contains a large) 105 147.67 P
0.91 (number of state-space variables. Long lists of state-space variable values in the model-file comments) 87 134.67 P
2.09 (can be difficult to read unless some subgrouping is done. Consistent nesting of the state space is) 87 121.67 P
0.52 (enforced between the) 87 108.67 P
4 F
1.26 (SPACE) 185.4 108.67 P
2 F
0.52 (,) 218.4 108.67 P
4 F
1.26 (START) 224.42 108.67 P
2 F
0.52 (, and) 257.42 108.67 P
4 F
1.26 (TRANTO) 282.61 108.67 P
2 F
0.52 ( statements \050i.e., if nested parentheses are used in) 322.21 108.67 P
1.1 (the) 87 95.67 P
4 F
2.64 (SPACE) 104.29 95.67 P
2 F
1.1 ( statement, they must also be used in the) 137.29 95.67 P
4 F
2.64 (START) 327.45 95.67 P
2 F
1.1 ( statement and whenever the entire state) 360.45 95.67 P
0.88 (space is enumerated in a) 87 82.67 P
4 F
2.11 (TRANTO) 201.67 82.67 P
2 F
0.88 ( statement\051. Nested parentheses have no actual effect on the model) 241.27 82.67 P
(generation.) 87 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "14" 19
%%Page: "15" 20
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(15) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
-0.2 (Some examples of) 105 718.67 P
4 F
-0.48 (SPACE) 188.41 718.67 P
2 F
-0.2 ( statements follow. In these examples,) 221.41 718.67 P
4 F
-0.48 (NSI_pool) 390.68 718.67 P
2 F
-0.2 ( is a constant that must) 443.48 718.67 P
(be defined prior to the) 87 705.67 T
4 F
(SPACE) 187.51 705.67 T
2 F
( statement to represent the) 220.51 705.67 T
5 F
(number of spares initially) 338.73 705.67 T
2 F
( in the spare pool.) 452.1 705.67 T
4 10 Q
(SPACE =) 132 682.58 T
(  \050) 132 670.58 T
(   NW_triad  : 0..3, \050* Count of working in \322triad\323 *\051) 132 658.58 T
(   NFA_triad : 0..3, \050* Count of active failed in \322triad\323 *\051) 132 646.58 T
(   NFB_triad : 0..3, \050* Count of benign failed in \322triad\323 *\051) 132 634.58 T
(   NCF       : 0..9  \050* Number of component failures for PRUNEIF *\051) 132 622.58 T
(  \051;) 132 610.58 T
(SPACE =) 132 588.83 T
(  \050) 132 576.83 T
-0.21 (   \050W_triad : ARRAY [0..3] OF BOOLEAN\051, \050* Each working in \322triad\323 *\051) 132 564.83 P
(   NS_pool : 0..NSI_pool, \050* Spares count, COLD pool \322pool\323 *\051) 132 552.83 T
-0.36 (NCF : 0..3+NSI_pool \050* Number of component failures for PRUNEIF *\051) 150.58 540.83 P
(  \051;) 132 528.83 T
2 11 Q
-0.1 (Each variable with an unspecified range has the default range from 0 through 255. Since large mod-) 105 506.42 P
0.22 (els may contain hundreds of thousands of states that must all be stored during rule generation, ASSIST) 87 493.42 P
0.28 (packs the values into as few bits as possible. When explicit ranges are used, only a required number of) 87 480.42 P
-0.05 (bits are used, thus greatly decreasing the amount of memory needed to store the model. Thus, execution) 87 467.42 P
(time speeds up because) 87 454.42 T
2 12 Q
(\245) 99 430.67 T
2 11 Q
(less page swapping of virtual memory is needed) 111 430.67 T
2 12 Q
(\245) 99 408.92 T
2 11 Q
(the state matching \050hashing\051 algorithm is more ef) 111 408.92 T
(\336cient) 327.41 408.92 T
1.06 (Checks are also made during rule generation, and error messages are printed whenever a state is) 105 387.17 P
0.87 (generated that contains a state-space variable that is out of range as defined in the) 87 374.17 P
4 F
2.09 (SPACE) 461.46 374.17 P
2 F
0.87 ( statement.) 494.46 374.17 P
0.32 (Thus, for speed and model verification reasons, the user is advised to give each state-space variable an) 87 361.17 P
(explicit range.) 87 348.17 T
0.63 (Examples of ranges and corresponding numbers of bits that are required to encode each range are) 105 324.42 P
0.48 (listed in table 9. The number of bits required depends only upon the difference between the upper and) 87 311.42 P
(lower bounds of a given range, not upon the values themselves.) 87 298.42 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The) 87 69.67 T
4 F
(SPACE) 106.86 69.67 T
2 F
( statement marks the end of the setup section.) 139.85 69.67 T
2 9 Q
(T) 218.46 264.75 T
(able 9. Bits Required to Pack a State-Space V) 223.33 264.75 T
(ariable) 387.05 264.75 T
(Range) 255.5 241.75 T
(Bits required) 339.63 241.75 T
(BOOLEAN) 245.5 229.75 T
(1) 360.75 229.75 T
(0..1) 260.25 217.75 T
(1) 360.75 217.75 T
(0..2) 260.25 205.75 T
(2) 360.75 205.75 T
(0..3) 260.25 193.75 T
(2) 360.75 193.75 T
(0..4) 260.25 181.75 T
(3) 360.75 181.75 T
(0..7) 260.25 169.75 T
(3) 360.75 169.75 T
(0..8) 260.25 157.75 T
(4) 360.75 157.75 T
(0..15) 258 145.75 T
(4) 360.75 145.75 T
(0..16) 258 133.75 T
(5) 360.75 133.75 T
(33..34) 255.75 121.75 T
(1) 360.75 121.75 T
(101..1) 251.42 109.75 T
(16) 273.58 109.75 T
(4) 360.75 109.75 T
219 249.5 219 106 2 L
V
0.5 H
0 Z
N
315 250 315 105.5 2 L
V
N
411 249.5 411 106 2 L
V
N
218.75 249.75 411.25 249.75 2 L
V
N
218.75 237.75 411.25 237.75 2 L
V
N
218.75 105.75 411.25 105.75 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "15" 20
%%Page: "16" 21
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(16) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
7 F
(12.2.2. Start Section) 105 719 T
2 11 Q
1.09 (The start section of the file contains more definitions plus a single) 105 700.17 P
4 F
2.62 (START) 411.41 700.17 P
2 F
1.09 ( statement, which can) 444.41 700.17 P
0.01 (occur anywhere in the section. There must be exactly one) 87 687.17 P
4 F
0.03 (START) 342.81 687.17 P
2 F
0.01 ( statement or an error message will be) 375.81 687.17 P
-0.07 (printed. Three additional types of macro definitions are allowed in this section, namely the) 87 674.17 P
4 F
-0.17 (FUNCTION) 487.45 674.17 P
2 F
-0.07 (,) 540.25 674.17 P
4 F
3.55 (IMPLICIT) 87 661.17 P
2 F
1.48 (, and) 139.8 661.17 P
4 F
3.55 (VARIABLE) 166.9 661.17 P
2 F
1.48 ( definitions. The definitions can occur in any sequence, except that an) 219.7 661.17 P
(identifier may not be referenced before it is defined.) 87 648.17 T
7 10.5 Q
(12.2.3. IMPLICIT Statement) 105 622.5 T
2 11 Q
0.86 (The) 105 603.67 P
4 F
2.08 (IMPLICIT) 125.72 603.67 P
2 F
0.86 ( statement is used to define a quantity that is not in the state space itself but is a) 178.52 603.67 P
0.72 (function of the state space. The value of the implicit function is based upon constants and state-space) 87 590.67 P
(variables.) 87 577.67 T
0.68 (For example, if) 105 557.67 P
4 F
1.62 (NWP) 177.3 557.67 P
2 F
0.68 ( is a state-space variable representing the number of working processors, and) 197.1 557.67 P
4 F
(NI) 87 544.67 T
2 F
( is a constant denoting the number of initial processors, then the declaration) 100.2 544.67 T
4 10 Q
(IMPLICIT NFP[NWP] = NI - NWP;) 132 525.33 T
2 11 Q
0.34 (defines) 87 506.67 P
4 F
0.82 (NFP) 121.86 506.67 P
2 F
0.34 ( \050number of failed processors\051 to be the difference between the initial number and the cur-) 141.66 506.67 P
0.05 (rent number of working processors.  The implicit function shown above can be referenced as illustrated) 87 493.67 P
(in the following) 87 480.67 T
4 F
(DEATHIF) 160.03 480.67 T
2 F
( statement:) 206.23 480.67 T
4 10 Q
(DEATHIF NWP <= NFP;) 132 462.33 T
2 11 Q
(The syntax is) 87 443.67 T
3 10.5 Q
(IMPLICIT) 132 419 T
2 9 Q
(<identi\336er>) 184.79 419 T
2 10.5 Q
( [) 227.45 419 T
2 9 Q
(<state-space-variable-list>) 236.19 419 T
2 10.5 Q
( ]) 331.82 419 T
3 18 Q
([) 340.56 419 T
2 10.5 Q
( \050) 346.56 419 T
2 9 Q
(<parameter) 355.3 419 T
(-list>) 396.18 419 T
2 10.5 Q
( \051) 415.26 419 T
3 18 Q
(]) 424.01 419 T
2 10.5 Q
( =) 430 419 T
2 9 Q
(<body>) 441.17 419 T
3 10.5 Q
(;) 471.95 419 T
2 11 Q
0.88 (The) 105 396.67 P
2 9 Q
0.72 (<state-space-variable-list>) 125.74 396.67 P
2 11 Q
0.88 ( consists of one or more state-space variable-name identifiers separated) 221.36 396.67 P
-0.01 (by commas. The identifiers must already have been defined in a) 87 383.67 P
4 F
-0.02 (SPACE) 371.03 383.67 P
2 F
-0.01 ( statement. All state-space vari-) 404.03 383.67 P
0.3 (ables that are referenced in the body of an) 87 370.67 P
4 F
0.73 (IMPLICIT) 276.97 370.67 P
2 F
0.3 ( statement must be listed in the state-space vari-) 329.77 370.67 P
(able list.) 87 357.67 T
1.37 (The optional) 105 337.67 P
2 9 Q
1.12 (<parameter-list>) 166.39 337.67 P
2 11 Q
1.37 ( is used to declare an) 226.53 337.67 P
4 F
3.28 (IMPLICIT) 329.42 337.67 P
2 F
1.37 ( that is also a function of specified) 382.22 337.67 P
0.21 (parameters. All parameters are positional and must therefore be passed in a consistent order.   The user) 87 324.67 P
1.42 (decides how many parameters a certain function will have.   The user may not vary the number of) 87 311.67 P
0.11 (parameters that are passed from the number of parameters that are defined. The parameter names in the) 87 298.67 P
1.58 (parameter list are separated by commas.   Parameter names may be reused in other) 87 285.67 P
4 F
3.8 (IMPLICIT) 476.7 285.67 P
2 F
1.58 ( or) 529.5 285.67 P
4 F
1.68 (FUNCTION) 87 272.67 P
2 F
0.7 ( definitions or as) 139.8 272.67 P
4 F
1.68 (FOR) 218.98 272.67 P
2 F
0.7 ( indices, but they cannot be named constants or state-space variable) 238.78 272.67 P
0.04 (names. Any variables, such as) 87 259.67 P
4 F
0.1 (FOR) 222.53 259.67 P
2 F
0.04 ( index variables, which are referenced in the body of an) 242.33 259.67 P
4 F
0.1 (IMPLICIT) 490.2 259.67 P
2 F
(and not already listed as state-space variables, must be listed in the optional parameter list.) 87 246.67 T
0.97 (The) 105 226.67 P
2 9 Q
0.79 (<body>) 125.82 226.67 P
2 11 Q
0.97 ( of the) 153.98 226.67 P
4 F
2.32 (IMPLICIT) 187.73 226.67 P
2 F
0.97 ( definition is the expression defining the value as a function of the) 240.53 226.67 P
0.16 (specified state-space variables and parameters. Named constants and reserved words may be freely ref-) 87 213.67 P
(erenced in the body and must not be specified with either the state-space variables or parameters.) 87 200.67 T
0.59 (The) 105 180.67 P
4 F
1.42 (IMPLICIT) 125.45 180.67 P
2 F
0.59 ( may be invoked in) 178.25 180.67 P
4 F
1.42 (TRANTO) 268.28 180.67 P
2 F
0.59 (,) 307.88 180.67 P
4 F
1.42 (DEATHIF) 313.97 180.67 P
2 F
0.59 (,) 360.17 180.67 P
4 F
1.42 (PRUNEIF) 366.26 180.67 P
2 F
0.59 (,) 412.46 180.67 P
4 F
1.42 (ASSERT) 418.55 180.67 P
2 F
0.59 (,) 458.15 180.67 P
4 F
1.42 (IF) 464.24 180.67 P
2 F
0.59 (, or) 477.44 180.67 P
4 F
1.42 (FOR) 496.03 180.67 P
2 F
0.59 ( state-) 515.83 180.67 P
0.63 (ments or in later) 87 167.67 P
4 F
1.51 (IMPLICIT) 164.06 167.67 P
2 F
0.63 ( or) 216.86 167.67 P
4 F
1.51 (FUNCTION) 232.77 167.67 P
2 F
0.63 ( definitions by giving the name followed by the values in) 285.57 167.67 P
-0.27 (parentheses for each of its parameters. If the) 87 154.67 P
4 F
-0.65 (IMPLICIT) 282.47 154.67 P
2 F
-0.27 ( definition does not include a parameter list, the) 335.27 154.67 P
4 F
-0.06 (IMPLICIT) 87 141.67 P
2 F
-0.03 ( is invoked by its name alone.   The following example illustrates the definition and invoca-) 139.8 141.67 P
(tion of) 87 128.67 T
4 F
(IMPLICIT) 118.78 128.67 T
2 F
(s:) 171.58 128.67 T
4 9.5 Q
-0.51 (SPACE = \050NWP:ARRAY[1..5] OF 0..3\051; \050* Number working in each of five triads *\051) 105 109.67 P
(IMPLICIT NFP[NWP]\050IX\051 = 3 - NWP[IX]; \050* Number failed in each triad *\051) 105 92.17 T
(IMPLICIT TOTALW[NWP] = SUM\050NWP\051;) 105 80.67 T
(IMPLICIT TOTALF[NWP] = 3*5-TOTALW;) 105 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "16" 21
%%Page: "17" 22
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(17) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(FOR III IN [1..5]) 105 719.67 T
(    IF \050NFP\050III\051>0\051 TRANTO NWP[III]=0 BY 1.E-5;) 105 708.17 T
(ENDFOR;) 105 696.67 T
(DEATHIF TOTALF > 6;) 105 685.17 T
2 11 Q
0.49 (In the above example, the) 105 667.02 P
4 F
1.18 (IMPLICIT) 223.54 667.02 P
2 F
0.49 ( function) 276.34 667.02 P
4 F
1.18 (NFP) 319.49 667.02 P
2 F
0.49 ( is declared a function of the state-space vari-) 339.29 667.02 P
0.38 (able) 87 654.02 P
4 F
0.91 (NWP) 108.46 654.02 P
2 F
0.38 ( and the parameter) 128.26 654.02 P
4 F
0.91 (IX) 214.08 654.02 P
2 F
0.38 (.   The value of) 227.28 654.02 P
4 F
0.91 (NFP) 298.9 654.02 P
2 F
0.38 ( is computed as three minus the current number of) 318.7 654.02 P
2.52 (working processors in the triad corresponding to the passed parameter. The) 87 641.02 P
4 F
6.04 (IMPLICIT) 448.27 641.02 P
2 F
2.52 ( function) 501.07 641.02 P
4 F
0.46 (TOTALW) 87 628.02 P
2 F
0.19 ( is also a function of the state-space variable) 126.6 628.02 P
4 F
0.46 (NWP) 325.96 628.02 P
2 F
0.19 ( but has no parameters.   This function value) 345.76 628.02 P
0 (is computed as the number of working processors in all five triads.   The) 87 615.02 P
4 F
0.01 (IMPLICIT) 408.43 615.02 P
2 F
0 ( function) 461.23 615.02 P
4 F
0.01 (TOTALF) 503.4 615.02 P
2 F
0.8 (is also a function of the state-space variable) 87 602.02 P
4 F
1.91 (NWP) 288.27 602.02 P
2 F
0.8 ( but has no parameters. The body of) 308.07 602.02 P
4 F
1.91 (TOTALF) 475.43 602.02 P
2 F
0.8 ( refer-) 515.03 602.02 P
0.64 (ences the value of) 87 589.02 P
4 F
1.54 (IMPLICIT) 171.42 589.02 P
2 F
0.64 ( function) 224.22 589.02 P
4 F
1.54 (TOTALW) 267.67 589.02 P
2 F
0.64 (.   Since) 307.27 589.02 P
4 F
1.54 (TOTALW) 348.02 589.02 P
2 F
0.64 ( is computed based upon the state-) 387.62 589.02 P
0.04 (space variable) 87 576.02 P
4 F
0.1 (NWP) 152.45 576.02 P
2 F
0.04 (, then) 172.25 576.02 P
4 F
0.1 (NWP) 199.52 576.02 P
2 F
0.04 ( must be listed in the state-space variable list for) 219.32 576.02 P
4 F
0.1 (TOTALF) 434.83 576.02 P
2 F
0.04 (, even though it) 474.43 576.02 P
-0.15 (is only referenced indirectly.  When) 87 563.02 P
4 F
-0.37 (NFP) 247.06 563.02 P
2 F
-0.15 ( is referenced in the) 266.86 563.02 P
4 F
-0.37 (IF) 355.59 563.02 P
2 F
-0.15 (, the value of) 368.79 563.02 P
4 F
-0.37 (III) 428.36 563.02 P
2 F
-0.15 ( is passed as a param-) 448.16 563.02 P
0.54 (eter to satisfy the parameter requirements as declared in the) 87 550.02 P
4 F
1.29 (IMPLICIT NFP) 356.91 550.02 P
2 F
0.54 ( line. When) 437.4 550.02 P
4 F
1.29 (TOTALF) 492.77 550.02 P
2 F
0.54 ( is) 532.38 550.02 P
0.38 (referenced in the) 87 537.02 P
4 F
0.93 (DEATHIF) 164.82 537.02 P
2 F
0.38 ( statement, no parameters are specified none are expected, as was declared) 211.01 537.02 P
(in the) 87 524.02 T
4 F
(IMPLICIT TOTALF) 114.5 524.02 T
2 F
( line.) 213.5 524.02 T
-0.06 (If an) 105 504.37 P
4 F
-0.16 (IMPLICIT) 128.08 504.37 P
2 F
-0.06 ( is declared without a parameter list, then it must be referenced without one.   If an) 180.88 504.37 P
4 F
0.09 (IMPLICIT) 87 491.37 P
2 F
0.04 ( statement is declared with a parameter list, values must be passed for all parameters during) 139.8 491.37 P
-0.21 (invocation so that they can be substituted for their respective parameters. Passed values can be numbers,) 87 478.37 P
1.5 (named constants, variables, or expressions.   For example, the following log file excerpt shows the) 87 465.37 P
(incorrect reference of some) 87 452.37 T
4 F
(IMPLICIT) 210.39 452.37 T
2 F
( functions:) 263.19 452.37 T
4 9.5 Q
(\0500005\051: SPACE = \050NWP:ARRAY[1..5] OF 0..3\051;) 87 433.72 T
(\0500007\051: IMPLICIT NFP[NWP]\050III\051 = 3 - NWP[III];) 87 422.22 T
(\0500011\051:    IF \050NFP\050\051 < 3\051 TRANTO NWP[IX]-- BY 1.2e-3;) 87 410.72 T
(                   ^ [ERROR] TOO FEW CALLING PARAMETERS.  MORE EXPECTED:  \051) 87 399.22 T
(                             \050IMPLICIT NFP\051) 87 387.72 T
(\0500012\051:    IF \050NFP\050IX,IX\051 < 3\051 TRANTO NWP[IX]-- BY 1.2e-3;) 87 376.22 T
(                     ^ [ERROR] TOO MANY CALLING PARAMETERS. REMAINING IGNORE:  ,) 87 364.72 T
(                               \050IMPLICIT NFP\051) 87 353.22 T
(                      ^ [ERROR] SKIPPING EXTRANEOUS TOKENS: IX) 87 341.72 T
(\0500013\051:    IF \050NFP < 3\051 TRANTO NWP[IX]-- BY 1.2e-3;) 87 324.57 T
(                   ^ [ERROR] LEFT \322\050\322 EXPECTED:  < \050IMPLICIT NFP\051) 87 313.07 T
2 11 Q
0.46 (One may wish to define an) 105 294.92 P
4 F
1.1 (IMPLICIT) 228.73 294.92 P
2 F
0.46 ( that is a function of three) 281.53 294.92 P
4 F
1.1 (FOR) 400.53 294.92 P
2 F
0.46 ( index variables.   Consider) 420.33 294.92 P
(the following example:) 87 281.92 T
4 10 Q
(SPACE =) 132 262.93 T
(   \050) 132 250.93 T
(     AMAT: ARRAY[1..3,1..3] OF 0..7;) 132 238.93 T
(     BMAT: ARRAY[1..3,1..3] OF 0..7;) 132 226.93 T
(     NCF:0..7   \050* Number of component failures for prune *\051) 132 214.93 T
(   \051;) 132 202.93 T
(IMPLICIT CMAT[AMAT,BMAT]\050I,J,K\051 =  AMAT[I,J] * BMAT[J,K];) 132 190.93 T
7 10.5 Q
(12.2.4. FUNCTION Statement) 105 165.95 T
2 11 Q
0.95 (The) 105 147.47 P
4 F
2.29 (FUNCTION) 125.81 147.47 P
2 F
0.95 ( statement is used to define a new function.  A function computes a value based) 178.61 147.47 P
(upon constants and parameters passed to the function. The syntax of a function definition follows:) 87 134.47 T
3 10.5 Q
(FUNCTION) 132 115.15 T
2 9 Q
(<identi\336er>) 190.62 115.15 T
3 10.5 Q
(\050) 238.52 115.15 T
2 9 Q
(<parameter) 244.64 115.15 T
(-list>) 285.52 115.15 T
3 10.5 Q
(\051) 307.23 115.15 T
2 F
( =) 310.72 115.15 T
2 9 Q
(<body>) 321.89 115.15 T
3 10.5 Q
(;) 352.67 115.15 T
2 11 Q
0.34 (The) 105 95.67 P
2 9 Q
0.28 (<parameter-list>) 125.2 95.67 P
2 11 Q
0.34 ( is made up of zero or more identifiers separated by commas. All parameters are) 185.34 95.67 P
-0.11 (positional and must therefore be passed in a consistent order.   The user decides how many parameters a) 87 82.67 P
0.53 (certain function will have.   The user may not vary the number of parameters that are passed from the) 87 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "17" 22
%%Page: "18" 23
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(18) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
-0.12 (number of parameters that are defined. The parameter names in the parameter list are separated by com-) 87 718.67 P
0.36 (mas.   Parameter names may be reused in other) 87 705.67 P
4 F
0.87 (IMPLICIT) 300.49 705.67 P
2 F
0.36 ( or) 353.29 705.67 P
4 F
0.87 (FUNCTION) 368.68 705.67 P
2 F
0.36 ( definitions or as) 421.48 705.67 P
4 F
0.87 (FOR) 499.31 705.67 P
2 F
0.36 ( indi-) 519.11 705.67 P
(ces, but they cannot be named constants or state-space variable names.) 87 692.67 T
0.07 (The) 105 672.82 P
2 9 Q
0.05 (<body>) 124.92 672.82 P
2 11 Q
0.07 ( of the) 153.07 672.82 P
4 F
0.16 (FUNCTION) 184.13 672.82 P
2 F
0.07 ( definition is the expression that defines the value as a function of the) 236.93 672.82 P
(parameters.) 87 659.82 T
0.59 (The) 105 639.98 P
4 F
1.42 (FUNCTION) 125.45 639.98 P
2 F
0.59 ( may be invoked in) 178.25 639.98 P
4 F
1.42 (TRANTO) 268.28 639.98 P
2 F
0.59 (,) 307.88 639.98 P
4 F
1.42 (DEATHIF) 313.97 639.98 P
2 F
0.59 (,) 360.17 639.98 P
4 F
1.42 (PRUNEIF) 366.26 639.98 P
2 F
0.59 (,) 412.46 639.98 P
4 F
1.42 (ASSERT) 418.55 639.98 P
2 F
0.59 (,) 458.15 639.98 P
4 F
1.42 (IF) 464.24 639.98 P
2 F
0.59 (, or) 477.44 639.98 P
4 F
1.42 (FOR) 496.03 639.98 P
2 F
0.59 ( state-) 515.83 639.98 P
0.55 (ments or in later) 87 626.98 P
4 F
1.32 (IMPLICIT) 163.75 626.98 P
2 F
0.55 ( or) 216.55 626.98 P
4 F
1.32 (FUNCTION) 232.32 626.98 P
2 F
0.55 ( definitions by giving its name followed by the values for) 285.12 626.98 P
(each of its parameters in parentheses.) 87 613.98 T
(The following example illustrates the definition and invocation of) 105 594.14 T
4 F
(FUNCTION) 397.39 594.14 T
2 F
(s:) 450.19 594.14 T
4 10 Q
(FUNCTION F\050X,Y\051 = X + Y;) 132 574.96 T
(...) 132 562.96 T
(IF  2*F\050MMM,3\051  >  4  THEN) 132 550.96 T
2 11 Q
0.37 (In the above example,) 105 532.45 P
4 F
0.89 (FUNCTION) 206.38 532.45 P
0.89 (F) 262.3 532.45 P
2 F
0.37 ( is declared to be a function of two parameters, namely) 268.9 532.45 P
4 F
0.89 (X) 517.39 532.45 P
2 F
0.37 ( and) 523.99 532.45 P
4 F
0.95 (Y) 87 519.45 P
2 F
0.4 (.  Its value is computed as the sum of both parameters. The reference to the function) 93.6 519.45 P
4 F
0.95 (F\050X,Y\051) 472.75 519.45 P
2 F
0.4 ( would) 512.35 519.45 P
(be expanded to form the following) 87 506.45 T
4 F
(IF) 242.2 506.45 T
2 F
( clause:) 255.4 506.45 T
4 10 Q
(IF  2*\050MMM+3\051  >  4  THEN) 132 487.27 T
2 11 Q
2.06 (In this example the expanded form is shown with parentheses around the function operations.) 105 468.76 P
0.38 (When the expression is evaluated and the function is expanded, the operations within the function will) 87 455.76 P
(be given precedence and will be performed first.) 87 442.76 T
0.84 (A value must be passed for each parameter during invocation so that it can be substituted for the) 105 422.92 P
(parameter.   A passed value can be a number, a named constant, a variable, or an expression.) 87 409.92 T
0.62 (The function body may not contain any variables that are not listed in the declared parameter list.) 105 390.07 P
0.7 (For example, if) 87 377.07 P
4 F
1.67 (NWP) 159.36 377.07 P
2 F
0.7 ( is a state-space variable defined in the) 179.16 377.07 P
4 F
1.67 (SPACE) 357.64 377.07 P
2 F
0.7 ( statement, it cannot appear in the) 390.64 377.07 P
0.5 (body of the) 87 364.07 P
4 F
1.2 (FUNCTION) 141.35 364.07 P
2 F
0.5 (.) 194.15 364.07 P
4 F
1.2 (FOR) 203.4 364.07 P
2 F
0.5 ( index variables must be listed in the parameter list in order to be refer-) 223.2 364.07 P
(enced in the body. Named constants are allowed in the body of a) 87 351.07 T
4 F
(FUNCTION) 374.17 351.07 T
2 F
(.) 426.97 351.07 T
7 10.5 Q
(12.2.5. V) 105 325.56 T
(ARIABLE Statement) 142.73 325.56 T
2 11 Q
0.85 (The) 105 306.89 P
4 F
2.05 (VARIABLE) 125.71 306.89 P
2 F
0.85 ( statement is used to define a variable that is not explicitly a state-space variable) 178.51 306.89 P
-0.09 (itself but which is dependent upon the state space.   The variable can be either a scalar or an array. Vari-) 87 293.89 P
0.01 (ables can be used to make an ASSIST description more understandable without incurring the additional) 87 280.89 P
(memory required to store extra state-space variable values.) 87 267.89 T
-0.25 (For example, if) 105 248.04 P
4 F
-0.6 (NWP) 174.52 248.04 P
2 F
-0.25 ( is a state-space variable representing the number of working processors and) 194.32 248.04 P
4 F
-0.6 (NI) 529.8 248.04 P
2 F
(is a constant denoting the number of initial processors, the declaration) 87 235.04 T
4 10 Q
(VARIABLE NFP[NWP] = NI - NWP;) 132 215.86 T
2 11 Q
0.34 (defines) 87 197.35 P
4 F
0.82 (NFP) 121.86 197.35 P
2 F
0.34 (, denoting the number of failed processors, to be the difference between the initial number) 141.66 197.35 P
0.64 (and the current number of working processors.  The above variable can be referenced as illustrated in) 87 184.35 P
(the following) 87 171.35 T
4 F
(DEATHIF) 148.72 171.35 T
2 F
( statement:) 194.92 171.35 T
4 10 Q
(DEATHIF NWP <= NFP;) 132 153.18 T
4 11 Q
4 (V) 105 134.67 P
4 (ARIABLES) 111.6 134.67 P
2 F
1.67 ( and) 164.4 134.67 P
4 F
4 (IMPLICITS) 189.12 134.67 P
2 F
1.67 ( often produce the same results.   The main difference between) 248.52 134.67 P
4 F
1.09 (VARIABLES) 87 121.67 P
2 F
0.45 ( and) 146.4 121.67 P
4 F
1.09 (IMPLICITS) 168.69 121.67 P
2 F
0.45 ( depends upon when the expression evaluation is performed.   With an) 228.09 121.67 P
4 F
-0.45 (IMPLICIT) 87 108.67 P
2 F
-0.19 (, the expression to the right of the equals sign is not evaluated until it is actually used.   With) 139.8 108.67 P
1.47 (a) 87 95.67 P
4 F
3.53 (VARIABLE) 96.1 95.67 P
2 F
1.47 ( the expression is evaluated once for each new state, regardless of whether or not the) 148.9 95.67 P
4 F
2.42 (VARIABLE) 87 82.67 P
2 F
1.01 ( statement is ever referenced. If the expression is going to be referenced inside a loop or) 139.8 82.67 P
1.53 (used many different times, a) 87 69.67 P
4 F
3.67 (VARIABLE) 222.34 69.67 P
2 F
1.53 ( will probably be more efficient than an) 275.14 69.67 P
4 F
3.67 (IMPLICIT) 464.54 69.67 P
2 F
1.53 (.   If,) 517.34 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "18" 23
%%Page: "19" 24
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(19) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
-0.01 (however, the references to the expression are all protected by) 87 718.67 P
4 F
-0.02 (IF) 359.09 718.67 P
2 F
-0.01 ( tests that hold true for very few states,) 372.29 718.67 P
(an) 87 705.67 T
4 F
(IMPLICIT) 100.13 705.67 T
2 F
( may be more efficient than a) 152.93 705.67 T
4 F
(VARIABLE) 284.59 705.67 T
2 F
(.) 337.39 705.67 T
(Another difference is that a) 105 685.17 T
4 F
(VARIABLE) 228.1 685.17 T
2 F
( can define an array whereas an) 280.9 685.17 T
4 F
(IMPLICIT) 422.31 685.17 T
2 F
( cannot.) 475.11 685.17 T
(The syntax for the) 105 664.67 T
4 F
(VARIABLE) 188.09 664.67 T
2 F
( statement is) 240.89 664.67 T
3 10.5 Q
(V) 132 639.5 T
(ARIABLE) 138.23 639.5 T
2 9 Q
(<identi\336er>) 188.69 639.5 T
2 10.5 Q
( [) 231.34 639.5 T
2 9 Q
(<state-space-variable-list>) 240.09 639.5 T
2 10.5 Q
( ] =) 335.71 639.5 T
3 18 Q
([) 353.01 639.5 T
3 10.5 Q
(BOOLEAN) 363.5 639.5 T
3 18 Q
(]) 418.64 639.5 T
2 9 Q
(<de\336nition-clause>) 427.25 639.5 T
3 10.5 Q
(;) 500.02 639.5 T
2 11 Q
(where a definition clause defines either a scalar or an array.  Its syntax is) 87 616.67 T
2 9 Q
(<expr>) 132 597.5 T
2 7 Q
(or) 132 587.83 T
2 10.5 Q
([) 132 571.5 T
3 18 Q
([) 138.12 571.5 T
2 10.5 Q
( <#>) 144.12 571.5 T
3 F
(OF) 166.46 571.5 T
3 18 Q
(]) 183.67 571.5 T
2 9 Q
(<expr>) 192.29 571.5 T
3 18 Q
({) 221.06 571.5 T
3 10.5 Q
(,) 230.77 571.5 T
3 18 Q
([) 236.02 571.5 T
2 10.5 Q
( <#>) 242.02 571.5 T
3 F
(OF) 264.36 571.5 T
3 18 Q
(]) 281.57 571.5 T
2 9 Q
(<expr>) 290.19 571.5 T
3 18 Q
(}) 318.96 571.5 T
2 10.5 Q
( ]) 326.05 571.5 T
2 7 Q
(or) 132 558.83 T
3 10.5 Q
(ARRA) 132 542.5 T
(Y) 161.36 542.5 T
2 F
( \050) 168.94 542.5 T
3 18 Q
([) 177.68 542.5 T
2 10.5 Q
( <#>) 183.68 542.5 T
3 F
(OF) 206.02 542.5 T
3 18 Q
(]) 223.23 542.5 T
2 9 Q
(<expr>) 231.85 542.5 T
3 18 Q
({) 260.62 542.5 T
3 10.5 Q
(,) 270.34 542.5 T
3 18 Q
([) 275.59 542.5 T
2 10.5 Q
( <#>) 281.58 542.5 T
3 F
(OF) 303.93 542.5 T
3 18 Q
(]) 321.14 542.5 T
2 9 Q
(<expr>) 329.76 542.5 T
3 18 Q
(}) 358.52 542.5 T
2 10.5 Q
( \051) 365.62 542.5 T
2 11 Q
-0.24 (The) 105 519.67 P
2 9 Q
-0.2 (<state-space-variable-list>) 124.62 519.67 P
2 11 Q
-0.24 ( is made up of one or more state-space variable name identifiers separated) 220.24 519.67 P
-0.01 (by commas. The identifiers must already have been defined in a) 87 506.67 P
4 F
-0.02 (SPACE) 371.03 506.67 P
2 F
-0.01 ( statement. All state-space vari-) 404.03 506.67 P
0.27 (ables that are referenced in the definition clause of a) 87 493.67 P
4 F
0.64 (VARIABLE) 322.44 493.67 P
2 F
0.27 ( must be listed in the state-space vari-) 375.23 493.67 P
(able list.) 87 480.67 T
1.6 (The) 105 460.17 P
2 9 Q
1.31 (<definition-clause>) 126.45 460.17 P
2 11 Q
1.6 ( of the) 197.09 460.17 P
4 F
3.84 (VARIABLE) 232.74 460.17 P
2 F
1.6 ( definition is the expression defining the) 285.54 460.17 P
4 F
3.84 (VARIABLE) 476.69 460.17 P
2 F
1.6 ( as) 529.49 460.17 P
1.03 (either a variable or an array which is dependent upon the state space. Named constants and reserved) 87 447.17 P
0.28 (words may be freely referenced to the right of the equals sign and must not be specified with the state-) 87 434.17 P
(space variables.) 87 421.17 T
-0.25 (The) 105 400.67 P
4 F
-0.61 (VARIABLE) 124.6 400.67 P
2 F
-0.25 ( may be referenced in) 177.4 400.67 P
4 F
-0.61 (TRANTO) 274.18 400.67 P
2 F
-0.25 (,) 313.78 400.67 P
4 F
-0.61 (DEATHIF) 319.03 400.67 P
2 F
-0.25 (,) 365.23 400.67 P
4 F
-0.61 (PRUNEIF) 370.48 400.67 P
2 F
-0.25 (,) 416.67 400.67 P
4 F
-0.61 (ASSERT) 421.92 400.67 P
2 F
-0.25 (,) 461.52 400.67 P
4 F
-0.61 (IF) 466.77 400.67 P
2 F
-0.25 (, or) 479.97 400.67 P
4 F
-0.61 (FOR) 496.88 400.67 P
2 F
-0.25 ( state-) 516.68 400.67 P
0.51 (ments or in later) 87 387.67 P
4 F
1.23 (VARIABLE) 163.59 387.67 P
2 F
0.51 (,) 216.39 387.67 P
4 F
1.23 (IMPLICIT) 222.4 387.67 P
2 F
0.51 (, or) 275.2 387.67 P
4 F
1.23 (FUNCTION) 293.64 387.67 P
2 F
0.51 ( definitions in exactly the same manner as a) 346.44 387.67 P
0.65 (constant would be referenced. The) 87 374.67 P
4 F
1.55 (VARIABLE) 244.8 374.67 P
2 F
0.65 ( is referenced in the same way as a constant would be.) 297.6 374.67 P
-0.12 (Square brackets are used when the) 87 361.67 P
4 F
-0.3 (VARIABLE) 240.81 361.67 P
2 F
-0.12 ( is an array. The following example illustrates the defini-) 293.61 361.67 P
(tion and use of) 87 348.67 T
4 F
(VARIABLE) 154.83 348.67 T
2 F
(s:) 207.63 348.67 T
4 9.5 Q
-0.51 (SPACE = \050NWP:ARRAY[1..5] OF 0..3\051; \050* Number working in each of five triads *\051) 105 329.17 P
(VARIABLE NFP[NWP] = [) 105 311.17 T
(                      3 - NWP[1],) 105 299.67 T
(                      3 - NWP[2],) 105 288.17 T
(                      3 - NWP[3],) 105 276.67 T
(                      3 - NWP[4],) 105 265.17 T
(                      3 - NWP[5]) 105 253.67 T
(                    ];   \050* Number failed in each triad *\051) 105 242.17 T
(VARIABLE TOTALW[NWP] = SUM\050NWP\051;) 105 230.67 T
(VARIABLE TOTALF[NWP] = 3*5-TOTALW;) 105 219.17 T
(FOR III IN [1..5]) 105 201.17 T
(   IF \050NFP[III]>0\051 TRANTO NWP[III]=0 BY 1.E-5;) 105 189.67 T
(ENDFOR;) 105 178.17 T
(DEATHIF TOTALF > 6;) 105 166.67 T
2 11 Q
0.71 (In the example above, the variable) 105 147.67 P
4 F
1.7 (NFP) 263.52 147.67 P
2 F
0.71 ( is dependent upon the state-space variable) 283.32 147.67 P
4 F
1.7 (NWP) 479.22 147.67 P
2 F
0.71 ( and is an) 499.02 147.67 P
0.13 (array with five elements.   Each element value is computed as three minus the current number of work-) 87 134.67 P
1 (ing processors in the triad corresponding to the array index. The variable) 87 121.67 P
4 F
2.4 (TOTALW) 421.89 121.67 P
2 F
1 ( is also dependent) 461.49 121.67 P
0.15 (upon the state-space variable) 87 108.67 P
4 F
0.36 (NWP) 217.73 108.67 P
2 F
0.15 (.   Its value is computed as the total number of working processors in) 237.53 108.67 P
0.2 (all five triads.   The variable) 87 95.67 P
4 F
0.49 (TOTALF) 215.5 95.67 P
2 F
0.2 ( is also dependent upon the state-space variable) 255.1 95.67 P
4 F
0.49 (NWP) 468.11 95.67 P
2 F
0.2 (. The defini-) 487.91 95.67 P
-0.08 (tion of) 87 82.67 P
4 F
-0.18 (TOTALF) 118.63 82.67 P
2 F
-0.08 ( references the value of variable) 158.23 82.67 P
4 F
-0.18 (TOTALW) 301.33 82.67 P
2 F
-0.08 (.   Since) 340.93 82.67 P
4 F
-0.18 (TOTALW) 378.82 82.67 P
2 F
-0.08 ( is computed based upon the) 418.42 82.67 P
1.46 (state-space variable) 87 69.67 P
4 F
3.49 (NWP) 179.1 69.67 P
2 F
1.46 (, then) 198.9 69.67 P
4 F
3.49 (NWP) 229 69.67 P
2 F
1.46 ( must be listed in the state-space variable list for) 248.8 69.67 P
4 F
3.49 (TOTALF) 478.43 69.67 P
2 F
1.46 ( even) 518.03 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "19" 24
%%Page: "20" 25
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(20) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.36 (though it is only referenced indirectly.   When) 87 718.67 P
4 F
0.88 (NFP) 296.19 718.67 P
2 F
0.36 ( is referenced in the) 315.99 718.67 P
4 F
0.88 (IF) 407.31 718.67 P
2 F
0.36 ( clause, the value of) 420.51 718.67 P
4 F
0.88 (III) 512.75 718.67 P
2 F
0.36 ( is) 532.55 718.67 P
(passed as a subscript to the array) 87 705.67 T
4 F
(NFP) 233.94 705.67 T
2 F
(.) 253.74 705.67 T
7 10.5 Q
(12.2.6. ST) 105 680.17 T
(ART Statement) 148.18 680.17 T
2 11 Q
-0.01 (The) 105 661.5 P
4 F
-0.02 (START) 124.85 661.5 P
2 F
-0.01 ( statement is used to specify the initial state of the system being modeled; i.e., the prob-) 157.85 661.5 P
-0.2 (ability that the system is in this state at time 0 is 1. The state is defined by an) 87 648.5 P
5 F
-0.2 (n) 423.54 648.5 P
2 F
-0.2 (-dimension vector of inte-) 429.04 648.5 P
(gers or Booleans.) 87 635.5 T
0.91 (Each ASSIST input file must contain exactly one) 105 615.67 P
4 F
2.18 (START) 331.63 615.67 P
2 F
0.91 ( statement that corresponds precisely to) 364.63 615.67 P
0.18 (the) 87 602.67 P
4 F
0.43 (SPACE) 103.37 602.67 P
2 F
0.18 ( statement in its setup section; i.e., the) 136.37 602.67 P
4 F
0.43 (START) 308.01 602.67 P
2 F
0.18 ( statement must include the same number and) 341.01 602.67 P
1.03 (type \050integer versus Boolean\051 values in the same sequence as specified in the) 87 589.67 P
4 F
2.47 (SPACE) 441.64 589.67 P
2 F
1.03 ( statement, and) 474.64 589.67 P
(they must use identical nesting.) 87 576.67 T
-0.25 (To make variable-sized arrays more usable, repetition may be used in the) 105 556.83 P
4 F
-0.61 (START) 426.69 556.83 P
2 F
-0.25 ( statement as in the) 459.69 556.83 P
(following example:) 87 543.83 T
4 10 Q
(INPUT NX;) 132 524.67 T
(SPACE = \050NP: ARRAY[1..2], NF, NC: ARRAY[1..NX] OF BOOLEAN\051;) 132 512.67 T
(START = \0502 OF 6, 0, NX OF FALSE\051;) 132 500.67 T
2 11 Q
(This) 105 482.17 T
4 F
(START) 127.31 482.17 T
2 F
( statement fills array) 160.31 482.17 T
4 F
(NP) 253.18 482.17 T
2 F
( with 6\325s, sets) 266.38 482.17 T
4 F
(NF) 329.63 482.17 T
2 F
( to 0, and fills array) 342.83 482.17 T
4 F
(NC) 431.73 482.17 T
2 F
( with) 444.93 482.17 T
4 F
(FALSE) 469.99 482.17 T
2 F
(\325s.) 502.99 482.17 T
(The) 105 462.33 T
4 F
(START) 124.86 462.33 T
2 F
( statement syntax is) 157.85 462.33 T
3 10.5 Q
(ST) 132 442.83 T
(AR) 144.06 442.83 T
(T) 158.86 442.83 T
2 F
( =) 165.86 442.83 T
2 9 Q
(<space-expression>) 177.03 442.83 T
3 10.5 Q
(;) 251.29 442.83 T
2 11 Q
(The syntax of a) 105 423.17 T
2 9 Q
(<space-expression>) 175.87 423.17 T
2 11 Q
( is) 247.5 423.17 T
2 10.5 Q
(\050) 132 398.67 T
2 9 Q
(<space-expr) 138.12 398.67 T
(-item>) 182 398.67 T
3 18 Q
({) 208.7 398.67 T
3 10.5 Q
(,) 218.41 398.67 T
2 9 Q
(<space-expr) 223.66 398.67 T
(-item>) 267.54 398.67 T
3 18 Q
(}) 293.86 398.67 T
2 10.5 Q
( \051) 300.95 398.67 T
2 11 Q
(The syntax of a) 105 376.5 T
2 9 Q
(<space-expr-item>) 175.87 376.5 T
2 11 Q
( is) 244 376.5 T
3 18 Q
([) 132 352 T
2 9 Q
(<expr>) 140.62 352 T
3 10.5 Q
(OF) 169.39 352 T
3 18 Q
(]) 186.6 352 T
2 9 Q
(<expr>) 195.22 352 T
2 7 Q
(or) 132 339.33 T
2 9 Q
(<space-expression>) 132 329 T
2 11 Q
-0.25 (Like the) 105 309.83 P
4 F
-0.59 (SPACE) 143.61 309.83 P
2 F
-0.25 ( statement, the) 176.61 309.83 P
4 F
-0.59 (START) 242.48 309.83 P
2 F
-0.25 ( statement syntax is recursive because a space expression can) 275.48 309.83 P
(contain a nested space expression. Nesting allows for states such as the following:) 87 296.83 T
4 10 Q
(\0506,0,\0502,2,2\051,8\051) 132 277.67 T
(\0506,0,\0502,2,\0504,1,4\051,TRUE,8\051,FALSE,4\051) 132 265.67 T
2 11 Q
0.49 (Only constant expressions may appear in a) 105 247.17 P
4 F
1.18 (START) 299.39 247.17 P
2 F
0.49 ( statement. The statement must not contain any) 332.39 247.17 P
(state-space) 87 234.17 T
4 F
(VARIABLES) 138.01 234.17 T
2 F
( or) 197.41 234.17 T
4 F
(IMPLICITS) 212.07 234.17 T
2 F
(.) 271.47 234.17 T
(Some examples of) 105 214.33 T
4 F
(START) 189.02 214.33 T
2 F
( statements follow:) 222.02 214.33 T
4 10 Q
(START =) 132 195.17 T
(  \050) 132 183.17 T
(   3,  \050* Count of working in \322triad\323 *\051) 132 171.17 T
(   0,  \050* Count of active failed in \322triad\323 *\051) 132 159.17 T
(   0,  \050* Count of benign failed in \322triad\323 *\051) 132 147.17 T
(   0   \050* Number of component failures for PRUNEIF *\051) 132 135.17 T
(  \051;) 132 123.17 T
(START =) 132 105.33 T
(  \050) 132 93.33 T
(   \0503 OF TRUE\051, \050* Each working in \322triad\323 *\051) 132 81.33 T
(   NSI_pool,    \050* Spares count, COLD pool \322pool\323 *\051) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "20" 25
%%Page: "21" 26
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(21) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
(   0            \050* Number of component failures for PRUNEIF *\051) 132 719.33 T
(  \051;) 132 707.33 T
2 11 Q
0.45 (These) 105 688.33 P
4 F
1.08 (START) 134.47 688.33 P
2 F
0.45 ( statements correspond precisely to the respective examples in the) 167.47 688.33 P
4 F
1.08 (SPACE) 464.64 688.33 P
2 F
0.45 ( statement) 497.64 688.33 P
(section.) 87 675.33 T
7 10.5 Q
(12.2.7. Rule Section) 105 649.33 T
2 11 Q
2.25 (Rules are used to describe the manner in which system components fail and how the system) 105 630.17 P
0.48 (responds to any failures that occur. A typical system has a number of different components that fail at) 87 617.17 P
0.6 (different rates. Some components may have transient or intermittent faults. Some components may be) 87 604.17 P
1.97 (replaced with spares upon failure. There may be dependencies between the components. All these) 87 591.17 P
(behaviors are formulated into a set of model generation rules.) 87 578.17 T
0.19 (The rule section of the input file begins with the first rule. Once the rule section begins, definitions) 105 557.83 P
1.24 (are no longer allowed. Several types of statements are valid in the rule section. These are described) 87 544.83 P
(below.) 87 531.83 T
7 10.5 Q
(12.2.7.1. TRANT) 105 507.33 T
(O statement.) 178.6 507.33 T
2 11 Q
0.89 (The) 235.48 507.33 P
4 F
2.12 (TRANTO) 256.22 507.33 P
2 F
0.89 ( statement is the heart of the model generation process) 295.82 507.33 P
-0.24 (and is used to describe the state transitions in the model. The model is generated by recursively applying) 87 494.33 P
(the) 87 481.33 T
4 F
(TRANTO) 103.19 481.33 T
2 F
( rules to each model state, beginning with the) 142.79 481.33 T
4 F
(START) 345.05 481.33 T
2 F
( state.) 378.05 481.33 T
1.29 (The transitions represent the elapsed time between system states, which are stochastic processes) 105 461 P
0.62 (defined by probability distributions. In the restricted class of Markov models, all transitions are expo-) 87 448 P
0.5 (nentially distributed and are completely defined by a simple rate parameter. In the more general semi-) 87 435 P
0.88 (Markov model, any distribution can be used to describe the elapsed time. Transitions between model) 87 422 P
1.16 (states are specified using) 87 409 P
4 F
2.79 (TRANTO) 204.06 409 P
2 F
1.16 ( statements. Typical) 243.66 409 P
4 F
2.79 (TRANTO) 338.19 409 P
2 F
1.16 ( statements have three main parts or) 377.79 409 P
(clauses:) 87 396 T
(1.) 105 375.67 T
(An optional) 117 375.67 T
4 F
(IF) 172 375.67 T
2 F
( conditional expression \050also called the \322) 185.2 375.67 T
4 F
(IF) 364.23 375.67 T
2 F
( clause\323\051) 377.42 375.67 T
(2.) 105 355.33 T
(A required destination expression, \050also called the \322) 117 355.33 T
4 F
(TRANTO) 344.9 355.33 T
2 F
( clause\323 or the \322destination clause\323\051) 384.5 355.33 T
(3.) 105 335 T
(A required rate expression, \050also called the \322) 117 335 T
4 F
(BY) 313.11 335 T
2 F
( clause\323 or \322rate clause\323\051) 326.31 335 T
-0.23 (The optional first clause contains a Boolean expression that describes the states for which the transi-) 105 314.67 P
-0.01 (tion is valid in terms of their state-space variable values. The second clause defines the destination state) 87 301.67 P
1.32 (for the transition in terms of state-space variable values. The third clause defines the distribution of) 87 288.67 P
(elapsed time for the transition.) 87 275.67 T
( The syntax for the simple) 105 255.33 T
4 F
(TRANTO) 222.93 255.33 T
2 F
( statement is given by) 262.53 255.33 T
3 18 Q
([) 132 230.33 T
3 10.5 Q
(IF) 140.62 230.33 T
2 9 Q
(<condition>) 153.74 230.33 T
3 18 Q
(]) 200.52 230.33 T
3 10.5 Q
(TRANT) 209.14 230.33 T
(O) 245.7 230.33 T
2 9 Q
(<dest>) 256.5 230.33 T
3 10.5 Q
(by) 283.77 230.33 T
2 9 Q
(<rate>) 297.49 230.33 T
3 10.5 Q
(;) 323.75 230.33 T
2 11 Q
0.32 (The condition is a Boolean expression. The destination state can be specified as either a state node) 105 207.67 P
1.25 (\050vector format\051 or as an assignment list \050list format\051. Mixing of the two specification formats in the) 87 194.67 P
(same) 87 181.67 T
4 F
(TRANTO) 112.36 181.67 T
2 F
( is not allowed.) 151.96 181.67 T
-0.24 (State-space variables may be referenced in any of the three clauses of a) 105 161.33 P
4 F
-0.58 (TRANTO) 417.97 161.33 P
2 F
-0.24 ( statement, but they) 457.57 161.33 P
0.25 (can be changed only in the destination clause. Integers can appear in all three clauses, but only the rate) 87 148.33 P
(clause can contain real numbers.) 87 135.33 T
0.51 (When a transition is processed, the source-state value for a state-space variable is used if its value) 105 115 P
1.88 (does not change during the transition. For example, if) 87 102 P
4 F
4.5 (NWP) 342.48 102 P
2 F
1.88 ( and) 362.29 102 P
4 F
4.5 (QQQ) 387.42 102 P
2 F
1.88 ( are state-space variables and) 407.22 102 P
4 F
(NWP=4) 87 89 T
2 F
( and) 120 89 T
4 F
(QQQ=22) 141.38 89 T
2 F
( before the transition, then the clause) 180.98 89 T
4 10 Q
(TRANTO NWP++,QQQ=QQQ-NWP) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "21" 26
%%Page: "22" 27
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(22) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
-0.27 (will set) 87 718.67 P
4 F
-0.65 (NWP) 121.29 718.67 P
2 F
-0.27 ( to) 141.1 718.67 P
4 F
-0.65 (5) 154.61 718.67 P
2 F
-0.27 ( and) 161.21 718.67 P
4 F
-0.65 (QQQ) 182.05 718.67 P
2 F
-0.27 ( to) 201.85 718.67 P
4 F
-0.65 (22-4=18) 215.37 718.67 P
2 F
-0.27 ( in the destination state. The source-state value of) 261.57 718.67 P
4 F
-0.65 (NWP) 479.7 718.67 P
2 F
-0.27 ( is used to) 499.5 718.67 P
0.33 (compute) 87 705.67 P
4 F
0.78 (QQQ) 127.96 705.67 P
2 F
0.33 ( even though) 147.76 705.67 P
4 F
0.78 (NWP) 208.31 705.67 P
2 F
0.33 ( has already been incremented in the destination state during the previ-) 228.11 705.67 P
(ous assignment.) 87 692.67 T
5 10.5 Q
(Condition expr) 105 667.46 T
(ession.) 167.9 667.46 T
2 11 Q
1.66 (The optional first expression following the) 199.4 667.46 P
4 F
3.99 (IF) 400.02 667.46 P
2 F
1.66 ( is the condition expression.) 413.22 667.46 P
-0.11 (Condition expressions must be Boolean expressions. Conceptually, the condition expression determines) 87 654.46 P
(on which model states to apply this rule. For example, in) 87 641.46 T
4 10 Q
(SPACE = \050A1: 1..5, A2: 0..1\051) 132 621.08 T
(...) 132 609.08 T
(IF \050A1 > 3\051 AND \050A2 = 0\051 TRANTO ...) 132 597.08 T
2 11 Q
0.46 (the conditional expression is true for states \0504,0\051 and \0505,0\051 only. This) 87 577.37 P
4 F
1.1 (TRANTO) 397.09 577.37 P
2 F
0.46 ( rule will therefore only) 436.69 577.37 P
(be applied to these two states.) 87 564.37 T
0.86 (Note that the key word) 105 544.32 P
4 F
2.05 (IF) 212.84 544.32 P
2 F
0.86 ( is used to begin two different kinds of statements in the ASSIST lan-) 226.04 544.32 P
0.07 (guage. If the) 87 531.32 P
2 9 Q
0.06 (<condition>) 145.25 531.32 P
2 11 Q
0.07 ( is followed by the key word) 189.4 531.32 P
4 F
0.17 (TRANTO) 318.53 531.32 P
2 F
0.07 (, as in the above syntax, the statement is a) 358.13 531.32 P
4 F
2.23 (TRANTO) 87 518.32 P
2 F
0.93 ( statement. If the) 126.6 518.32 P
2 9 Q
0.76 (<condition>) 207 518.32 P
2 11 Q
0.93 ( is followed by the key word) 251.16 518.32 P
4 F
2.23 (THEN) 386.3 518.32 P
2 F
0.93 (, the statement is a block) 412.7 518.32 P
4 F
2.23 (IF) 529.8 518.32 P
2 F
0.01 (construct and not just a simple) 87 505.32 P
4 F
0.01 (TRANTO) 223.92 505.32 P
2 F
0.01 ( statement. The simple) 263.52 505.32 P
4 F
0.01 (TRANTO) 365.9 505.32 P
2 F
0.01 ( statement contains exactly one) 405.5 505.32 P
-0.1 (transition and may not contain any other rules, such as) 87 492.32 P
4 F
-0.24 (FOR) 328.29 492.32 P
2 F
-0.1 (,) 348.09 492.32 P
4 F
-0.24 (DEATHIF) 353.49 492.32 P
2 F
-0.1 ( statements and so on. The block) 399.69 492.32 P
4 F
(IF) 87 479.32 T
2 F
( can contain any or all of these and will be detailed in section 12.2.7.2.) 100.2 479.32 T
5 10.5 Q
(Destination state.) 105 454.11 T
2 11 Q
1.22 (The vector or assignment list following the) 181.71 454.11 P
4 F
2.93 (TRANTO) 382.44 454.11 P
2 F
1.22 ( reserved word defines the) 422.04 454.11 P
0.49 (transition destination state to be added to the model. The destination state can be specified using posi-) 87 441.11 P
(tional or assigned values.) 87 428.11 T
0.95 (The assignments define the destination state by specifying the change in one or more state-space) 105 407.07 P
0.34 (variables from the source to the destination state. There can be as many assignments as there are state-) 87 394.07 P
(space variables.) 87 381.07 T
(The syntax of the) 105 360.02 T
4 F
(TRANTO) 184.43 360.02 T
2 F
( destination is) 224.03 360.02 T
2 9 Q
(<assignment>) 132 334.31 T
3 18 Q
({) 185.28 334.31 T
3 10.5 Q
(,) 194.99 334.31 T
2 9 Q
(<assignment>) 200.24 334.31 T
3 18 Q
(}) 253.52 334.31 T
2 7 Q
(or) 132 321.64 T
2 10.5 Q
(\050) 132 305.31 T
3 18 Q
([) 138.12 305.31 T
2 9 Q
(<space-expr) 146.74 305.31 T
(-item>) 190.62 305.31 T
3 18 Q
(]) 217.32 305.31 T
({) 225.93 305.31 T
3 10.5 Q
(,) 235.65 305.31 T
3 18 Q
([) 240.9 305.31 T
2 9 Q
(<space-expr) 249.52 305.31 T
(-item>) 293.39 305.31 T
3 18 Q
(]) 320.1 305.31 T
(}) 328.71 305.31 T
2 10.5 Q
( \051) 335.81 305.31 T
2 11 Q
0.08 (The syntax of the second form is almost identical to that of the) 105 281.93 P
4 F
0.19 (START) 384.36 281.93 P
2 F
0.08 ( state. The only difference is) 417.36 281.93 P
(that empty positions are legal for the) 87 268.93 T
4 F
(TRANTO) 251.07 268.93 T
2 F
( but not for the) 290.67 268.93 T
4 F
(START) 358.8 268.93 T
2 F
( state.) 391.8 268.93 T
(The syntax of a space expression item is) 105 247.89 T
3 18 Q
([) 132 222.18 T
2 9 Q
(<expr>) 140.62 222.18 T
3 10.5 Q
(OF) 169.39 222.18 T
3 18 Q
(]) 186.6 222.18 T
2 9 Q
(<expr>) 195.22 222.18 T
2 7 Q
(or) 132 209.51 T
2 9 Q
(<space-expression>) 132 199.18 T
2 11 Q
0.18 (Positional and assigned descriptions cannot be mixed in the same statement. When assigned values) 105 178.8 P
0.46 (are used, the parentheses are not used, and state-space variables that do not change values need not be) 87 165.8 P
(specified. For example, if the space is) 87 152.8 T
4 10 Q
(SPACE = \050NP: 0..6, NF: ARRAY[1..3] OF 0..6, NX\051;) 132 132.42 T
2 11 Q
(all the following) 87 112.71 T
4 F
(TRANTO) 162.47 112.71 T
2 F
( statements are equivalent:) 202.07 112.71 T
4 10 Q
(IF NF[2]>0 TRANTO \050 NP-1 , NF[1] , NF[2]-1 , NF[3] , NX \051 BY LAMBDA;) 132 93.33 T
(IF NF[2]>0 TRANTO \050 NP-1 , , NF[2]-1 , , \051 BY LAMBDA;) 132 81.33 T
(IF NF[2]>0 TRANTO NP=NP-1 , NF[2]=NF[2]-1 BY LAMBDA;) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "22" 27
%%Page: "23" 28
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(23) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.26 (Notice that one does not have to specify state-space variables in the destination state when the val-) 105 718.67 P
-0.07 (ues do not change. If, however, the positional form is being used, then one must be careful to make sure) 87 705.67 P
-0.14 (that the correct number of commas separate the variables being changed. Spaces around the punctuation) 87 692.67 P
(are not necessary but have been added for clarity.) 87 679.67 T
-0.18 (Because it is so common to increase or to decrease the value of a state-space variable by one, the) 105 660.62 P
3 F
-0.18 (++) 530.46 660.62 P
2 F
0.8 (and) 87 647.62 P
6 F
0.8 (-) 106.43 647.62 P
0.8 (-) 113.38 647.62 P
2 F
0.8 ( operations, which add one and subtract one, respectively, are allowed in the destination field.) 119.42 647.62 P
(Consider the following two forms, which have the same effect:) 87 634.62 T
4 10 Q
(TRANTO NWP-NWP+1) 132 616.25 T
(TRANTO NWP++) 132 599.21 T
2 11 Q
0.83 (In addition to providing a convenient shorthand notation, the) 87 581.5 P
3 F
0.83 (++) 364.61 581.5 P
2 F
0.83 ( and) 377.15 581.5 P
6 F
0.83 (-) 400.2 581.5 P
0.83 (-) 407.15 581.5 P
2 F
0.83 ( constructs are actually more) 413.19 581.5 P
0.86 (efficiently implemented than their longhand counterparts. The first of these requires three operations:) 87 568.5 P
1.03 (one to fetch) 87 555.5 P
4 F
2.48 (NFP) 144.78 555.5 P
2 F
1.03 (, one to fetch the number) 164.58 555.5 P
4 F
2.48 (1) 283.5 555.5 P
2 F
1.03 (, and one to compute the sum. The second requires two) 290.1 555.5 P
0.51 (operations: one to fetch and one to increment. A seemingly minor speedup of an operation that is per-) 87 542.5 P
1.15 (formed once for every transition can result in a noticeable speedup in the generation of a very large) 87 529.5 P
(model.) 87 516.5 T
2.31 (Only state-space variables may be changed in the destination clause of a) 105 498.46 P
4 F
5.53 (TRANTO) 453.43 498.46 P
2 F
2.31 ( statement.) 493.03 498.46 P
1.4 (Because) 87 485.46 P
4 F
3.36 (IMPLICIT) 127.8 485.46 P
2 F
1.4 ( functions are typically used to define dependent variables that are) 180.6 485.46 P
4 F
3.36 (IMPLICIT) 490.2 485.46 P
2 F
0.01 (functions of the state space, one might be tempted to change them in a destination clause. This practice,) 87 472.46 P
(however, is not allowed. For example, the following would not be valid:) 87 459.46 T
4 10 Q
(SPACE = \050NP:0..5,NWP:0..5\051;) 132 441.08 T
(IMPLICIT NFP\050NP,NWP\051 = NP - NWP;) 132 429.08 T
(...) 132 417.08 T
(TRANTO NFP++ BY NWP*LAMBDA;) 132 405.08 T
2 11 Q
(The transition should be correctly entered as) 105 387.38 T
4 10 Q
(TRANTO NWP-- BY NWP*LAMBDA;) 132 369 T
2 11 Q
(to increment the state-space variable itself rather than the) 87 351.29 T
4 F
(IMPLICIT) 341.46 351.29 T
2 F
( function name.) 394.26 351.29 T
5 10.5 Q
(Rate expr) 105 328.08 T
(ession.) 145.14 328.08 T
2 11 Q
0.26 (The expression following the) 176.64 328.08 P
4 F
0.63 (BY) 309.06 328.08 P
2 F
0.26 ( key word indicates the rate of the transition to be) 322.26 328.08 P
0.16 (added to the model. This expression may contain) 87 315.08 P
4 F
0.38 (FOR) 306.73 315.08 P
2 F
0.16 ( index variables and state-space variables as well) 326.52 315.08 P
1.07 (as constants and arithmetic operations. The rate expression is the only expression in which real con-) 87 302.08 P
0.2 (stants may be used. There are three ways of expressing a rate in the SURE input language that are sup-) 87 289.08 P
(ported in ASSIST.) 87 276.08 T
(Slow transitions are specified by the transition rate. The syntax is) 105 257.04 T
2 9 Q
(<expr>) 132 239.33 T
2 11 Q
0.63 (where) 87 221.96 P
2 9 Q
0.52 (<expr>) 117.25 221.96 P
2 11 Q
0.63 ( is a real expression. Fast transitions may be specified by two different methods: White\325s) 143.4 221.96 P
(method or the fast exponential method.) 87 208.96 T
(The syntax for White\325s method is) 105 190.92 T
2 10.5 Q
(<) 132 167.21 T
2 9 Q
(<mu>) 140.55 167.21 T
3 10.5 Q
(,) 164.83 167.21 T
2 9 Q
(<sig>) 170.08 167.21 T
3 18 Q
([) 193.36 167.21 T
3 10.5 Q
(,) 201.98 167.21 T
2 9 Q
(<frac>) 207.23 167.21 T
3 18 Q
(]) 233.99 167.21 T
2 10.5 Q
( >) 239.98 167.21 T
2 11 Q
(where the three subexpressions define the following:) 87 145.83 T
2 9 Q
(<mu>) 132 127.79 T
6 11 Q
(\272) 171 127.79 T
2 F
(the conditional mean transition time) 189 127.79 T
2 9 Q
(<sig>) 132 114.75 T
6 11 Q
(\272) 171 114.75 T
2 F
(the conditional standard deviation of the transition time) 189 114.75 T
2 9 Q
(<frac>) 132 101.71 T
6 11 Q
(\272) 171 101.71 T
2 F
(the transition probability) 189 101.71 T
1.06 (All three parameters are real constants. The third parameter is optional. If omitted, the transition) 105 82.67 P
(probability is assumed to be 1.0.) 87 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "23" 28
%%Page: "24" 29
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(24) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(The syntax of the fast exponential rate expression is) 105 718.67 T
3 10.5 Q
(F) 132 699.3 T
(AST) 137.64 699.3 T
2 9 Q
(<rate>) 160.69 699.3 T
2 11 Q
-0.23 (where the rate is a real constant expression. The SURE program automatically calculates the conditional) 87 679.76 P
0.18 (moments from the unconditional rates given in this expression. In the simple case with only one transi-) 87 666.76 P
(tion leaving a state, the following three rate expressions are all equivalent:) 87 653.76 T
4 10 Q
(BY < 1.0/ALPHA , 1.0/ALPHA > ;) 132 635.72 T
(BY < 1.0/ALPHA , 1.0/ALPHA , 1.0 > ;) 132 623.72 T
(BY FAST ALPHA;) 132 611.72 T
2 11 Q
(Spaces are not required around the punctuation. They are present for clarity.) 87 593.35 T
7 10.5 Q
(12.2.7.2. Block IF construct.) 105 569.48 T
2 11 Q
1.47 (The block) 231.3 569.48 P
4 F
3.52 (IF) 281.29 569.48 P
2 F
1.47 ( construct at version ASSIST 7.0 relaxes most restric-) 294.49 569.48 P
1.4 (tions from prior versions. Most noticeable is that) 87 556.48 P
4 F
3.35 (FOR) 315.41 556.48 P
2 F
1.4 (,) 335.21 556.48 P
4 F
3.35 (DEATHIF) 342.1 556.48 P
2 F
1.4 (, and other rules may now appear) 388.3 556.48 P
0.35 (inside of block) 87 543.48 P
4 F
0.85 (IF) 156.19 543.48 P
2 F
0.35 (\325s as well as the) 169.39 543.48 P
4 F
0.85 (TRANTO) 243.55 543.48 P
2 F
0.35 ( statements and clauses and nested) 283.15 543.48 P
4 F
0.85 (IF) 439.85 543.48 P
2 F
0.35 (\325s that were allowed) 453.05 543.48 P
(in the past. This feature gives the user a lot more flexibility when describing system behavior.) 87 530.48 T
(The syntax of a block) 105 510.78 T
4 F
(IF) 203.07 510.78 T
2 F
( is) 216.26 510.78 T
3 10.5 Q
(IF) 132 486.41 T
2 9 Q
(<condition>) 145.12 486.41 T
3 10.5 Q
(THEN) 191.9 486.41 T
3 18 Q
({) 224.29 486.41 T
2 9 Q
(<more-rules>) 234 486.41 T
3 18 Q
(}) 285.77 486.41 T
([) 295.48 486.41 T
3 10.5 Q
(ELSE) 304.1 486.41 T
3 18 Q
({) 333.58 486.41 T
2 9 Q
(<more-rules>) 343.29 486.41 T
3 18 Q
(}) 395.06 486.41 T
(]) 404.78 486.41 T
3 10.5 Q
(ENDIF) 413.39 486.41 T
(;) 448.69 486.41 T
2 11 Q
(Even though a block) 105 464.37 T
4 F
(IF) 198.49 464.37 T
2 F
( can be typed on a single line as in the example) 211.69 464.37 T
4 10 Q
-0.27 (IF NWP > 0 THEN TRANTO NWP--,NCF++ BY NWP*LAMBDA; DEATHIF ...; ENDIF;) 132 445.33 P
2 11 Q
(it is generally clearer to use multiple lines and indentation, as in) 87 426.96 T
4 10 Q
(IF NWP > 0 THEN) 132 408.93 T
(   TRANTO NWP--,NCF++ BY NWP*LAMBDA;) 132 396.93 T
(   DEATHIF ...;) 132 384.93 T
(ENDIF;) 132 372.93 T
2 11 Q
0.78 (A semicolon is not necessary after the word) 105 354.55 P
4 F
1.88 (THEN) 306.77 354.55 P
2 F
0.78 ( in the) 333.17 354.55 P
4 F
1.88 (IF) 365.77 354.55 P
2 F
0.78 ( clause. If present, it will be ignored) 378.97 354.55 P
(\050since the empty statement is also a valid ASSIST statement\051.) 87 341.56 T
0.3 (Do not think of the block) 105 321.85 P
4 F
0.71 (IF) 220.44 321.85 P
2 F
0.3 ( in the procedural sense. Think of it as conditionally selecting a set of) 233.64 321.85 P
(rules.) 87 308.85 T
(Block) 105 289.15 T
4 F
(IF) 134.03 289.15 T
2 F
( constructs can be nested with other constructs. For example,) 147.23 289.15 T
4 9.5 Q
(    IF \050NFP>0\051 THEN) 87 270.44 T
(       FOR III IN [1..3]) 87 258.94 T
-0.34 (    ASSERT \050NOT \050W[III] AND F[III]\051\051; \050* either working or failed but not both *\051) 87 247.44 P
(    IF \050NOT W[III]\051 THEN) 87 235.94 T
(       [TRANTO W[III]=TRUE BY FAST PROB*DELTA1; \050* disappearance *\051) 87 224.45 T
-0.36 (        TRANTO W[III]=TRUE,NS-- BY FAST \0501.0-PROB\051*DELTA2;  \050* reconfiguration *\051) 87 212.95 P
(       ENDIF;) 87 201.45 T
(   ENDFOR;) 87 189.95 T
(ENDIF;) 87 178.45 T
7 10.5 Q
(12.2.7.3. FOR construct.) 105 155.07 T
2 11 Q
-0.13 (Often several rules are needed that are identical except that they operate on) 214.1 155.07 P
0.67 (different state-space variables. The different state-space variables can be put in an array, and the) 87 142.07 P
4 F
1.62 (FOR) 523.2 142.07 P
2 F
0.71 (construct can be used to define several) 87 129.07 P
4 F
1.71 (TRANTO) 264.58 129.07 P
2 F
0.71 ( or) 304.18 129.07 P
4 F
1.71 (DEATHIF) 320.27 129.07 P
2 F
0.71 ( rules at once. Do not think of the) 366.47 129.07 P
4 F
1.71 (FOR) 523.2 129.07 P
2 F
(construct as a loop in the procedural sense. Think of it as repeatedly generating a set of rules.) 87 116.07 T
(The syntax of a) 105 96.37 T
4 F
(FOR) 175.87 96.37 T
2 F
( construct is) 195.67 96.37 T
3 10.5 Q
(FOR) 132 72 T
2 9 Q
(<index>) 156.79 72 T
3 10.5 Q
(IN) 189.57 72 T
2 9 Q
(<set>) 203.86 72 T
3 18 Q
({) 226.63 72 T
2 9 Q
(<more-rules>) 236.35 72 T
3 18 Q
(}) 288.11 72 T
3 10.5 Q
(ENDFOR) 297.83 72 T
(;) 344.79 72 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "24" 29
%%Page: "25" 30
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(25) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
1.89 (The old) 105 718.67 P
4 F
4.54 (FOR) 145.45 718.67 P
2 F
1.89 ( construct syntax, which specified a single index range with the lower and upper) 165.25 718.67 P
0.79 (bounds separated by a comma, is still supported, but the new syntax is recommended for clarity. The) 87 705.67 P
(formal syntactical description of the old form, therefore, is relegated to the appendix.) 87 692.67 T
-0.28 (A) 105 673.26 P
4 F
-0.66 (FOR) 115.42 673.26 P
2 F
-0.28 ( construct generates rules over a set of values. A set in the ASSIST language is a collection of) 135.22 673.26 P
(whole numbers. The numbers can be listed individually or specified via ranges.) 87 660.26 T
(The syntax of a set is) 105 640.84 T
2 10.5 Q
([) 132 616.77 T
2 9 Q
(<expression>) 138.12 616.77 T
3 18 Q
([) 189.39 616.77 T
8 10.5 Q
(..) 198.01 616.77 T
2 9 Q
(<expression>) 213.24 616.77 T
3 18 Q
(]) 264.51 616.77 T
({) 273.12 616.77 T
3 10.5 Q
(,) 282.84 616.77 T
2 9 Q
(<expression>) 288.09 616.77 T
3 18 Q
([) 339.36 616.77 T
8 10.5 Q
(..) 347.98 616.77 T
2 9 Q
(<expression>) 363.2 616.77 T
3 18 Q
(]) 414.48 616.77 T
(}) 423.09 616.77 T
2 10.5 Q
( ]) 430.19 616.77 T
2 11 Q
-0.21 (The ellipsis) 105 595.02 P
8 10.5 Q
-0.48 (..) 158.36 595.02 P
2 11 Q
-0.21 ( indicates a value range beginning with the left value and ending with the right value,) 170.96 595.02 P
(inclusively. Thus,) 87 582.02 T
3 F
(5) 168.28 582.02 T
8 10.5 Q
(..) 173.78 582.02 T
3 11 Q
(9) 186.38 582.02 T
2 F
( specifies the numbers) 191.88 582.02 T
3 F
(5,6,7,8,9) 292.69 582.02 T
2 F
( whereas) 331.19 582.02 T
3 F
(5,9) 372.73 582.02 T
2 F
( specifies the numbers) 386.48 582.02 T
3 F
(5) 487.3 582.02 T
2 F
( and) 492.8 582.02 T
3 F
(9) 514.18 582.02 T
2 F
(.) 519.68 582.02 T
(Examples of sets are) 105 562.61 T
4 10 Q
([3]) 132 543.86 T
([1,5]) 132 531.86 T
([1..5]) 132 519.86 T
([1,3,5]) 132 507.86 T
([0..4,6..9]) 132 495.86 T
([1+4*NP..5*NP]) 132 483.86 T
([\0504*NP\051..\0505*NP-1\051]) 132 471.86 T
2 11 Q
-0.07 (Consider a system in which system failure occurs when at least half of any of three types of compo-) 105 453.78 P
0.82 (nents are faulty. An array) 87 440.78 P
3 F
0.82 (NA) 205.93 440.78 P
2 F
0.82 ( of range 1 to 3 could represent the number of each type of component) 221.82 440.78 P
-0.14 (active in the system, and an array) 87 427.78 P
3 F
-0.14 (NF) 235.74 427.78 P
2 F
-0.14 ( of range 1 to 3 could represent the number of each type of compo-) 250.41 427.78 P
(nent that is faulty and active. The) 87 414.78 T
5 F
(death) 236.7 414.78 T
2 F
( condition could be described by the following:) 261.14 414.78 T
4 10 Q
(FOR I IN [1..3];) 132 396.04 T
(    DEATHIF 2 * NF[I] >= NA[I];) 132 384.04 T
(ENDFOR;) 132 372.04 T
2 11 Q
0.29 (Thus, in all states of the Markov model where 2 times the value of NF for one of the three compo-) 105 353.96 P
(nents is greater than or equal to) 87 340.96 T
3 F
(NA) 227.83 340.96 T
2 F
( for the same component, system failure occurs.) 243.72 340.96 T
(Even though a) 105 321.55 T
4 F
(FOR) 171.3 321.55 T
2 F
( can be typed in all cases on a single line as in the example,) 191.1 321.55 T
4 10 Q
(FOR I IN [1..3] DEATHIF 2 * NF[I] >= NA[I]; ENDFOR;) 132 302.8 T
2 11 Q
(it is generally clearer to use indentation, as in) 87 284.73 T
4 10 Q
(FOR I IN [1..3]) 132 266.98 T
(    DEATHIF 2 * NF[I] >= NA[I];) 132 254.98 T
(ENDFOR;) 132 242.98 T
2 11 Q
-0.19 (A semicolon is not necessary after the set in the) 87 224.9 P
4 F
-0.46 (IN) 297.71 224.9 P
2 F
-0.19 ( clause. If present, it will be ignored \050since the empty) 310.91 224.9 P
(statement is also an ASSIST statement\051.) 87 211.9 T
1.19 (The) 105 193.49 P
4 F
2.86 (FOR) 126.05 193.49 P
2 F
1.19 ( variable) 145.85 193.49 P
2 9 Q
0.98 (<index>) 189.16 193.49 P
2 11 Q
1.19 ( may be referenced only by statements between the) 219.31 193.49 P
4 F
2.86 (FOR) 457.61 193.49 P
2 F
1.19 ( clause and its) 477.41 193.49 P
0.63 (matching) 87 180.49 P
4 F
1.52 (ENDFOR) 131.33 180.49 P
2 F
0.63 (. The same variable name can be used for) 170.93 180.49 P
4 F
1.52 (FOR) 361.75 180.49 P
2 F
0.63 ( constructs that follow each other in) 381.55 180.49 P
-0.22 (series; however, a unique variable name must be used for a) 87 167.49 P
4 F
-0.53 (FOR) 347.29 167.49 P
2 F
-0.22 ( index that is nested inside another) 367.09 167.49 P
4 F
-0.53 (FOR) 520.45 167.49 P
2 F
-0.22 (.) 540.25 167.49 P
0.58 (The rules between the) 87 154.49 P
2 9 Q
0.48 (<set>) 188.91 154.49 P
2 11 Q
0.58 ( and the) 209.07 154.49 P
4 F
1.4 (ENDFOR) 248.39 154.49 P
2 F
0.58 ( \050also called the) 287.99 154.49 P
5 F
0.58 (body) 362.41 154.49 P
2 F
0.58 ( of the) 383.8 154.49 P
4 F
1.4 (FOR) 416.4 154.49 P
2 F
0.58 (\051 are processed with the) 436.2 154.49 P
(index varying over all specified values in the set.) 87 141.49 T
4 F
(FOR) 305.13 141.49 T
2 F
( constructs may be nested, as in the following:) 324.93 141.49 T
4 10 Q
(SPACE = \050 NC: ARRAY[1..5] OF 0..6,) 132 122.74 T
(          NF: ARRAY[1..5] OF 0..3 \051;) 132 110.74 T
(FOR I IN [1..5]) 132 93.33 T
(    FOR J IN [1..2]) 132 81.33 T
(       IF NC[I] > J TRANTO NF[I] = NF[I]+1 BY J*LAMBDA;) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "25" 30
%%Page: "26" 31
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(26) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 10 Q
(    ENDFOR;) 132 719.33 T
(    DEATHIF NC[I] < NF[I];) 132 707.33 T
(ENDFOR;) 132 695.33 T
2 11 Q
-0.1 (Each) 105 676.07 P
4 F
-0.23 (ENDFOR) 129.64 676.07 P
2 F
-0.1 ( matches the most recently preceding) 169.24 676.07 P
4 F
-0.23 (FOR) 334.84 676.07 P
2 F
-0.1 (. The) 354.64 676.07 P
4 F
-0.23 (FOR) 379.8 676.07 P
2 F
-0.1 ( constructs in the example above) 399.6 676.07 P
0.57 (generate 10 \0505) 87 663.07 P
6 F
0.57 (\264) 154.38 663.07 P
2 F
0.57 ( 2\051) 160.42 663.07 P
4 F
1.37 (TRANTO) 176.23 663.07 P
2 F
0.57 ( rules, one for each pair of \050) 215.83 663.07 P
3 F
0.57 (I,J) 342 663.07 P
2 F
0.57 (\051 values \0501,1\051, \0501,2\051, \0502,1\051, \0502,2\051, ... , \0505,2\051.) 354.53 663.07 P
0.33 (Five) 87 650.07 P
4 F
0.79 (DEATHIF) 109.64 650.07 P
2 F
0.33 ( rules are also defined by using values of) 155.84 650.07 P
3 F
0.33 (I) 341.17 650.07 P
2 F
0.33 ( from 1 to 5. The body of the) 345.45 650.07 P
4 F
0.79 (FOR) 478.55 650.07 P
2 F
0.33 ( may con-) 498.35 650.07 P
(tain any valid rules, including block) 87 637.07 T
4 F
(IF) 248.02 637.07 T
2 F
(\325s and nested) 261.22 637.07 T
4 F
(FOR) 321.4 637.07 T
2 F
(\325s.) 341.2 637.07 T
7 10.5 Q
(12.2.7.4. ASSERT statement.) 105 612.31 T
2 11 Q
0.96 (The) 232.77 612.31 P
4 F
2.32 (ASSERT) 253.6 612.31 P
2 F
0.96 ( statement is used to specify a condition that should be) 293.2 612.31 P
0.52 (true for every model state. During model generation, each model state is checked for compliance with) 87 599.31 P
1.34 (every) 87 586.31 P
4 F
3.21 (ASSERT) 115.52 586.31 P
2 F
1.34 ( condition. If any) 155.12 586.31 P
4 F
3.21 (ASSERT) 238.99 586.31 P
2 F
1.34 ( conditions are violated, the ASSIST program will print a) 278.59 586.31 P
0.45 (warning to both the terminal and the log file.) 87 573.31 P
4 F
1.08 (ASSERT) 290.85 573.31 P
2 F
0.45 ( statements are useful for checking that the sys-) 330.45 573.31 P
(tem described in the ASSIST input file has the intended properties.) 87 560.31 T
(The syntax is) 105 540.72 T
3 10.5 Q
(ASSER) 132 521.46 T
(T) 165.47 521.46 T
2 9 Q
(<condition>) 175.1 521.46 T
3 10.5 Q
(;) 221.88 521.46 T
2 11 Q
(The) 105 502.03 T
4 F
(ASSERT) 124.86 502.03 T
2 9 Q
(<condition>) 167.21 502.03 T
2 11 Q
( is a Boolean expression with optional parentheses. For example,) 211.36 502.03 T
4 9.5 Q
-0.53 (ASSERT \050NWP + NFP\051 = NP; \050* Check that working processors + failed processors) 111 483.44 P
(                              always equal total # processors *\051) 111 471.94 T
(% ASSERT \050NP>0\051;) 111 460.44 T
(% ASSERT \050\050NP+5\051<\050NWP-4\051\051;) 111 448.94 T
(% ASSERT \050NP>0\051 AND \050NWP>0\051 AND \050NFP <= 100\051;) 111 437.44 T
(% ASSERT \050NP>0\051 AND \050NWP>0\051 AND \050NOT \050NFP > 100\051\051;) 111 425.94 T
7 10.5 Q
(12.2.7.5. DEA) 105 401.68 T
(THIF statement.) 165.38 401.68 T
2 11 Q
0.22 (The) 240.35 401.68 P
4 F
0.53 (DEATHIF) 260.43 401.68 P
2 F
0.22 ( statement specifies which states are death states, i.e.,) 306.63 401.68 P
(absorbing states in the model. The following is an example:) 87 388.68 T
4 10 Q
(SPACE = \050DIM1: 2..4, DIM2: 3..5\051;) 132 369.75 T
(...) 132 357.75 T
(DEATHIF \050DIM1 = 4\051 OR \050DIM2 = 3\051;) 132 345.75 T
2 11 Q
(This statement defines \0504,3\051, \0504,4\051, \0504,5\051, \0502,3\051, and \0503,3\051 as death states.) 87 326.49 T
(In general, the syntax is) 105 306.9 T
3 10.5 Q
(DEA) 132 287.64 T
(THIF) 153.39 287.64 T
2 9 Q
(<condition>) 181.69 287.64 T
3 10.5 Q
(;) 228.46 287.64 T
2 11 Q
(The) 105 268.21 T
2 9 Q
(<condition>) 124.86 268.21 T
2 11 Q
( is a Boolean expression with optional parentheses. For example) 169.01 268.21 T
4 10 Q
(DEATHIF \050NWP <= NFP\051; \050* death if no longer majority working *\051) 123 249.28 T
-0.5 (DEATHIF \0502*NWP[I] <= NP[I]\051 AND \050NT=1\051; \050* death if last triad fails *\051) 123 237.28 P
2 11 Q
-0.04 (Unless the) 105 218.02 P
4 F
-0.1 (ONEDEATH) 153.8 218.02 P
2 F
-0.04 ( option is turned off explicitly in the input file, generated death states will be) 206.6 218.02 P
0.06 (aggregated according to which) 87 205.02 P
4 F
0.14 (DEATHIF) 225.31 205.02 P
2 F
0.06 ( statement they satisfy. See the description of the) 271.51 205.02 P
4 F
0.14 (ONEDEATH) 490.2 205.02 P
2 F
(option \050section 12.2.1.2\051 for a complete description of this feature.) 87 192.02 T
7 10.5 Q
(12.2.7.6. PRUNEIF statement.) 105 167.26 T
2 11 Q
-0.1 (Because systems with numerous components exhibit a combinatorial) 240.35 167.26 P
0.64 (explosion of states, the conservative-pruning method can be used to limit the number of model states,) 87 154.26 P
0.55 (and consequently, can greatly decrease the solution time as well as the hardware memory required for) 87 141.26 P
(solution.) 87 128.26 T
0.22 (A system model with many components usually has many long paths consisting of one or two fail-) 105 108.67 P
0.3 (ures of each component type before system failure is reached. Because the occurrence of so many fail-) 87 95.67 P
0.6 (ures is unlikely during a short mission, these long paths typically contribute insignificantly to system-) 87 82.67 P
0.91 (failure probability. The dominant system-failure modes are typically the short paths to system failure) 87 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "26" 31
%%Page: "27" 32
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(27) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.7 (consisting of) 87 718.67 P
5 F
0.7 (like) 147.68 718.67 P
2 F
0.7 ( component failures. Model pruning can eliminate the long paths to system failure if) 163.57 718.67 P
(one conservatively assumes that system failure occurs earlier on those paths.) 87 705.67 T
0.03 (The) 105 686.97 P
4 F
0.08 (PRUNEIF) 124.89 686.97 P
2 F
0.03 ( statement can be used to truncate the Markov model automatically. Assume that the) 171.09 686.97 P
-0.21 (probability of more than) 87 673.97 P
3 F
-0.21 (M) 196.14 673.97 P
2 F
-0.21 ( component failures occurring during a mission is negligible compared to the) 206.52 673.97 P
-0.17 (probability of system failure. Using) 87 660.97 P
4 F
-0.4 (NCF) 245.66 660.97 P
2 F
-0.17 ( as a state-space variable to represent the number of component) 265.46 660.97 P
(failures, the following statement appropriately truncates the model:) 87 647.97 T
4 10 Q
(PRUNEIF NCF > M;) 132 629.95 T
2 11 Q
2.11 (The model is truncated by assuming system failure when the truncation criteria are met. This) 105 611.58 P
(method is therefore conservative.) 87 598.58 T
1.11 (Note that the number of aggregated pruned states reported by ASSIST is actually the number of) 105 578.89 P
(transitions that resulted in a pruned state, not the number of unique state) 87 565.89 T
5 F
(n) 407.19 565.89 T
2 F
(-tuples that are pruned states.) 412.69 565.89 T
1.39 (The) 105 546.19 P
4 F
3.33 (PRUNEIF) 126.24 546.19 P
2 F
1.39 ( statement specifies which states are pruned states \050conservatively assumed to be) 172.44 546.19 P
0.54 (absorbing states in the model that reduce the total model size\051. The) 87 533.2 P
4 F
1.3 (PRUNEIF) 390.76 533.2 P
2 F
0.54 ( statement has the same) 436.96 533.2 P
(syntax as the) 87 520.2 T
4 F
(DEATHIF) 146.58 520.2 T
2 F
( statement:) 192.78 520.2 T
3 10.5 Q
(PRUNEIF) 132 500.83 T
2 9 Q
(<condition>) 181.29 500.83 T
3 10.5 Q
(;) 228.07 500.83 T
2 11 Q
4.64 (The) 105 481.31 P
2 9 Q
3.8 (<condition>) 129.5 481.31 P
2 11 Q
4.64 ( is a Boolean expression with optional parentheses. The alternate spelling) 173.65 481.31 P
4 F
(\322PRUNIF\323) 87 468.31 T
2 F
( is also allowed.) 139.8 468.31 T
(Consider the following example:) 105 448.61 T
4 10 Q
(SPACE = \050DIM1: 2..4, DIM2: 3..5\051;) 132 429.58 T
(PRUNEIF \050DIM1 = 4\051 OR \050DIM2 = 3\051;) 132 417.58 T
2 11 Q
(This statement defines \0504, 3\051, \0504, 4\051, \0504, 5\051, \0502, 3\051, and \0503, 3\051 as pruned states.) 87 399.22 T
0.69 (Like the death states, the generated pruned states are lumped together according to the) 105 380.53 P
4 F
1.65 (PRUNEIF) 496.8 380.53 P
2 F
1.06 (statement they satisfy. Thus, the contribution to system failure caused by pruning can be determined) 87 367.53 P
0.03 (easily from examining the SURE output. The pruned states are always lumped, regardless of the setting) 87 354.53 P
0.84 (of the) 87 341.53 P
4 F
2.01 (ONEDEATH) 116.78 341.53 P
2 F
0.84 ( option. In a model that is generated from an input file with three) 169.58 341.53 P
4 F
2.01 (DEATHIF) 469.39 341.53 P
2 F
0.84 ( state-) 515.59 341.53 P
0.35 (ments and two) 87 328.53 P
4 F
0.84 (PRUNEIF) 154.96 328.53 P
2 F
0.35 ( statements, states 1 through 3 will be death states corresponding to the three) 201.16 328.53 P
4 F
3.52 (DEATHIF) 87 315.53 P
2 F
1.47 ( statements, and states 4 and 5 will be pruned states corresponding to the two) 133.2 315.53 P
4 F
3.52 (PRUNEIF) 496.8 315.53 P
2 F
(statements.) 87 302.53 T
(The specific algorithm used to assign state numbers is detailed in section 4.3.) 105 282.83 T
0.15 (The ASSIST program generates a statement in the model file that identifies the pruned states in the) 105 263.14 P
2.52 (model. For example, the model with three death states and two pruned states would contain the) 87 250.14 P
(statement) 87 237.14 T
4 10 Q
(PRUNESTATES = \0504, 5\051;) 132 218.11 T
2 11 Q
0.21 (The SURE program will use this statement to list the pruned-state probabilities separately from the) 105 199.75 P
-0.15 (death state probabilities. \050Note: Versions of SURE earlier than 6.0 will simply list the pruned states as if) 87 186.75 P
(they were death states.\051) 87 173.75 T
4 F
2.17 (PRUNEIF) 105 154.06 P
2 F
0.9 ( statements may be included inside) 151.2 154.06 P
4 F
2.17 (FOR) 313.05 154.06 P
2 F
0.9 ( and block) 332.85 154.06 P
4 F
2.17 (IF) 384.14 154.06 P
2 F
0.9 ( constructs, but they may not be) 397.34 154.06 P
0.76 (included within) 87 141.06 P
4 F
1.83 (TRANTO) 160.03 141.06 P
2 F
0.76 ( statements. These features are described in the next few sections. Using the) 199.63 141.06 P
4 F
(PRUNEIF) 87 128.06 T
2 F
( statement to reduce model size is discussed and demonstrated in section 4.1.) 133.2 128.06 T
3 12 Q
(13. Model Reduction T) 87 101.7 T
(echniques) 203.23 101.7 T
2 11 Q
0.11 (Modeling the failure behavior of a complex system with many interacting components can produce) 105 82.67 P
0.01 (a system-state explosion that results in huge models with hundreds of thousands of states that cannot be) 87 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "27" 32
%%Page: "28" 33
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(28) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.62 (held or solved on typical computer systems. This problem has been called the) 87 718.67 P
5 F
0.62 (large state-space prob-) 439.1 718.67 P
1.46 (lem) 87 705.67 P
2 F
1.46 (.  However, prudent use of various model reduction techniques with ASSIST allows the user to) 102.88 705.67 P
0.15 (represent many such systems with reasonably sized models. This section describes the model reduction) 87 692.67 P
1.48 (techniques available in ASSIST.  For a demonstration of these techniques and a discussion of their) 87 679.67 P
(effectiveness, see reference 6.) 87 666.67 T
3 10.5 Q
(13.1. Model Pruning) 105 641.96 T
2 11 Q
-0.13 (A model of a system with numerous components can have many long paths with one or two failures) 105 624.09 P
1.24 (of each component type before a system-failure condition is reached.  Because the occurrence of so) 87 611.09 P
1.8 (many failures is unlikely during a short mission, these long paths typically contribute insignificant) 87 598.09 P
-0.11 (amounts to the probability of system failure.  The dominant system-failure modes are typically the short) 87 585.09 P
0.48 (paths to system failure that have failures of like components.  Model pruning can be used to eliminate) 87 572.09 P
(the long paths by conservatively assuming that system failure occurs earlier on those paths.) 87 559.09 T
3.3 (Model pruning is supported in ASSIST by the) 105 540.05 P
4 F
7.91 (PRUNEIF) 336.72 540.05 P
2 F
3.3 ( statement, which is described in) 382.92 540.05 P
0.34 (section) 87 527.05 P
0.34 (3.2.7.  The pruning conditions are described by) 120.91 527.05 P
4 F
0.8 (PRUNEIF) 334.09 527.05 P
2 F
0.34 ( statements much like the death con-) 380.29 527.05 P
0.7 (ditions are described using) 87 514.05 P
4 F
1.68 (DEATHIF) 210.17 514.05 P
2 F
0.7 ( statements.  Like the death states, the pruned states are lumped) 256.37 514.05 P
(according to which) 87 501.05 T
4 F
(PRUNEIF) 174.07 501.05 T
2 F
( statement was satisfied by the state.) 220.26 501.05 T
1.34 (Since the model is truncated by assuming system failure when the pruning criterion is met, this) 105 482.01 P
-0.19 (method is conservative.  The system failure states caused by model pruning are lumped together accord-) 87 469.01 P
1.86 (ing to the) 87 456.01 P
4 F
4.47 (PRUNEIF) 136.89 456.01 P
2 F
1.86 ( statement that is satisfied; thus, the contribution to system-failure probability) 183.09 456.01 P
(caused by pruning can be determined easily from the SURE output file.) 87 443.01 T
3 10.5 Q
(13.2. Model T) 105 418.31 T
(rimming) 166.06 418.31 T
2 11 Q
0.47 (A new method for reducing the size of semi-Markov reliability models was recently developed by) 105 400.44 P
0.36 (Dr. Allan White and Daniel Palumbo of NASA Langley Research Center. The details of this trimming) 87 387.44 P
1.25 (method and the theorem proving that this method is conservative are given in reference 7. The user) 87 374.44 P
-0.25 (should read this paper to determine the system characteristics for which this trimming method is guaran-) 87 361.44 P
(teed to be conservative.  Not all systems can be trimmed.) 87 348.44 T
0.05 (The) 105 329.4 P
4 F
0.12 (TRIM) 124.9 329.4 P
2 F
0.05 ( statement is used in the setup or start section of the ASSIST input file to trim the model.) 151.3 329.4 P
(The syntax is) 87 316.4 T
3 10.5 Q
(TRIM OFF ;) 132 297.69 T
2 7 Q
(or) 132 287.53 T
3 10.5 Q
(TRIM ON) 132 271.19 T
3 18 Q
([) 181.58 271.19 T
3 10.5 Q
(WITH) 190.2 271.19 T
2 9 Q
(<trimomega>) 222.58 271.19 T
3 18 Q
(]) 274.36 271.19 T
3 10.5 Q
(;) 282.98 271.19 T
2 7 Q
(or) 132 258.53 T
3 10.5 Q
(TRIM FULL) 132 242.19 T
3 18 Q
([) 193.83 242.19 T
3 10.5 Q
(WITH) 202.45 242.19 T
2 9 Q
(<trimomega>) 234.84 242.19 T
3 18 Q
(]) 286.61 242.19 T
3 10.5 Q
(;) 295.23 242.19 T
2 11 Q
(where) 87 220.82 T
2 9 Q
(<trimomega>) 116.62 220.82 T
2 11 Q
( is a real expression for the trimming bound) 165.77 220.82 T
(.) 386.63 220.82 T
(The first form) 105 202.78 T
4 F
(TRIM OFF) 169.46 202.78 T
2 F
( is for no trimming and is the default.) 222.26 202.78 T
0.18 (The second form) 105 183.74 P
4 F
0.42 (TRIM ON) 182.81 183.74 P
2 F
0.18 ( selects the trimming bound described in the White-Palumbo paper.  In) 229.44 183.74 P
4 F
0.85 (TRIM ON) 87 170.74 P
2 F
0.35 ( mode the model is altered so that each state in which the system is experiencing a recovery) 134.05 170.74 P
0.13 (has all failure transitions from it that do not immediately end in a death state, ending in an intermediate) 87 157.74 P
3.32 (trim state. There is a transition from the intermediate trim state to a final state at rate) 87 144.74 P
(\050) 87 131.74 T
2 9 Q
(<) 90.66 131.74 T
(trimomega>) 95.74 131.74 T
2 11 Q
(\051.   For example,) 139.81 131.74 T
4 10 Q
(TRIM ON WITH 6e-4;) 132 113.37 T
2 11 Q
0.5 (The) 105 95.67 P
4 F
1.2 (WITH) 125.36 95.67 P
2 F
0.5 ( clause is optional; if it is absent, the user will be prompted for a value for) 151.76 95.67 P
0.5 (.   The) 513.4 95.67 P
(value must be entered in response to the prompt and must be terminated with a semicolon.) 87 82.67 T
361 212.52 386.63 229.7 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(W) 362 220.82 T
2 8.5 Q
(t) 370.46 216.65 T
(r) 372.83 216.65 T
(i) 375.66 216.65 T
(m) 378.02 216.65 T
0 0 612 792 C
517.37 136.44 543 153.62 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(W) 518.37 144.74 T
2 8.5 Q
(t) 526.83 140.57 T
(r) 529.19 140.57 T
(i) 532.02 140.57 T
(m) 534.39 140.57 T
0 0 612 792 C
487.76 87.37 513.4 104.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(W) 488.76 95.67 T
2 8.5 Q
(t) 497.23 91.49 T
(r) 499.59 91.49 T
(i) 502.42 91.49 T
(m) 504.78 91.49 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "28" 33
%%Page: "29" 34
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(29) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.26 (The third form specifies use of the White-Palumbo trimming bound plus the generation of an extra) 105 718.67 P
(transition from each pruned state to an additional pruned state at the same rate) 87 705.67 T
(.) 459.07 705.67 T
0.82 (The user is again referred to reference 7 to justify trimming \050) 105 683.27 P
4 F
1.97 (TRIM ON) 381.92 683.27 P
2 F
0.82 ( or) 430.09 683.27 P
4 F
1.97 (TRIM FULL) 446.39 683.27 P
2 F
0.82 (\051 and to) 507.76 683.27 P
(determine if this method is valid for the particular system class.) 87 670.27 T
0.3 (To be conservative, the) 105 647.88 P
2 9 Q
0.25 (<trimomega>) 211.6 647.88 P
2 11 Q
0.3 ( value should be set as the sum of the failure rates of all system) 260.75 647.88 P
1.08 (components.  The justification for the) 87 634.88 P
4 F
2.6 (TRIM FULL) 261.83 634.88 P
2 F
1.08 ( method is as follows:  Each pruned state of the) 323.83 634.88 P
0.35 (model is not a system death state.  Thus, another failure of some component must occur before system) 87 621.88 P
0.14 (failure can occur.  The) 87 608.88 P
4 F
0.32 (TRIM FULL) 189.69 608.88 P
2 F
0.14 ( feature simply includes this extra failure transition before pruning) 249.41 608.88 P
0.17 (the model.  To be conservative,) 87 595.88 P
2 9 Q
0.14 (<trimomega>) 229.18 595.88 P
2 11 Q
0.17 ( must be greater than or equal to the sum of the failure rates) 278.33 595.88 P
(for all components still in the system when any pruned state is reached.) 87 582.88 T
3 10.5 Q
(13.3. Assignment of State Numbers) 105 554.82 T
2 11 Q
(State numbers are assigned according to the following hierarchy:) 105 533.59 T
(1.) 105 511.2 T
(When) 117 511.2 T
4 F
(ONEDEATH) 146.02 511.2 T
2 F
( is) 198.82 511.2 T
4 F
(ON) 211.65 511.2 T
2 F
(, death state numbers are always assigned first.) 224.85 511.2 T
(2.) 105 488.81 T
(The pruned death states are assigned next.) 117 488.81 T
(3.) 105 466.42 T
(If) 117 466.42 T
4 F
(TRIM) 127.08 466.42 T
2 F
( is) 153.48 466.42 T
4 F
(ON) 166.31 466.42 T
2 F
( or) 179.51 466.42 T
4 F
(FULL) 194.18 466.42 T
2 F
( \050) 220.58 466.42 T
6 F
(\263) 226.99 466.42 T
2 F
(1\051, the) 235.78 466.42 T
4 F
(TRIM) 266.63 466.42 T
2 F
( death state is assigned next.) 293.03 466.42 T
(4.) 105 444.02 T
(If) 117 444.02 T
4 F
(TRIM) 127.08 444.02 T
2 F
( is) 153.48 444.02 T
4 F
(FULL) 166.31 444.02 T
2 F
( \050= 2\051, the individual pruned states are assigned next.) 192.71 444.02 T
(5.) 105 421.63 T
(If) 117 421.63 T
4 F
(TRIM) 127.08 421.63 T
2 F
( is) 153.48 421.63 T
4 F
(ON) 166.31 421.63 T
2 F
( or) 179.51 421.63 T
4 F
(FULL) 194.18 421.63 T
2 F
( \050) 220.58 421.63 T
6 F
(\263) 226.99 421.63 T
2 F
( 1\051, the trim state is assigned next.) 233.03 421.63 T
(6.) 105 399.24 T
(The start state is assigned next.) 117 399.24 T
3 12 Q
(14. Model Generation Algorithm) 87 370.18 T
2 11 Q
0.86 (The model generation algorithm builds the model from the start state by recursively applying the) 105 348.45 P
4 F
2.16 (TRANTO) 87 335.45 P
2 F
0.9 ( rules.  A list of states to be processed, called the) 126.6 335.45 P
5 F
0.9 (ready set) 354.3 335.45 P
2 F
0.9 (, begins with only the start state.) 395.22 335.45 P
0.75 (Before application of a rule, ASSIST checks all the) 87 322.45 P
4 F
1.81 (ASSERT) 322.29 322.45 P
2 F
0.75 ( conditions and prints any warning mes-) 361.89 322.45 P
0.67 (sages.  All death conditions are then checked to determine if the current state is a death state. Since a) 87 309.45 P
0.17 (death state denotes system failure, no transitions can leave a death state. If the state is not a death state,) 87 296.45 P
0.15 (ASSIST then checks all pruned conditions to determine if the current state is a pruned state. If ASSIST) 87 283.45 P
0.54 (finds a state-space variable that is out of range, or if ASSIST detects some other error in the state, the) 87 270.45 P
0 (state is treated as a death state. Each) 87 257.45 P
4 F
0 (TRANTO) 249.22 257.45 P
2 F
0 ( rule is then evaluated for the nondeath state. If the condi-) 288.82 257.45 P
0.31 (tion expression of the) 87 244.45 P
4 F
0.73 (TRANTO) 185.99 244.45 P
2 F
0.31 ( rule evaluates as true for the current state, the destination expression is) 225.59 244.45 P
-0.03 (used to determine the state-space variable values of the destination state.  If the destination state has not) 87 231.45 P
0.2 (been defined in the model, the new state is added to the ready set of states to be processed.  The transi-) 87 218.45 P
0.79 (tion rate is determined from the rate expression, and the transition description is printed to the model) 87 205.45 P
0.03 (file. When all) 87 192.45 P
4 F
0.08 (TRANTO) 150.02 192.45 P
2 F
0.03 ( rules have been applied to it, the state is removed from the ready set.  When the) 189.62 192.45 P
(ready set is empty, all possible paths terminate in death states and model building is complete.) 87 179.45 T
2.42 (By default, all death states are aggregated or lumped \050) 105 157.06 P
4 F
5.8 (ONEDEATH) 364.41 157.06 P
5.8 (ON) 422.38 157.06 P
2 F
2.42 (\051 according to the first) 435.58 157.06 P
4 F
2.18 (DEATHIF) 87 144.06 P
2 F
0.91 ( statement to which the state conformed. If the user sets) 133.2 144.06 P
4 F
2.18 (ONEDEATH) 390.67 144.06 P
2.18 (OFF) 447.13 144.06 P
2 F
0.91 (, then all distinct) 466.93 144.06 P
(death states are kept in the model.) 87 131.06 T
0.07 (Note that the ready list is a subset of all state nodes that have been processed up to any given point.) 105 108.67 P
-0.22 (All state nodes that have been processed must remain in memory because ASSIST must check each new) 87 95.67 P
-0.17 (destination state to see if it has already been processed.  There are typically many different paths to each) 87 82.67 P
(model state.  States are processed only once.) 87 69.67 T
433.43 697.37 459.07 714.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(W) 434.43 705.67 T
2 8.5 Q
(t) 442.9 701.49 T
(r) 445.26 701.49 T
(i) 448.09 701.49 T
(m) 450.45 701.49 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "29" 34
%%Page: "30" 35
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(30) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(The following is a pseudo-code version of the algorithm used to generate the model:) 105 718.67 T
4 9.5 Q
(\050* ====================== subroutines/functions ===================== *\051) 87 698.04 T
(FUNC  PROCESS\050state,trim,fast,in_error\051) 87 686.54 T
(      \050* note that ``fast\325\325 is ignored when trimming is off *\051\051:) 87 675.04 T
(      state number) 87 663.54 T
6 F
(\254) 195.3 663.54 T
4 F
( search existing states.) 204.68 663.54 T
(      IF \050state already present\051 THEN:) 87 652.04 T
(         is a death state if flagged as such.) 87 640.54 T
(      ELSE:) 87 629.04 T
(         save current state and dependent variable values.) 87 617.54 T
(            recompute dependent variables that are referenced in) 87 606.04 T
(                 ASSERT, DEATHIF, PRUNEIF sections for state.) 87 594.54 T
(            test all ASSERT\325s, printing WARNING message if a test fails.) 87 583.04 T
(            test all DEATHIF\325s.) 87 571.54 T
(            IF \050not a death\051 test all PRUNEIF\325s.) 87 560.04 T
(         restore current state and dependent variable values.) 87 548.54 T
(         IF \050death or prune state\051 AND \050fast\051 AND \050trimming is on\051 THEN:) 87 537.04 T
(            print warning message:) 87 525.54 T
(                   Model contains recovery transitions directly to death state) 87 514.04 T
(                   and therefore may not be suited to trimming.) 87 502.54 T
(         ENDIF.) 87 491.04 T
(      ENDIF.) 87 479.54 T
(      IF \050death state\051 AND \050lumping\051 THEN:) 87 468.04 T
(         state number) 87 456.54 T
6 F
(\254) 212.4 456.54 T
4 F
( death state number.) 221.78 456.54 T
(      ELSE IF \050prune state\051 THEN:) 87 445.04 T
(         state number) 87 433.54 T
6 F
(\254) 212.4 433.54 T
4 F
( prune state number.) 221.78 433.54 T
(      ELSE IF \050\050trim\051 AND \050trimming is on\051\051 THEN:) 87 422.04 T
(         state number) 87 410.54 T
6 F
(\254) 212.4 410.54 T
4 F
( trim state number.) 221.78 410.54 T
(      ELSE \050* not being lumped *\051:) 87 399.04 T
(         IF \050death state\051 THEN:) 87 387.54 T
(            flag the state.) 87 376.04 T
(         ENDIF.) 87 364.54 T
(         IF \050state does not yet exist\051 THEN:) 87 353.04 T
(            state number) 87 341.54 T
6 F
(\254) 229.5 341.54 T
4 F
( add the state to the ready list.) 238.88 341.54 T
(         ENDIF.) 87 330.04 T
(      ENDIF.) 87 318.54 T
(      RETURN state number.) 87 307.04 T
(ENDFUNC.) 87 295.54 T
(\050* ========================= main algorithm ========================= *\051) 87 276.42 T
(MAIN:) 87 257.29 T
(    \050* process the start state *\051) 87 245.79 T
(    compute start state.) 87 234.29 T
(%    compute dependent variables referenced in TRANTO section.) 87 222.79 T
(    start state number) 87 211.29 T
6 F
(\254) 218.1 211.29 T
4 F
( call PROCESS\050start state,NORMAL,N/A,error\051.) 227.48 211.29 T
(    \050* generate the model *\051) 87 192.17 T
(    ready list) 87 180.67 T
6 F
(\254) 172.5 180.67 T
4 F
( pointer to first state.) 181.88 180.67 T
(    FOR current-state IN [all states on ready list] LOOP:) 87 169.17 T
(        IF \050state is not flagged as death state\051 THEN:) 87 157.67 T
(           set fast transition counter to zero.) 87 146.17 T
(           FOR \050all recovery \050fast\051 TRANTO\325s\051 DO:) 87 134.67 T
(       compute new state.) 87 123.17 T
(               new state number) 87 111.67 T
6 F
(\254) 269.4 111.67 T
4 F
( call PROCESS\050new state,NORMAL,FAST,error\051.) 278.78 111.67 T
(               print the transition to the model file.) 87 100.17 T
(               increment fast transition counter.) 87 88.67 T
(           ENDFOR.) 87 77.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "30" 35
%%Page: "31" 36
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(31) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(           IF \050trimming is on\051 THEN:) 87 719.67 T
(               set slow transition counter to zero.) 87 708.17 T
(               FOR \050all non-recovery \050slow\051 TRANTO\325s\051 DO:) 87 696.67 T
(                   compute new state.) 87 685.17 T
(                   IF \050fast transition counter > 0\051 THEN:) 87 673.67 T
-0.36 (                      new state number) 87 662.17 P
6 F
-0.15 (\254) 300.22 662.17 P
4 F
-0.36 ( call PROCESS\050new state,TRIM,SLOW,) 309.6 662.17 P
-0.36 (error\051.) 503.1 662.17 P
(                   ELSE:) 87 650.67 T
(                     new state number) 87 639.17 T
6 F
(\254) 303.6 639.17 T
4 F
( call PROCESS\050new state,NORMAL,SLOW,) 312.98 639.17 T
(                                                      error\051.) 87 627.67 T
(                   ENDIF.) 87 616.17 T
(                   print the transition to the model file.) 87 604.67 T
(               ENDFOR.) 87 593.17 T
(           ELSE:) 87 581.67 T
(               set slow transition counter to zero.) 87 570.17 T
(               FOR \050all non-recovery \050slow\051 TRANTO\325s\051 DO:) 87 558.67 T
(                   compute new state.) 87 547.17 T
(                   new state number) 87 535.67 T
6 F
(\254) 292.2 535.67 T
4 F
( call PROCESS\050new state,NORMAL,N/A\051.) 301.58 535.67 T
(                   print the transition to the model file.) 87 524.17 T
(               ENDFOR.) 87 512.67 T
(           ENDIF.) 87 501.17 T
(        ENDIF.) 87 489.67 T
(        print warning if no transitions out of a non-death state.) 87 478.17 T
(        ready list) 87 466.67 T
6 F
(\254) 195.3 466.67 T
4 F
( increment pointer to next ready state.) 204.68 466.67 T
(    ENDFOR.) 87 455.17 T
(    \050* print extra trim transitions *\051) 87 430.92 T
(    IF \050trimming is on\051 THEN:) 87 419.42 T
(       FOR current-state IN [trim state only] DO:) 87 407.92 T
(           print transition from current-state to trim death) 87 396.42 T
(                 state BY TRIMOMEGA.) 87 384.92 T
(       ENDFOR.) 87 373.42 T
(       IF  \050pruning with TRIMOMEGA \050i.e., trim=2\051\051 THEN) 87 361.92 T
(           FOR current-state IN [prune states] DO:) 87 350.42 T
(               print transition from current-state to current prune) 87 338.92 T
(                     death state BY TRIMOMEGA.) 87 327.42 T
(           ENDFOR.) 87 315.92 T
(       ENDIF.) 87 304.42 T
(    ENDIF.) 87 292.92 T
(    FOR \050all TRANTO\325s\051 DO:) 87 281.42 T
(       IF \050never referenced\051 THEN:) 87 269.92 T
(           print a warning message that TRANTO was never used.) 87 258.42 T
(       ENDIF.) 87 246.92 T
(    ENDFOR.) 87 235.42 T
(    IF \050fatal error occurred\051 THEN:) 87 223.92 T
(       flag model file as erroneous.) 87 212.42 T
(    ENDIF.) 87 200.92 T
(STOP.) 87 189.42 T
3 12 Q
(15. File Pr) 87 156.5 T
(ocessing) 139.78 156.5 T
2 11 Q
0.6 (The ASSIST program reads an input file containing the model definition rules and creates several) 105 130.42 P
(output files. The two most important output files are the model file and the log \050listing\051 file.) 87 117.42 T
0.18 (The diagram in figure 8 illustrates the data information flow between files during the processing of) 105 90.67 P
(an ASSIST input file. These files are described in sections 6.1 through 6.1.4.) 87 77.67 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "31" 36
%%Page: "32" 37
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(32) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(15.1. Input File) 105 543.85 T
2 11 Q
-0.19 (The input file contains a sequence of ASSIST instructions, and the user must create the file by using) 105 525.86 P
(a text editor or a tool such as TOTAL.) 87 512.86 T
2 8.8 Q
(1) 255.33 517.27 T
2 11 Q
1.09 (By convention, the input filename must end with an) 105 493.71 P
3 F
1.09 (.ast) 349.6 493.71 P
2 F
1.09 (  suffix.   A file without this extension) 365.79 493.71 P
0.51 (cannot be processed by ASSIST. When running ASSIST, the user may omit the suffix when typing in) 87 480.71 P
(the file name. For example, either of the following will process the file) 87 467.71 T
3 F
(foo.ast) 404.12 467.71 T
2 F
(:) 434.97 467.71 T
2 10.5 Q
(assist foo) 132 448.89 T
(assist foo.ast) 132 436.39 T
2 11 Q
(The syntax and semantics of the ASSIST instructions are described below in detail.) 87 417.4 T
7 10.5 Q
(15.1.1. Model File) 105 392.58 T
2 11 Q
1.52 (The model output file produced by the program contains the semi-Markov model in the format) 105 374.59 P
(needed for input to the SURE computer program. The model file has a) 87 361.59 T
3 F
(.mod) 399.84 361.59 T
2 F
( file extension.) 423.37 361.59 T
1.52 (The model file contains all the named numeric \050non-Boolean\051 constants defined in the ASSIST) 105 342.44 P
-0.08 (input file setup and start sections as well as in the transitions generated by the ASSIST rule section. The) 87 329.44 P
(ASSIST file layout and its three sections are discussed in the next chapter.) 87 316.44 T
1.03 (Any statements in the ASSIST input file that are surrounded by double quotation marks are also) 105 297.28 P
0.4 (copied directly into the model file.   These statements and named constants appear in the model file in) 87 284.28 P
1.9 (the same sequence in which they appear in the ASSIST input file. Values input with the ASSIST) 87 271.28 P
4 F
0.35 (INPUT) 87 258.28 P
2 F
0.14 ( statement are treated as named constants.   All the transitions between states defining the semi-) 120 258.28 P
(Markov model are listed next.) 87 245.28 T
-0.24 (Each SURE state is defined by a unique integer.  To make the model easier to understand, the model) 105 226.13 P
-0.04 (file is annotated with the state-space variables of each state in comments, which SURE will ignore.  For) 87 213.13 P
(example,) 87 200.13 T
4 10 Q
(1\050* 6,0,0 *\051,   2\050* 5,1,0 *\051 = LAMBDA;) 132 181.64 T
2 11 Q
0.66 (defines a transition from SURE state 1, which was ASSIST state \0506,0,0\051, to SURE state 2, which was) 87 163.82 P
0.73 (ASSIST state \0505,1,0\051, at an exponential rate with mean) 87 150.82 P
6 F
0.73 (l) 336.74 150.82 P
2 F
0.73 (.  The comment feature can be turned off by) 342.78 150.82 P
(adding the line) 87 137.82 T
4 F
(COMMENT=0) 155.13 137.82 T
2 F
(; to the ASSIST input file.) 214.53 137.82 T
-0.27 (Following the state transitions are three comment lines containing the following statistics describing) 105 119.67 P
1.27 (the model: the number of model states, the number of model transitions, and the number of distinct) 87 106.67 P
87 88 543 103 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
87.25 92.75 231.25 92.75 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 7.2 Q
0 X
0 0 0 1 0 0 0 K
0.62 (1) 96 85.6 P
2 9 Q
0.78 (TOTAL is a prototype user interface program that generates ASSIST input files from a more abstract description of the) 99.6 82 P
(system \050ref. 8\051.) 87 71 T
(Figure 8.  Data file flow in ASSIST.) 249.63 575.85 T
87 581.85 543 726 C
87 592.85 543 726 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 74 333 534 467 460 134 85 591.71 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/fig3.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (fig3.ps)
%%CreationDate: (4/18/95) (9:33 AM)
%%BoundingBox: 74 333 534 467
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
u
u
0 R
0 G
0 i 0 J 0 j 0.6918 w 4 M []0 d
%AI3_Note:
0 D
131.3602 409.5388 m
131.3602 427.0635 L
76.4802 427.0635 L
76.4802 409.5388 L
131.3602 409.5388 L
s
103.9202 418.3012 m
S
U
94.9272 427.0635 m
92.852 429.6 91.699 430.5223 v
90.5461 431.4447 89.7967 431.6176 88.4131 431.6176 c
87.0296 431.6176 85.4155 431.6176 Y
83.8014 431.6176 82.4178 431.6176 v
81.0343 431.6176 80.8614 431.4447 79.7084 430.5223 c
78.5555 429.6 76.4802 427.0635 y
S
U
0 To
0.9223 0 0 0.9223 104.1508 415.5341 0 Tp
TP
-13.1405 0 Td
0 Tr
0 O
0 g
0.9223 w
/_Times-Roman 9.7577 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
9.7577 0 Tl
0 Tc
0 Tw
(foo.ast) Tx 
(\r) TX 
TO
u
u
0 R
0 G
0.6918 w
205.1483 354.6589 m
205.1483 372.1836 L
150.2684 372.1836 L
150.2684 354.6589 L
205.1483 354.6589 L
s
177.7083 363.4212 m
S
U
168.7154 372.1836 m
166.6401 374.72 165.4872 375.6424 v
164.3342 376.5647 163.5848 376.7377 162.2013 376.7377 c
160.8178 376.7377 159.2037 376.7377 Y
157.5895 376.7377 156.206 376.7377 v
154.8225 376.7377 154.6495 376.5647 153.4966 375.6424 c
152.3437 374.72 150.2684 372.1836 y
S
U
0 To
0.9223 0 0 0.9223 177.9389 360.6541 0 Tp
TP
-16.1219 0 Td
0 Tr
0 O
0 g
0.9223 w
(foo.aobj) Tx 
(\r) TX 
TO
0 R
0 G
0.6918 w
131.8213 418.7623 m
278.4753 418.7623 l
S
177.4778 375.4118 m
177.4778 391.0918 l
278.4753 391.0918 l
278.4753 451.0447 l
462.4845 451.0447 l
462.4845 387.4024 l
371.1717 387.4024 l
371.1717 359.2706 l
386.3905 359.2706 l
S
u
0 O
0 g
0.9223 w
388.4163 359.2706 m
382.3736 357.847 l
383.6707 359.2706 L
382.3736 360.6943 l
388.4163 359.2706 L
f
U
0 R
0 G
0.6918 w
386.3905 354.4283 m
343.5011 354.4283 l
343.5011 401.9294 l
386.6211 401.9294 l
S
u
0 O
0 g
0.9223 w
388.4163 354.4283 m
382.3736 353.0046 l
383.6707 354.4283 L
382.3736 355.8519 l
388.4163 354.4283 L
f
U
0 R
0 G
0.6918 w
278.7059 406.7718 m
386.3905 406.7718 l
S
u
0 O
0 g
0.9223 w
388.4163 406.7718 m
382.3736 405.3481 l
383.6707 406.7718 L
382.3736 408.1954 l
388.4163 406.7718 L
f
U
u
388.4163 401.9294 m
382.3736 400.5058 l
383.6707 401.9294 L
382.3736 403.3531 l
388.4163 401.9294 L
f
U
0 R
0 G
0.6918 w
205.206 363.4212 m
343.04 363.4212 l
S
u
u
443.5763 394.7812 m
443.5763 412.3059 L
388.6964 412.3059 L
388.6964 394.7812 L
443.5763 394.7812 L
s
416.1363 403.5435 m
S
U
407.1434 412.3059 m
405.0681 414.8423 403.9152 415.7647 v
402.7622 416.687 402.0128 416.86 400.6293 416.86 c
399.2458 416.86 397.6317 416.86 Y
396.0175 416.86 394.634 416.86 v
393.2505 416.86 393.0775 416.687 391.9246 415.7647 c
390.7717 414.8423 388.6964 412.3059 y
S
U
0 To
0.9223 0 0 0.9223 416.367 400.7765 0 Tp
TP
-16.1219 0 Td
0 Tr
0 O
0 g
0.9223 w
(foo.alog) Tx 
(\r) TX 
TO
u
u
0 R
0 G
0.6918 w
443.5763 350.0471 m
443.5763 367.5718 L
388.6964 367.5718 L
388.6964 350.0471 L
443.5763 350.0471 L
s
416.1363 358.8095 m
S
U
407.1434 367.5718 m
405.0681 370.1083 403.9152 371.0306 v
402.7622 371.953 402.0128 372.1259 400.6293 372.1259 c
399.2458 372.1259 397.6317 372.1259 Y
396.0175 372.1259 394.634 372.1259 v
393.2505 372.1259 393.0775 371.953 391.9246 371.0306 c
390.7717 370.1083 388.6964 367.5718 y
S
U
0 To
0.9223 0 0 0.9223 416.367 356.0424 0 Tp
TP
-16.3959 0 Td
0 Tr
0 O
0 g
0.9223 w
(foo.mod) Tx 
(\r) TX 
TO
0 R
0 G
0.6918 w
499.148 359.2706 m
443.5763 359.2706 l
S
u
0 O
0 g
0.9223 w
500.8279 359.2706 m
494.7853 357.847 l
496.0824 359.2706 L
494.7853 360.6943 l
500.8279 359.2706 L
f
U
u
0 R
0 G
0.6918 w [2.7671 2.7671 ]0 d
480.9316 336.2118 m
480.9316 464.4188 L
140.5837 464.4188 L
140.5837 336.2118 L
480.9316 336.2118 L
s
310.7576 400.3153 m
S
U
u
0 O
0 g
0.9223 w []0 d
177.4778 372.2907 m
176.0541 378.3333 l
177.4778 377.0363 L
178.9014 378.3333 l
177.4778 372.2907 L
f
U
0 To
0.9223 0 0 0.9223 161.7978 452.4282 0 Tp
TP
-16.2624 0 Td
0 Tr
(ASSIST) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 204.6871 424.0659 0 Tp
TP
-22.8911 0 Td
0 Tr
(Parse phase) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 370.2494 456.1176 0 Tp
TP
-42.8079 0 Td
0 Tr
(Named constants, etc.) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 333.3553 413.92 0 Tp
TP
-20.7304 0 Td
0 Tr
(Input lines) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 365.1764 394.0894 0 Tp
TP
-8.9418 0 Td
0 Tr
(Map) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 365.6376 346.1271 0 Tp
TP
-21.9489 0 Td
0 Tr
(Transitions) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 274.5553 369.8777 0 Tp
TP
-46.872 0 Td
0 Tr
(Model generation phase) Tx 
(\r) TX 
TO
0 To
0.9223 0 0 0.9223 513.2139 356.273 0 Tp
TP
-12.4687 0 Td
0 Tr
(SURE) Tx 
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
87 581.85 543 726 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "32" 37
%%Page: "33" 38
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(33) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.36 (death states encountered in building the model. These statistics are printed within comment delimiters,) 87 718.67 P
0.14 (and the SURE program will ignore them.   Unless errors or warnings are encountered, these three com-) 87 705.67 P
(ment lines will be the last three lines in the model file. For example,) 87 692.67 T
4 10 Q
(\050* NUMBER OF STATES IN MODEL = 2 *\051) 132 670.91 T
(\050* NUMBER OF TRANSITIONS IN MODEL = 6 *\051) 132 658.91 T
(\050* 6 DEATH STATES AGGREGATED INTO STATE 1 *\051) 132 646.91 T
2 11 Q
-0.15 (If errors or warnings are detected, the number of errors and warnings are printed as comments at the) 105 625.82 P
(end of the model file.) 87 612.82 T
(For example,) 87 590.4 T
4 10 Q
(\050* 0048 ERRORS *\051) 132 569.64 T
(\050* 0001 WARNING *\051) 132 557.64 T
7 10.5 Q
(15.1.2. Log File) 105 529.88 T
2 11 Q
0.4 (The log \050listing\051 file contains a listing of the ASSIST input file plus various information to aid the) 105 508.63 P
0.82 (user in checking the correctness of the generated model. The listing file has the) 87 495.63 P
3 F
0.82 (.alog) 453.14 495.63 P
2 F
0.82 (  file extension) 475.45 495.63 P
0.15 (unless it is running on systems where four character extensions are illegal, in which case the listing file) 87 482.63 P
(has the) 87 469.63 T
3 F
(.alg) 123.36 469.63 T
2 F
(  file extension.) 140.16 469.63 T
0.08 (Each input line printed in the listing file is numbered for user convenience when the user is making) 105 447.2 P
0.12 (corrections to a line. The user should make all corrections to the ASSIST input file \050) 87 434.2 P
3 F
0.12 (.ast) 459.72 434.2 P
2 F
0.12 (\051 and not to the) 475.91 434.2 P
(listing file.) 87 421.2 T
0.88 (The name of the ASSIST input file, followed by the date and time of execution, is printed in the) 105 398.78 P
0.45 (upper left-hand corner of each page of the listing file.   The page number is printed in the upper right-) 87 385.78 P
(hand corner of each page of the listing file.) 87 372.78 T
0.21 (If any errors were encountered while parsing the ASSIST input file, they are printed after the input) 105 350.36 P
0.95 (line containing the error, the model file is flagged as erroneous, and no transitions are generated. An) 87 337.36 P
0.8 (attempt to run such a model file through SURE will be rejected. If any errors are encountered during) 87 324.36 P
0.6 (model generation, the model file is flagged as erroneous. An attempt to run such a model file through) 87 311.36 P
0.34 (SURE will be rejected. Errors encountered during model generation are printed after the input file list-) 87 298.36 P
(ing and optional variable or load maps.) 87 285.36 T
(The following is a sample log file:) 105 262.94 T
4 9.5 Q
-0.49 (a3.ast    3/16/94 10:02:49 a.m.                     ASSIST 7.1, NASA LaRC    Page 1) 87 241.51 P
(\0500001\051: SPACE = \050A,B,C,D\051;) 87 221.59 T
(\0500002\051: START = \0502 OF 3,1 OF 2,1\051;) 87 210.09 T
(\0500003\051: IF C = 2 TRANTO C = C+1 BY A+B+C+D;) 87 198.59 T
(\0500004\051: DEATHIF C>2;) 87 187.09 T
(PARSING TIME = 0.15 sec.) 87 175.59 T
(RULE GENERATION TIME = 0.00 sec.) 87 164.09 T
(NUMBER OF STATES IN MODEL = 2) 87 152.59 T
(NUMBER OF TRANSITIONS IN MODEL = 1) 87 141.09 T
(1 DEATH STATES AGGREGATED INTO STATE 1) 87 129.59 T
2 11 Q
0.29 (Note that the first line of each page begins with the name of the ASSIST input file \050) 105 108.67 P
4 F
0.69 (a3.ast) 478.06 108.67 P
2 F
0.29 (\051, fol-) 517.66 108.67 P
0.29 (lowed by the date and time of the run \050) 87 95.67 P
4 F
0.7 (3/16/94 10:20:49) 260.4 95.67 P
0.7 (a.m.) 369.74 95.67 P
2 F
0.29 (\051, and ends with the program and) 396.14 95.67 P
1.24 (version number which processed the input file \050) 87 82.67 P
4 F
2.97 (ASSIST) 305.55 82.67 P
2.97 (7.1,) 349.14 82.67 P
2.97 (NASA) 379.53 82.67 P
2.97 (LaRC) 409.92 82.67 P
2 F
1.24 (\051, followed by the page) 436.32 82.67 P
(number.) 87 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "33" 38
%%Page: "34" 39
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(34) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.27 (The input file is listed next.   Note that the line numbers are not typed into the input file.  They are) 105 718.67 P
0.09 (automatically generated for reference purposes. The four corresponding lines in the input file) 87 705.67 P
4 F
0.21 (a3.ast) 503.4 705.67 P
2 F
(are) 87 692.67 T
4 10 Q
(SPACE = \050A,B,C,D\051;) 132 674.18 T
(START = \0502 OF 3,1 OF 2,1\051;) 132 662.18 T
(IF C = 2 TRANTO C = C+1 BY A+B+C+D;) 132 650.18 T
(DEATHIF C>2;) 132 638.18 T
2 11 Q
0.16 (The last five lines in the log file give statistics on the parsing time, rule generation time, number of) 105 620.35 P
0.88 (model states, number of model transitions, and number of aggregated death states, respectively. Note) 87 607.35 P
0.74 (that the number of aggregated death states is a count of how many transitions resulted in death, not a) 87 594.35 P
(count of the number of unique state) 87 581.35 T
5 F
(n) 246.17 581.35 T
2 F
(-tuples which are death states.) 251.67 581.35 T
0.1 (Error messages appear in the log file directly below the line that is in error.  The wedge \050) 105 562.2 P
6 F
0.1 (\331) 497.49 562.2 P
2 F
0.1 (\051 charac-) 504.13 562.2 P
(ter points to the approximate location within the line where the error occurred.   For example,) 87 549.2 T
4 10 Q
(\0500006\051: ABC = AAA - 2;) 132 530.71 T
6 F
(\331) 222 518.71 T
4 F
( [ERROR] IDENTIFIER NOT DEFINED: AAA) 228.03 518.71 T
(\0500007\051:) 132 506.71 T
7 10.5 Q
(15.1.3. Object File) 105 482.22 T
2 11 Q
-0.08 (The object file contains binary numeric data tables and pseudo machine code.   This file is currently) 105 464.23 P
(used as a temporary file; however, future versions of ASSIST may make additional use of it.) 87 451.23 T
1.04 (The object file has the) 105 432.07 P
3 F
1.04 (.aobj) 210.73 432.07 P
2 F
1.04 (  file extension unless it is running on systems where four-character) 234.26 432.07 P
(extensions are illegal, in which case it has the) 87 419.07 T
3 F
(.aoj) 290.47 419.07 T
2 F
( file extension.) 310.63 419.07 T
7 10.5 Q
(15.1.4. T) 105 394.25 T
(emporary Files) 141.95 394.25 T
2 11 Q
0.67 (The ASSIST program language uses several temporary files to process the ASSIST) 105 376.26 P
4 F
1.62 (INPUT) 482.75 376.26 P
2 F
0.67 ( state-) 515.75 376.26 P
0.6 (ments and to store variable definitions for the optional cross-reference map, which is listed on the log) 87 363.26 P
-0.04 (file.    Temporary files are deleted automatically after successful generation of the model file.    Tempo-) 87 350.26 P
-0.08 (rary file names are system dependent.   They begin with) 87 337.26 P
4 F
-0.19 (QQ) 335.39 337.26 P
2 F
-0.08 ( and end with a sequence of digits.   Tempo-) 348.59 337.26 P
(rary file names usually do not contain an extension.) 87 324.26 T
3 12 Q
(16. Examples) 87 298.44 T
2 11 Q
1.07 (In this section the use of ASSIST to generate semi-Markov models will be illustrated by several) 105 279.95 P
(examples.) 87 266.95 T
3 10.5 Q
(16.1. T) 105 242.12 T
(riad W) 134.85 242.12 T
(ith Cold Spar) 166.46 242.12 T
(es) 226.95 242.12 T
2 11 Q
0.95 (This sample architecture has a triad of processors in which all three processors execute the same) 105 224.14 P
0.45 (program. In addition to the triad, the sample architecture contains a pool of two cold spare processors.) 87 211.14 P
0.52 (Each processor receives identical inputs so that all nonfaulty processors produce the same output. The) 87 198.14 P
0.31 (three outputs are voted and any incorrect outputs are masked by the voting as long as a majority of the) 87 185.14 P
0.27 (active processors are nonfaulty.  A faulty processor is detected by the voter and is replaced with a cold) 87 172.14 P
0.5 (spare processor, if one is available.  There is no fault detection for spare processors until they become) 87 159.14 P
(active.) 87 146.14 T
(This architecture can be described in the ASSIST input language as follows:) 105 126.98 T
4 9.5 Q
(\050*  TRIAD WITH COLD SPARES  *\051) 132 108.82 T
(N_PROCS = 3;            \050* Number of active processors *\051) 132 92.17 T
(N_SPARES = 2;           \050* Number of spare processors *\051) 132 80.67 T
(LAMBDA_P = 1E-4;        \050* Failure rate of active processors *\051) 132 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "34" 39
%%Page: "35" 40
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(35) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(LAMBDA_S = 1E-5;        \050* Failure rate of spare processors *\051) 132 719.67 T
(DELTA = 3.6E3;          \050* Reconfiguration rate *\051) 132 708.17 T
(SPACE = \050NP: 0..N_PROCS, \050* Number of active processors *\051) 132 691.62 T
(         NFP: 0..N_PROCS, \050* Number of failed active processors *\051) 132 680.12 T
(         NS: 0..N_SPARES, \050* Number of spare processors *\051) 132 668.62 T
(         NFS: 0..N_SPARES\051; \050* Number of failed spare processors *\051) 132 657.12 T
(START = \050N_PROCS, 0, N_SPARES, 0\051;) 132 640.57 T
(DEATHIF 2 * NFP >= NP;) 132 624.02 T
(IF NP > NFP TRANTO NFP = NFP+1 BY \050NP-NFP\051*LAMBDA_P;) 132 607.48 T
(   \050* Active processor failure *\051) 132 595.98 T
(IF NS > NFS TRANTO NFS = NFS+1 BY NS*LAMBDA_S;) 132 579.43 T
(   \050* Spare processor failure *\051) 132 567.93 T
(IF \050NFP > 0 AND NS > 0\051 THEN) 132 551.38 T
(   IF NS > NFS   \050* Replace failed processor with working spare *\051) 132 539.88 T
(      TRANTO \050NP, NFP-1, NS-1, NFS\051) 132 528.38 T
(             BY FAST \0501-\050NFS/NS\051\051*NFP*DELTA;) 132 516.88 T
(   IF NFS > 0    \050* Replace failed processor with failed spare *\051) 132 505.38 T
(      TRANTO \050NP, NFP, NS-1, NFS-1\051) 132 493.88 T
(             BY FAST \050NFS/NS\051*NFP*DELTA;) 132 482.38 T
(ENDIF;) 132 470.88 T
2 11 Q
1.43 (The) 105 453.33 P
4 F
3.44 (TRANTO) 126.29 453.33 P
2 F
1.43 ( statements describe the three transition types possible between states in the semi-) 165.89 453.33 P
(Markov model:) 87 440.33 T
2 12 Q
(\245) 99 421.29 T
2 11 Q
(The failure rate of each active processor is) 111 421.29 T
(.) 314.73 421.29 T
2 12 Q
(\245) 99 404.24 T
2 11 Q
(The failure rate of a cold spare processor is) 111 404.24 T
(.) 318.1 404.24 T
2 12 Q
(\245) 99 387.19 T
2 11 Q
(A failed active processor is replaced by a spare processor at fast exponential rate) 111 387.19 T
6 F
(d) 468.39 387.19 T
2 F
(.) 473.82 387.19 T
0.12 (The third transition type requires a more complicated) 105 370.14 P
4 F
0.29 (TRANTO) 343.04 370.14 P
2 F
0.12 ( statement because the spare proces-) 382.64 370.14 P
(sor may or may not have failed before reconfiguration.) 87 357.14 T
(The) 105 338.1 T
4 F
(DEATHIF) 124.86 338.1 T
2 F
( statement describes the) 171.05 338.1 T
5 F
(death) 278.59 338.1 T
2 F
( condition for the model:) 303.03 338.1 T
2 12 Q
(\245) 99 319.05 T
2 11 Q
(System failure occurs unless a majority of the active processors are nonfaulty) 111 319.05 T
(.) 450.91 319.05 T
-0.27 (By changing the value of) 105 302 P
4 F
-0.65 (N_SPARES) 216.99 302 P
2 F
-0.27 (, a similar system with a different number of initial spares may) 269.79 302 P
(be modeled.) 87 289 T
-0.25 (The following dialog, consisting of an execution of ASSIST followed by an execution of SURE will) 105 269.95 P
(process the input file:) 87 256.95 T
4 9.5 Q
(% assist triadcold) 87 238.91 T
-0.53 (ASSIST VERSION 7.1                                      NASA Langley Research Center) 87 227.36 P
(PARSING TIME = 0.18 sec.) 87 215.86 T
(generating SURE model file...) 87 204.36 T
(RULE GENERATION TIME = 0.02 sec.) 87 192.86 T
(NUMBER OF STATES IN MODEL = 13) 87 181.36 T
(NUMBER OF TRANSITIONS IN MODEL = 24) 87 169.86 T
(6 DEATH STATES AGGREGATED INTO STATE 1) 87 158.36 T
(% sure) 87 141.81 T
(  SURE V7.9.8   NASA Langley Research Center) 87 125.26 T
(  1? read0 triadcold;) 87 108.71 T
(       0.03 SECS. TO READ MODEL FILE) 87 92.17 T
( 37? run;) 87 80.67 T
( MODEL FILE = triadcold.mod                 SURE V7.9.8 14 Sep 93  17:11:45) 87 69.17 T
300.38 412.99 314.73 430.16 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 301.38 421.29 T
5 8.5 Q
(P) 307.54 417.11 T
0 0 612 792 C
303.74 395.94 318.1 413.11 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 305.21 404.24 T
5 8.5 Q
(S) 311.38 400.06 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "35" 40
%%Page: "36" 41
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(36) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(                LOWERBOUND    UPPERBOUND     COMMENTS                 RUN #1) 87 719.67 T
(  -----------   -----------   -----------    ----------------------------------) 87 708.17 T
(                1.66645e-10) 87 696.67 T
(1.69427e-10    <prune 1.2e-19>) 256.24 696.67 T
( 25 PATH\050S\051 TO DEATH STATES 2 PATH\050S\051 PRUNED) 87 678.1 T
( HIGHEST PRUNE LEVEL =  2.03357e-17) 87 666.6 T
( 0.000 SECS. CPU TIME UTILIZED) 87 655.1 T
( 38? exit;) 87 643.6 T
2 11 Q
(The semi-Markov model is shown in figures 9 and 10.) 105 624.04 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(The log file that is generated from executing ASSIST on this input file is) 105 602.98 T
4 9.5 Q
-0.41 (triadcold.ast    3/21/94 2:44:32 p.m.          ASSIST 7.1, NASA LaRC        Page 1) 87 582.92 P
(\0500001\051: \050*  TRIAD WITH COLD SPARES  *\051) 87 564.35 T
(\0500002\051:) 87 552.85 T
(\0500003\051: N_PROCS = 3;            \050* Number of active processors *\051) 87 541.35 T
(\0500004\051: N_SPARES = 2;           \050* Number of spare processors *\051) 87 529.85 T
(\0500005\051: LAMBDA_P = 1E-4;        \050* Failure rate of active processors *\051) 87 518.35 T
(\0500006\051: LAMBDA_S = 1E-5;        \050* Failure rate of spare processors *\051) 87 506.85 T
(\0500007\051: DELTA = 3.6E3;          \050* Reconfiguration rate *\051) 87 495.35 T
(\0500008\051:) 87 483.85 T
(\0500009\051: SPACE = \050NP: 0..N_PROCS,        \050* Number of active processors *\051) 87 472.35 T
(\0500010\051:          NFP: 0..N_PROCS,       \050* Number of failed active processors *\051) 87 460.85 T
(\0500011\051:          NS: 0..N_SPARES,       \050* Number of spare processors *\051) 87 449.35 T
(\0500012\051:          NFS: 0..N_SPARES\051;     \050* Number of failed spare processors *\051) 87 437.85 T
(\0500013\051:) 87 426.35 T
(\0500014\051: START = \050N_PROCS, 0, N_SPARES, 0\051;) 87 414.85 T
(\0500015\051:) 87 403.35 T
(\0500016\051: DEATHIF 2 * NFP >= NP;) 87 391.85 T
(\0500017\051:) 87 380.35 T
(\0500018\051: IF NP > NFP TRANTO NFP = NFP+1 BY \050NP-NFP\051*LAMBDA_P;) 87 368.85 T
(\0500019\051:    \050* Active processor failure *\051) 87 357.35 T
(\0500020\051:) 87 345.85 T
(\0500021\051: IF NS > NFS TRANTO NFS = NFS+1 BY NS*LAMBDA_S;) 87 334.35 T
(\0500022\051:    \050* Spare processor failure *\051) 87 322.85 T
(\0500023\051:) 87 311.35 T
(\0500024\051: IF \050NFP > 0 AND NS > 0\051 THEN) 87 299.85 T
(\0500025\051:    IF NS > NFS   \050* Replace failed processor with working spare *\051) 87 288.35 T
(\0500026\051:       TRANTO \050NP, NFP-1, NS-1, NFS\051) 87 276.85 T
(\0500027\051:              BY FAST \0501-\050NFS/NS\051\051*NFP*DELTA;) 87 265.35 T
(\0500028\051:    IF NFS > 0    \050* Replace failed processor with failed spare *\051) 87 253.85 T
(\0500029\051:       TRANTO \050NP, NFP, NS-1, NFS-1\051) 87 242.35 T
(\0500030\051:              BY FAST \050NFS/NS\051*NFP*DELTA;) 87 230.85 T
(\0500031\051: ENDIF;) 87 219.35 T
(PARSING TIME = 0.21 sec.) 87 200.79 T
(RULE GENERATION TIME = 0.02 sec.) 87 189.29 T
(NUMBER OF STATES IN MODEL = 13) 87 177.79 T
(NUMBER OF TRANSITIONS IN MODEL = 24) 87 166.29 T
(6 DEATH STATES AGGREGATED INTO STATE 1) 87 154.79 T
2 11 Q
(The model file generated by ASSIST for this example is) 105 135.23 T
4 9.5 Q
(N_PROCS = 3;) 87 115.17 T
(N_SPARES = 2;) 87 103.67 T
(LAMBDA_P = 1E-4;) 87 92.17 T
(LAMBDA_S = 1E-5;) 87 80.67 T
(DELTA = 3.6E3;) 87 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "36" 41
%%Page: "37" 42
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(37) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
(Figure 9.  Semi-Markov triad model with cold spares \050ASSIST state numbers\051.) 173.14 100.42 T
87 106.42 543 696 C
132 117.42 498 696 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 132 109 486 687 354 578 138 118.43 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/fig4.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (fig4.ps)
%%CreationDate: (3/9/95) (11:01 AM)
%%BoundingBox: 132 109 486 687
%%DocumentProcessColors: Black
%%DocumentFonts: Symbol
%%+ Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Symbol
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 0.75 w 4 M []0 d
%AI3_Note:
0 D
154.0011 651.2707 m
162.9634 651.2707 170.2291 658.5363 170.2291 667.4986 c
170.2291 676.4609 162.9634 683.7266 154.0011 683.7266 c
145.0388 683.7266 137.7731 676.4609 137.7731 667.4986 c
137.7731 658.5363 145.0388 651.2707 154.0011 651.2707 c
s
154.0011 667.4986 m
S
U
170.201 667.4986 m
270.1003 667.4986 l
S
0 To
0.9 0 0 0.9 154.0011 664.7986 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
10 0 Tl
0 Tc
0 Tw
(3,0,2,0) Tx 
(\r) TX 
TO
u
272.527 667.4986 m
266.6308 666.1095 l
267.8965 667.4986 L
266.6308 668.8878 l
272.527 667.4986 L
f
U
u
0 R
0 G
0.75 w
289.0002 651.2707 m
297.9625 651.2707 305.2281 658.5363 305.2281 667.4986 c
305.2281 676.4609 297.9625 683.7266 289.0002 683.7266 c
280.0379 683.7266 272.7722 676.4609 272.7722 667.4986 c
272.7722 658.5363 280.0379 651.2707 289.0002 651.2707 c
s
289.0002 667.4986 m
S
U
305.2001 667.4986 m
403.7494 667.4986 l
S
0 To
0.9 0 0 0.9 289.0002 664.7986 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,0,2,1) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 651.2707 m
431.6116 651.2707 438.8772 658.5363 438.8772 667.4986 c
438.8772 676.4609 431.6116 683.7266 422.6493 683.7266 c
413.6869 683.7266 406.4213 676.4609 406.4213 667.4986 c
406.4213 658.5363 413.6869 651.2707 422.6493 651.2707 c
s
422.6493 667.4986 m
S
U
0 To
0.9 0 0 0.9 422.6493 664.7986 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,0,2,2) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 221.0506 672.8986 0 Tp
TP
-7.7441 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 355.5997 672.8986 0 Tp
TP
-7.7441 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
406.1761 667.4986 m
400.2799 666.1095 l
401.5456 667.4986 L
400.2799 668.8878 l
406.1761 667.4986 L
f
U
0 R
0 G
0.75 w
154.0011 651.2987 m
154.0011 618.449 l
S
u
0 O
0 g
1 w
154.0011 616.416 m
152.6119 622.3122 l
154.0011 621.0465 L
155.3902 622.3122 l
154.0011 616.416 L
f
U
0 R
0 G
0.75 w
289.0002 651.2987 m
289.0002 618.449 l
S
u
0 O
0 g
1 w
289.0002 616.416 m
287.611 622.3122 l
289.0002 621.0465 L
290.3893 622.3122 l
289.0002 616.416 L
f
U
0 R
0 G
0.75 w
422.6493 651.2987 m
422.6493 618.449 l
S
u
0 O
0 g
1 w
422.6493 616.416 m
421.2601 622.3122 l
422.6493 621.0465 L
424.0384 622.3122 l
422.6493 616.416 L
f
U
u
0 R
0 G
0.75 w
154.0011 583.9961 m
162.9634 583.9961 170.2291 591.2618 170.2291 600.2241 c
170.2291 609.1864 162.9634 616.452 154.0011 616.452 c
145.0388 616.452 137.7731 609.1864 137.7731 600.2241 c
137.7731 591.2618 145.0388 583.9961 154.0011 583.9961 c
s
154.0011 600.2241 m
S
U
170.201 600.2241 m
270.1003 600.2241 l
S
0 To
0.9 0 0 0.9 154.0011 597.5241 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,1,2,0) Tx 
(\r) TX 
TO
u
272.527 600.2241 m
266.6308 598.8349 l
267.8965 600.2241 L
266.6308 601.6132 l
272.527 600.2241 L
f
U
u
0 R
0 G
0.75 w
289.0002 583.9961 m
297.9625 583.9961 305.2281 591.2618 305.2281 600.2241 c
305.2281 609.1864 297.9625 616.452 289.0002 616.452 c
280.0379 616.452 272.7722 609.1864 272.7722 600.2241 c
272.7722 591.2618 280.0379 583.9961 289.0002 583.9961 c
s
289.0002 600.2241 m
S
U
403.7494 600.2241 m
305.2001 600.2241 l
S
0 To
0.9 0 0 0.9 289.0002 597.5241 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,1,2,1) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 583.9961 m
431.6116 583.9961 438.8772 591.2618 438.8772 600.2241 c
438.8772 609.1864 431.6116 616.452 422.6493 616.452 c
413.6869 616.452 406.4213 609.1864 406.4213 600.2241 c
406.4213 591.2618 413.6869 583.9961 422.6493 583.9961 c
s
422.6493 600.2241 m
S
U
0 To
0.9 0 0 0.9 422.6493 597.5241 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,1,2,2) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 221.0506 605.624 0 Tp
TP
-7.7441 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 355.5997 605.624 0 Tp
TP
-7.7441 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
406.1761 600.2241 m
400.2799 598.8349 l
401.5456 600.2241 L
400.2799 601.6132 l
406.1761 600.2241 L
f
U
0 R
0 G
0.75 w
154.0011 584.0242 m
154.0011 551.1744 l
S
u
0 O
0 g
1 w
154.0011 549.1415 m
152.6119 555.0376 l
154.0011 553.772 L
155.3902 555.0376 l
154.0011 549.1415 L
f
U
0 R
0 G
0.75 w
289.0002 584.0242 m
289.0002 551.1744 l
S
u
0 O
0 g
1 w
289.0002 549.1415 m
287.611 555.0376 l
289.0002 553.772 L
290.3893 555.0376 l
289.0002 549.1415 L
f
U
0 R
0 G
0.75 w
422.6493 584.0242 m
422.6493 551.1744 l
S
u
0 O
0 g
1 w
422.6493 549.1415 m
421.2601 555.0376 l
422.6493 553.772 L
424.0384 555.0376 l
422.6493 549.1415 L
f
U
u
0 R
0 G
0.75 w
154.0011 516.4966 m
162.9634 516.4966 170.2291 523.7622 170.2291 532.7245 c
170.2291 541.6869 162.9634 548.9525 154.0011 548.9525 c
145.0388 548.9525 137.7731 541.6869 137.7731 532.7245 c
137.7731 523.7622 145.0388 516.4966 154.0011 516.4966 c
s
154.0011 532.7245 m
S
U
0 To
0.9 0 0 0.9 154.0011 534.5245 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,2,2,0\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
289.0002 516.4966 m
297.9625 516.4966 305.2281 523.7622 305.2281 532.7245 c
305.2281 541.6869 297.9625 548.9525 289.0002 548.9525 c
280.0379 548.9525 272.7722 541.6869 272.7722 532.7245 c
272.7722 523.7622 280.0379 516.4966 289.0002 516.4966 c
s
289.0002 532.7245 m
S
U
0 To
0.9 0 0 0.9 289.0002 534.5245 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,2,2,1\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 516.4966 m
431.6116 516.4966 438.8772 523.7622 438.8772 532.7245 c
438.8772 541.6869 431.6116 548.9525 422.6493 548.9525 c
413.6869 548.9525 406.4213 541.6869 406.4213 532.7245 c
406.4213 523.7622 413.6869 516.4966 422.6493 516.4966 c
s
422.6493 532.7245 m
S
U
0 To
0.9 0 0 0.9 422.6493 534.5245 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,2,2,2\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 164.801 634.1988 0 Tp
TP
-8.2983 0 Td
0 Tr
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 299.3501 634.1988 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 433.4492 634.1988 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 164.801 567.1493 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 299.3501 567.1493 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 433.4492 567.1493 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
289.0002 450.347 m
297.9625 450.347 305.2281 457.6127 305.2281 466.575 c
305.2281 475.5373 297.9625 482.8029 289.0002 482.8029 c
280.0379 482.8029 272.7722 475.5373 272.7722 466.575 c
272.7722 457.6127 280.0379 450.347 289.0002 450.347 c
s
289.0002 466.575 m
S
U
305.2001 466.575 m
403.7494 466.575 l
S
0 To
0.9 0 0 0.9 289.0002 463.875 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,0,1,0) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 450.347 m
431.6116 450.347 438.8772 457.6127 438.8772 466.575 c
438.8772 475.5373 431.6116 482.8029 422.6493 482.8029 c
413.6869 482.8029 406.4213 475.5373 406.4213 466.575 c
406.4213 457.6127 413.6869 450.347 422.6493 450.347 c
s
422.6493 466.575 m
S
U
0 To
0.9 0 0 0.9 422.6493 463.875 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,0,1,1) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 355.5997 471.9749 0 Tp
TP
-5.2441 0 Td
0 Tr
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
406.1761 466.575 m
400.2799 465.1858 l
401.5456 466.575 L
400.2799 467.9641 l
406.1761 466.575 L
f
U
0 R
0 G
0.75 w
289.0002 450.3751 m
289.0002 417.5253 l
S
u
0 O
0 g
1 w
289.0002 415.4924 m
287.611 421.3885 l
289.0002 420.1229 L
290.3893 421.3885 l
289.0002 415.4924 L
f
U
0 R
0 G
0.75 w
422.6493 450.3751 m
422.6493 417.5253 l
S
u
0 O
0 g
1 w
422.6493 415.4924 m
421.2601 421.3885 l
422.6493 420.1229 L
424.0384 421.3885 l
422.6493 415.4924 L
f
U
0 To
0.9 0 0 0.9 299.3501 433.5002 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 433.4492 433.5002 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
289.0002 382.96 m
297.9625 382.96 305.2281 390.2256 305.2281 399.1879 c
305.2281 408.1502 297.9625 415.4159 289.0002 415.4159 c
280.0379 415.4159 272.7722 408.1502 272.7722 399.1879 c
272.7722 390.2256 280.0379 382.96 289.0002 382.96 c
s
289.0002 399.1879 m
S
U
0 To
0.9 0 0 0.9 289.0002 396.488 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,1,1,0) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 382.96 m
431.6116 382.96 438.8772 390.2256 438.8772 399.1879 c
438.8772 408.1502 431.6116 415.4159 422.6493 415.4159 c
413.6869 415.4159 406.4213 408.1502 406.4213 399.1879 c
406.4213 390.2256 413.6869 382.96 422.6493 382.96 c
s
422.6493 399.1879 m
S
U
0 To
0.9 0 0 0.9 422.6493 396.488 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,1,1,1) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 355.5997 404.5879 0 Tp
TP
-5.2441 0 Td
0 Tr
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
406.1761 399.1879 m
400.2799 397.7988 l
401.5456 399.1879 L
400.2799 400.5771 l
406.1761 399.1879 L
f
U
0 R
0 G
0.75 w
289.0002 382.988 m
289.0002 350.1383 l
S
u
0 O
0 g
1 w
289.0002 348.1054 m
287.611 354.0015 l
289.0002 352.7358 L
290.3893 354.0015 l
289.0002 348.1054 L
f
U
0 R
0 G
0.75 w
422.6493 382.988 m
422.6493 350.1383 l
S
u
0 O
0 g
1 w
422.6493 348.1054 m
421.2601 354.0015 l
422.6493 352.7358 L
424.0384 354.0015 l
422.6493 348.1054 L
f
U
0 To
0.9 0 0 0.9 299.3501 366.1132 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 433.4492 366.1132 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
289.0002 315.2354 m
297.9625 315.2354 305.2281 322.5011 305.2281 331.4634 c
305.2281 340.4257 297.9625 347.6914 289.0002 347.6914 c
280.0379 347.6914 272.7722 340.4257 272.7722 331.4634 c
272.7722 322.5011 280.0379 315.2354 289.0002 315.2354 c
s
289.0002 331.4634 m
S
U
0 To
0.9 0 0 0.9 289.0002 332.8134 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,2,1,0\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 315.2354 m
431.6116 315.2354 438.8772 322.5011 438.8772 331.4634 c
438.8772 340.4257 431.6116 347.6914 422.6493 347.6914 c
413.6869 347.6914 406.4213 340.4257 406.4213 331.4634 c
406.4213 322.5011 413.6869 315.2354 422.6493 315.2354 c
s
422.6493 331.4634 m
S
U
0 To
0.9 0 0 0.9 422.6493 332.8134 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
(3,2,1,1\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
164.801 588.2992 m
275.6128 478.3874 l
S
u
0 O
0 g
1 w
276.8397 477.1889 m
271.6317 480.2825 l
273.507 480.4037 L
273.5606 482.2821 l
276.8397 477.1889 L
f
U
0 To
0.9 0 0 0.9 220.3757 539.2495 0 Tp
TP
-2.4695 0 Td
0 Tr
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
299.8001 387.1505 m
410.6119 277.2388 l
S
u
0 O
0 g
1 w
411.8388 276.0402 m
406.6308 279.1339 l
408.5061 279.255 L
408.5597 281.1335 l
411.8388 276.0402 L
f
U
0 To
0.9 0 0 0.9 355.3747 338.1009 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 247.5109 m
431.6116 247.5109 438.8772 254.7765 438.8772 263.7389 c
438.8772 272.7012 431.6116 279.9668 422.6493 279.9668 c
413.6869 279.9668 406.4213 272.7012 406.4213 263.7389 c
406.4213 254.7765 413.6869 247.5109 422.6493 247.5109 c
s
422.6493 263.7389 m
S
U
0 To
0.9 0 0 0.9 422.6493 261.0389 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
(3,0,0,0) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
422.6493 247.539 m
422.6493 214.6892 l
S
u
0 O
0 g
1 w
422.6493 212.6563 m
421.2601 218.5524 l
422.6493 217.2868 L
424.0384 218.5524 l
422.6493 212.6563 L
f
U
0 To
0.9 0 0 0.9 433.4492 230.6641 0 Tp
TP
-8.2983 0 Td
0 Tr
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 179.7863 m
431.6116 179.7863 438.8772 187.052 438.8772 196.0143 c
438.8772 204.9766 431.6116 212.2423 422.6493 212.2423 c
413.6869 212.2423 406.4213 204.9766 406.4213 196.0143 c
406.4213 187.052 413.6869 179.7863 422.6493 179.7863 c
s
422.6493 196.0143 m
S
U
0 To
0.9 0 0 0.9 422.6493 193.3143 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,1,0,0) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
422.6493 179.8144 m
422.6493 146.9647 l
S
u
0 O
0 g
1 w
422.6493 144.9317 m
421.2601 150.8279 l
422.6493 149.5622 L
424.0384 150.8279 l
422.6493 144.9317 L
f
U
0 To
0.9 0 0 0.9 433.4492 162.9395 0 Tp
TP
-8.2983 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
422.6493 112.0618 m
431.6116 112.0618 438.8772 119.3274 438.8772 128.2898 c
438.8772 137.2521 431.6116 144.5177 422.6493 144.5177 c
413.6869 144.5177 406.4213 137.2521 406.4213 128.2898 c
406.4213 119.3274 413.6869 112.0618 422.6493 112.0618 c
s
422.6493 128.2898 m
S
U
0 To
0.9 0 0 0.9 422.6493 129.4148 0 Tp
TP
-13.75 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3,2,0,0\r) Tx 
2.9224 -10 Td
(death) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
300.0251 588.2992 m
409.8806 479.2874 l
S
u
0 O
0 g
1 w
411.1076 478.0889 m
405.8996 481.1825 l
407.7749 481.3036 L
407.8284 483.1821 l
411.1076 478.0889 L
f
U
0 R
0 G
0.75 w
315.325 600.2153 m
324.1116 600.2153 331.2348 593.0921 331.2348 584.3054 c
331.2348 415.1066 l
331.2348 406.3199 324.1116 399.1968 315.325 399.1968 c
S
305.2001 399.1879 m
403.7494 399.1879 l
S
438.8492 399.1879 m
449.4241 399.1968 l
458.2107 399.1968 465.3339 406.3199 465.3339 415.1066 c
465.3339 584.3054 l
465.3339 593.0921 458.2107 600.2153 449.4241 600.2153 c
438.8492 600.2153 l
S
438.8492 195.9018 m
449.4241 195.9106 l
458.2107 195.9106 465.3339 203.0338 465.3339 211.8205 c
465.3339 383.2693 l
465.3339 392.0559 458.2107 399.1791 449.4241 399.1791 c
438.8492 399.1791 l
S
0 To
0.9 0 0 0.9 344.5748 495.1498 0 Tp
TP
-2.4695 0 Td
0 Tr
0 O
0 g
1 w
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 473.2739 495.1498 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 473.2739 296.2511 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 337.5998 499.8748 0 Tp
TP
-2.5 0 Td
0 Tr
/_Times-Roman 10 Tf
(1\r) Tx 
T*
(2) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
335.1249 498.0748 m
340.7498 498.0748 l
S
0 To
0.9 0 0 0.9 362.1247 541.0495 0 Tp
TP
-2.4695 0 Td
0 Tr
0 O
0 g
1 w
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 355.1497 545.7744 0 Tp
TP
-2.5 0 Td
0 Tr
/_Times-Roman 10 Tf
(1\r) Tx 
T*
(2) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
352.6748 543.9745 m
358.2997 543.9745 l
S
142.0762 532.4995 m
165.926 532.4995 l
S
276.8503 532.4995 m
300.7001 532.4995 l
S
410.7244 532.4995 m
434.5742 532.4995 l
S
276.8503 330.7884 m
300.7001 330.7884 l
S
410.7244 330.7884 m
434.5742 330.7884 l
S
410.7244 127.6148 m
434.5742 127.6148 l
S
u
0 O
0 g
1 w
331.2502 427.1415 m
329.861 433.0376 l
331.2502 431.772 L
332.6393 433.0376 l
331.2502 427.1415 L
f
U
u
465.3752 427.1415 m
463.986 433.0376 l
465.3752 431.772 L
466.7643 433.0376 l
465.3752 427.1415 L
f
U
u
465.3752 231.1415 m
463.986 237.0376 l
465.3752 235.772 L
466.7643 237.0376 l
465.3752 231.1415 L
f
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
87 106.42 543 696 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "37" 42
%%Page: "38" 43
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(38) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 9 Q
(Figure 10.  Semi-Markov triad model with cold spares \050SURE state numbers\051.) 174.39 99.86 T
87 105.86 543 696 C
133.5 116.86 496.5 696 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 132 111 483 688 351 577 139.5 118.57 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/fig5.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (fig5.ps)
%%CreationDate: (3/9/95) (11:03 AM)
%%BoundingBox: 132 111 483 688
%%DocumentProcessColors: Black
%%DocumentFonts: Symbol
%%+ Times-Italic
%%+ Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 105.5 70.5 506.5 721.5
%AI3_TemplateFile: DiamondDrive510::21322:t-5
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Symbol
%%IncludeFont: Times-Italic
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Symbol Symbol
[/_Symbol/Symbol 0 0 0 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
u
0 R
0 G
0 i 0 J 0 j 0.75 w 4 M []0 d
%AI3_Note:
0 D
151.6011 652.9204 m
160.5634 652.9204 167.8291 660.186 167.8291 669.1483 c
167.8291 678.1106 160.5634 685.3763 151.6011 685.3763 c
142.6388 685.3763 135.3732 678.1106 135.3732 669.1483 c
135.3732 660.186 142.6388 652.9204 151.6011 652.9204 c
s
151.6011 669.1483 m
S
U
167.801 669.1483 m
267.7003 669.1483 l
S
0 To
0.9 0 0 0.9 151.6011 666.4483 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
10 0 Tl
0 Tc
0 Tw
(2) Tx 
(\r) TX 
TO
u
270.127 669.1483 m
264.2309 667.7592 l
265.4965 669.1483 L
264.2309 670.5375 l
270.127 669.1483 L
f
U
u
0 R
0 G
0.75 w
286.6002 652.9204 m
295.5625 652.9204 302.8282 660.186 302.8282 669.1483 c
302.8282 678.1106 295.5625 685.3763 286.6002 685.3763 c
277.6379 685.3763 270.3722 678.1106 270.3722 669.1483 c
270.3722 660.186 277.6379 652.9204 286.6002 652.9204 c
s
286.6002 669.1483 m
S
U
302.8001 669.1483 m
401.3494 669.1483 l
S
0 To
0.9 0 0 0.9 286.6002 666.4483 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
(4) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 652.9204 m
429.2116 652.9204 436.4773 660.186 436.4773 669.1483 c
436.4773 678.1106 429.2116 685.3763 420.2493 685.3763 c
411.287 685.3763 404.0213 678.1106 404.0213 669.1483 c
404.0213 660.186 411.287 652.9204 420.2493 652.9204 c
s
420.2493 669.1483 m
S
U
0 To
0.9 0 0 0.9 420.2493 666.4483 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
(7) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 218.6507 674.5483 0 Tp
TP
-7.7441 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 353.1998 674.5483 0 Tp
TP
-7.7441 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
403.7761 669.1483 m
397.88 667.7592 l
399.1456 669.1483 L
397.88 670.5375 l
403.7761 669.1483 L
f
U
0 R
0 G
0.75 w
151.6011 652.9484 m
151.6011 620.0987 l
S
u
0 O
0 g
1 w
151.6011 618.0657 m
150.212 623.9619 l
151.6011 622.6962 L
152.9903 623.9619 l
151.6011 618.0657 L
f
U
0 R
0 G
0.75 w
286.6002 652.9484 m
286.6002 620.0987 l
S
u
0 O
0 g
1 w
286.6002 618.0657 m
285.2111 623.9619 l
286.6002 622.6962 L
287.9893 623.9619 l
286.6002 618.0657 L
f
U
0 R
0 G
0.75 w
420.2493 652.9484 m
420.2493 620.0987 l
S
u
0 O
0 g
1 w
420.2493 618.0657 m
418.8602 623.9619 l
420.2493 622.6962 L
421.6384 623.9619 l
420.2493 618.0657 L
f
U
u
0 R
0 G
0.75 w
151.6011 585.6458 m
160.5634 585.6458 167.8291 592.9115 167.8291 601.8738 c
167.8291 610.8361 160.5634 618.1017 151.6011 618.1017 c
142.6388 618.1017 135.3732 610.8361 135.3732 601.8738 c
135.3732 592.9115 142.6388 585.6458 151.6011 585.6458 c
s
151.6011 601.8738 m
S
U
167.801 601.8738 m
267.7003 601.8738 l
S
0 To
0.9 0 0 0.9 151.6011 599.1738 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
(\r) TX 
TO
u
270.127 601.8738 m
264.2309 600.4846 l
265.4965 601.8738 L
264.2309 603.2629 l
270.127 601.8738 L
f
U
u
0 R
0 G
0.75 w
286.6002 585.6458 m
295.5625 585.6458 302.8282 592.9115 302.8282 601.8738 c
302.8282 610.8361 295.5625 618.1017 286.6002 618.1017 c
277.6379 618.1017 270.3722 610.8361 270.3722 601.8738 c
270.3722 592.9115 277.6379 585.6458 286.6002 585.6458 c
s
286.6002 601.8738 m
S
U
401.3494 601.8738 m
302.8001 601.8738 l
S
0 To
0.9 0 0 0.9 286.6002 599.1738 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
(6) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 585.6458 m
429.2116 585.6458 436.4773 592.9115 436.4773 601.8738 c
436.4773 610.8361 429.2116 618.1017 420.2493 618.1017 c
411.287 618.1017 404.0213 610.8361 404.0213 601.8738 c
404.0213 592.9115 411.287 585.6458 420.2493 585.6458 c
s
420.2493 601.8738 m
S
U
0 To
0.9 0 0 0.9 420.2493 599.1738 0 Tp
TP
-5 0 Td
0 Tr
0 O
0 g
1 w
(10) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 218.6507 607.2737 0 Tp
TP
-7.7441 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 353.1998 607.2737 0 Tp
TP
-7.7441 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
403.7761 601.8738 m
397.88 600.4846 l
399.1456 601.8738 L
397.88 603.2629 l
403.7761 601.8738 L
f
U
0 R
0 G
0.75 w
151.6011 585.6739 m
151.6011 552.8241 l
S
u
0 O
0 g
1 w
151.6011 550.7912 m
150.212 556.6873 l
151.6011 555.4217 L
152.9903 556.6873 l
151.6011 550.7912 L
f
U
0 R
0 G
0.75 w
286.6002 585.6739 m
286.6002 552.8241 l
S
u
0 O
0 g
1 w
286.6002 550.7912 m
285.2111 556.6873 l
286.6002 555.4217 L
287.9893 556.6873 l
286.6002 550.7912 L
f
U
0 R
0 G
0.75 w
420.2493 585.6739 m
420.2493 552.8241 l
S
u
0 O
0 g
1 w
420.2493 550.7912 m
418.8602 556.6873 l
420.2493 555.4217 L
421.6384 556.6873 l
420.2493 550.7912 L
f
U
u
0 R
0 G
0.75 w
151.6011 518.1463 m
160.5634 518.1463 167.8291 525.4119 167.8291 534.3742 c
167.8291 543.3366 160.5634 550.6022 151.6011 550.6022 c
142.6388 550.6022 135.3732 543.3366 135.3732 534.3742 c
135.3732 525.4119 142.6388 518.1463 151.6011 518.1463 c
s
151.6011 534.3742 m
S
U
0 To
0.9 0 0 0.9 151.6011 532.1242 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
286.6002 518.1463 m
295.5625 518.1463 302.8282 525.4119 302.8282 534.3742 c
302.8282 543.3366 295.5625 550.6022 286.6002 550.6022 c
277.6379 550.6022 270.3722 543.3366 270.3722 534.3742 c
270.3722 525.4119 277.6379 518.1463 286.6002 518.1463 c
s
286.6002 534.3742 m
S
U
0 To
0.9 0 0 0.9 286.6002 532.1242 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 518.1463 m
429.2116 518.1463 436.4773 525.4119 436.4773 534.3742 c
436.4773 543.3366 429.2116 550.6022 420.2493 550.6022 c
411.287 550.6022 404.0213 543.3366 404.0213 534.3742 c
404.0213 525.4119 411.287 518.1463 420.2493 518.1463 c
s
420.2493 534.3742 m
S
U
0 To
0.9 0 0 0.9 420.2493 532.1242 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
(death) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 162.4011 635.8486 0 Tp
TP
-8.2983 0 Td
0 Tr
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 296.9501 635.8486 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 431.0492 635.8486 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 162.4011 568.799 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 296.9501 568.799 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 431.0492 568.799 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
286.6002 451.9967 m
295.5625 451.9967 302.8282 459.2624 302.8282 468.2247 c
302.8282 477.187 295.5625 484.4526 286.6002 484.4526 c
277.6379 484.4526 270.3722 477.187 270.3722 468.2247 c
270.3722 459.2624 277.6379 451.9967 286.6002 451.9967 c
s
286.6002 468.2247 m
S
U
302.8001 468.2247 m
401.3494 468.2247 l
S
0 To
0.9 0 0 0.9 286.6002 465.5247 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(5) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 451.9967 m
429.2116 451.9967 436.4773 459.2624 436.4773 468.2247 c
436.4773 477.187 429.2116 484.4526 420.2493 484.4526 c
411.287 484.4526 404.0213 477.187 404.0213 468.2247 c
404.0213 459.2624 411.287 451.9967 420.2493 451.9967 c
s
420.2493 468.2247 m
S
U
0 To
0.9 0 0 0.9 420.2493 465.5247 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
(9) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 353.1998 473.6246 0 Tp
TP
-5.2441 0 Td
0 Tr
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
403.7761 468.2247 m
397.88 466.8356 l
399.1456 468.2247 L
397.88 469.6138 l
403.7761 468.2247 L
f
U
0 R
0 G
0.75 w
286.6002 452.0248 m
286.6002 419.175 l
S
u
0 O
0 g
1 w
286.6002 417.1421 m
285.2111 423.0382 l
286.6002 421.7726 L
287.9893 423.0382 l
286.6002 417.1421 L
f
U
0 R
0 G
0.75 w
420.2493 452.0248 m
420.2493 419.175 l
S
u
0 O
0 g
1 w
420.2493 417.1421 m
418.8602 423.0382 l
420.2493 421.7726 L
421.6384 423.0382 l
420.2493 417.1421 L
f
U
0 To
0.9 0 0 0.9 296.9501 435.1499 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 431.0492 435.1499 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
286.6002 384.6097 m
295.5625 384.6097 302.8282 391.8753 302.8282 400.8376 c
302.8282 409.8 295.5625 417.0656 286.6002 417.0656 c
277.6379 417.0656 270.3722 409.8 270.3722 400.8376 c
270.3722 391.8753 277.6379 384.6097 286.6002 384.6097 c
s
286.6002 400.8376 m
S
U
0 To
0.9 0 0 0.9 286.6002 398.1377 0 Tp
TP
-2.5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(8) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 384.6097 m
429.2116 384.6097 436.4773 391.8753 436.4773 400.8376 c
436.4773 409.8 429.2116 417.0656 420.2493 417.0656 c
411.287 417.0656 404.0213 409.8 404.0213 400.8376 c
404.0213 391.8753 411.287 384.6097 420.2493 384.6097 c
s
420.2493 400.8376 m
S
U
0 To
0.9 0 0 0.9 420.2493 398.1377 0 Tp
TP
-5 0 Td
0 Tr
0 O
0 g
1 w
(12) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 353.1998 406.2376 0 Tp
TP
-5.2441 0 Td
0 Tr
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(S) Tx 
(\r) TX 
TO
u
403.7761 400.8376 m
397.88 399.4485 l
399.1456 400.8376 L
397.88 402.2268 l
403.7761 400.8376 L
f
U
0 R
0 G
0.75 w
286.6002 384.6378 m
286.6002 351.788 l
S
u
0 O
0 g
1 w
286.6002 349.7551 m
285.2111 355.6512 l
286.6002 354.3855 L
287.9893 355.6512 l
286.6002 349.7551 L
f
U
0 R
0 G
0.75 w
420.2493 384.6378 m
420.2493 351.788 l
S
u
0 O
0 g
1 w
420.2493 349.7551 m
418.8602 355.6512 l
420.2493 354.3855 L
421.6384 355.6512 l
420.2493 349.7551 L
f
U
0 To
0.9 0 0 0.9 296.9501 367.7629 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 431.0492 367.7629 0 Tp
TP
-8.2983 0 Td
0 Tr
/_Times-Roman 10 Tf
0 Ts
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
286.6002 316.8851 m
295.5625 316.8851 302.8282 324.1508 302.8282 333.1131 c
302.8282 342.0754 295.5625 349.3411 286.6002 349.3411 c
277.6379 349.3411 270.3722 342.0754 270.3722 333.1131 c
270.3722 324.1508 277.6379 316.8851 286.6002 316.8851 c
s
286.6002 333.1131 m
S
U
0 To
0.9 0 0 0.9 286.6002 330.8631 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(death) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 316.8851 m
429.2116 316.8851 436.4773 324.1508 436.4773 333.1131 c
436.4773 342.0754 429.2116 349.3411 420.2493 349.3411 c
411.287 349.3411 404.0213 342.0754 404.0213 333.1131 c
404.0213 324.1508 411.287 316.8851 420.2493 316.8851 c
s
420.2493 333.1131 m
S
U
0 To
0.9 0 0 0.9 420.2493 330.8631 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
(death) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
162.4011 589.9489 m
273.2128 480.0371 l
S
u
0 O
0 g
1 w
274.4398 478.8386 m
269.2318 481.9322 l
271.1071 482.0534 L
271.1606 483.9318 l
274.4398 478.8386 L
f
U
0 To
0.9 0 0 0.9 217.9757 540.8992 0 Tp
TP
-2.4695 0 Td
0 Tr
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
297.4001 388.8002 m
408.2119 278.8885 l
S
u
0 O
0 g
1 w
409.4389 277.6899 m
404.2309 280.7836 l
406.1062 280.9047 L
406.1597 282.7832 l
409.4389 277.6899 L
f
U
0 To
0.9 0 0 0.9 352.9748 339.7506 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 249.1606 m
429.2116 249.1606 436.4773 256.4262 436.4773 265.3886 c
436.4773 274.3509 429.2116 281.6165 420.2493 281.6165 c
411.287 281.6165 404.0213 274.3509 404.0213 265.3886 c
404.0213 256.4262 411.287 249.1606 420.2493 249.1606 c
s
420.2493 265.3886 m
S
U
0 To
0.9 0 0 0.9 420.2493 262.6886 0 Tp
TP
-5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
(11) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
420.2493 249.1887 m
420.2493 216.3389 l
S
u
0 O
0 g
1 w
420.2493 214.306 m
418.8602 220.2021 l
420.2493 218.9365 L
421.6384 220.2021 l
420.2493 214.306 L
f
U
0 To
0.9 0 0 0.9 431.0492 232.3138 0 Tp
TP
-8.2983 0 Td
0 Tr
(3) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 181.436 m
429.2116 181.436 436.4773 188.7017 436.4773 197.664 c
436.4773 206.6263 429.2116 213.892 420.2493 213.892 c
411.287 213.892 404.0213 206.6263 404.0213 197.664 c
404.0213 188.7017 411.287 181.436 420.2493 181.436 c
s
420.2493 197.664 m
S
U
0 To
0.9 0 0 0.9 420.2493 194.964 0 Tp
TP
-5 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(13) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
420.2493 181.4641 m
420.2493 148.6144 l
S
u
0 O
0 g
1 w
420.2493 146.5814 m
418.8602 152.4776 l
420.2493 151.2119 L
421.6384 152.4776 l
420.2493 146.5814 L
f
U
0 To
0.9 0 0 0.9 431.0492 164.5892 0 Tp
TP
-8.2983 0 Td
0 Tr
(2) Tx 
/_Symbol 10 Tf
(l) Tx 
/_Times-Italic 10 Tf
-4 Ts
(P) Tx 
(\r) TX 
TO
u
0 R
0 G
0.75 w
420.2493 113.7115 m
429.2116 113.7115 436.4773 120.9772 436.4773 129.9395 c
436.4773 138.9018 429.2116 146.1674 420.2493 146.1674 c
411.287 146.1674 404.0213 138.9018 404.0213 129.9395 c
404.0213 120.9772 411.287 113.7115 420.2493 113.7115 c
s
420.2493 129.9395 m
S
U
0 To
0.9 0 0 0.9 420.2493 127.4645 0 Tp
TP
-10.8276 0 Td
0 Tr
0 O
0 g
1 w
/_Times-Roman 10 Tf
0 Ts
(death) Tx 
(\r) TX 
TO
0 R
0 G
0.75 w
297.6251 589.9489 m
407.4806 480.9371 l
S
u
0 O
0 g
1 w
408.7076 479.7386 m
403.4996 482.8322 l
405.3749 482.9533 L
405.4285 484.8318 l
408.7076 479.7386 L
f
U
0 R
0 G
0.75 w
312.925 601.865 m
321.7117 601.865 328.8348 594.7418 328.8348 585.9551 c
328.8348 416.7563 l
328.8348 407.9696 321.7117 400.8465 312.925 400.8465 c
S
302.8001 400.8376 m
401.3494 400.8376 l
S
436.4492 400.8376 m
447.0241 400.8465 l
455.8108 400.8465 462.9339 407.9696 462.9339 416.7563 c
462.9339 585.9551 l
462.9339 594.7418 455.8108 601.865 447.0241 601.865 c
436.4492 601.865 l
S
436.4492 197.5515 m
447.0241 197.5603 l
455.8108 197.5603 462.9339 204.6835 462.9339 213.4702 c
462.9339 384.919 l
462.9339 393.7056 455.8108 400.8288 447.0241 400.8288 c
436.4492 400.8288 l
S
0 To
0.9 0 0 0.9 342.1748 496.7995 0 Tp
TP
-2.4695 0 Td
0 Tr
0 O
0 g
1 w
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 470.874 496.7995 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 470.874 297.9008 0 Tp
TP
-2.4695 0 Td
0 Tr
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 335.1999 501.5245 0 Tp
TP
-2.5 0 Td
0 Tr
/_Times-Roman 10 Tf
(1\r) Tx 
T*
(2) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
332.7249 499.7245 m
338.3499 499.7245 l
S
0 To
0.9 0 0 0.9 359.7247 542.6992 0 Tp
TP
-2.4695 0 Td
0 Tr
0 O
0 g
1 w
/_Symbol 10 Tf
(d) Tx 
(\r) TX 
TO
0 To
0.9 0 0 0.9 352.7498 547.4241 0 Tp
TP
-2.5 0 Td
0 Tr
/_Times-Roman 10 Tf
(1\r) Tx 
T*
(2) Tx 
(\r) TX 
TO
0 R
0 G
0.5 w
350.2748 545.6242 m
355.8997 545.6242 l
S
u
0 O
0 g
1 w
328.7922 428.802 m
327.403 434.6981 l
328.7922 433.4324 L
330.1813 434.6981 l
328.7922 428.802 L
f
U
u
462.9172 428.7395 m
461.528 434.6356 l
462.9172 433.3699 L
464.3063 434.6356 l
462.9172 428.7395 L
f
U
u
462.9797 232.8645 m
461.5905 238.7606 l
462.9797 237.4949 L
464.3688 238.7606 l
462.9797 232.8645 L
f
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
87 105.86 543 696 C
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "38" 43
%%Page: "39" 44
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(39) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(     2\050* 3,0,2,0 *\051,     3\050* 3,1,2,0 *\051        = \0503-0\051*LAMBDA_P;) 87 719.67 T
(     2\050* 3,0,2,0 *\051,     4\050* 3,0,2,1 *\051        = 2*LAMBDA_S;) 87 708.17 T
(     3\050* 3,1,2,0 *\051,     5\050* 3,0,1,0 *\051        = FAST \0501-\0500/2\051\051*1*DELTA;) 87 696.67 T
(     3\050* 3,1,2,0 *\051,     1\050* 3,2,2,0 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 685.17 T
(     3\050* 3,1,2,0 *\051,     6\050* 3,1,2,1 *\051        = 2*LAMBDA_S;) 87 673.67 T
(     4\050* 3,0,2,1 *\051,     6\050* 3,1,2,1 *\051        = \0503-0\051*LAMBDA_P;) 87 662.17 T
(     4\050* 3,0,2,1 *\051,     7\050* 3,0,2,2 *\051        = 2*LAMBDA_S;) 87 650.67 T
(     5\050* 3,0,1,0 *\051,     8\050* 3,1,1,0 *\051        = \0503-0\051*LAMBDA_P;) 87 639.17 T
(     5\050* 3,0,1,0 *\051,     9\050* 3,0,1,1 *\051        = 1*LAMBDA_S;) 87 627.67 T
(     6\050* 3,1,2,1 *\051,     9\050* 3,0,1,1 *\051        = FAST \0501-\0501/2\051\051*1*DELTA;) 87 616.17 T
(     6\050* 3,1,2,1 *\051,     8\050* 3,1,1,0 *\051        = FAST \0501/2\051*1*DELTA;) 87 604.67 T
(     6\050* 3,1,2,1 *\051,     1\050* 3,2,2,1 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 593.17 T
(     6\050* 3,1,2,1 *\051,    10\050* 3,1,2,2 *\051        = 2*LAMBDA_S;) 87 581.67 T
(     7\050* 3,0,2,2 *\051,    10\050* 3,1,2,2 *\051        = \0503-0\051*LAMBDA_P;) 87 570.17 T
(     8\050* 3,1,1,0 *\051,    11\050* 3,0,0,0 *\051        = FAST \0501-\0500/1\051\051*1*DELTA;) 87 558.67 T
(     8\050* 3,1,1,0 *\051,     1\050* 3,2,1,0 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 547.17 T
(     8\050* 3,1,1,0 *\051,    12\050* 3,1,1,1 *\051        = 1*LAMBDA_S;) 87 535.67 T
(     9\050* 3,0,1,1 *\051,    12\050* 3,1,1,1 *\051        = \0503-0\051*LAMBDA_P;) 87 524.17 T
(    10\050* 3,1,2,2 *\051,    12\050* 3,1,1,1 *\051        = FAST \0502/2\051*1*DELTA;) 87 512.67 T
(    10\050* 3,1,2,2 *\051,     1\050* 3,2,2,2 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 501.17 T
(    11\050* 3,0,0,0 *\051,    13\050* 3,1,0,0 *\051        = \0503-0\051*LAMBDA_P;) 87 489.67 T
(    12\050* 3,1,1,1 *\051,    13\050* 3,1,0,0 *\051        = FAST \0501/1\051*1*DELTA;) 87 478.17 T
(    12\050* 3,1,1,1 *\051,     1\050* 3,2,1,1 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 466.67 T
(    13\050* 3,1,0,0 *\051,     1\050* 3,2,0,0 DEATH  *\051 = \0503-1\051*LAMBDA_P;) 87 455.17 T
(\050* NUMBER OF STATES IN MODEL = 13 *\051) 87 434.74 T
(\050* NUMBER OF TRANSITIONS IN MODEL = 24 *\051) 87 423.24 T
(\050* 6 DEATH STATES AGGREGATED INTO STATE 1 *\051) 87 411.74 T
3 10.5 Q
(16.2. Many T) 105 383.64 T
(riads W) 163.73 383.64 T
(ith Pool of Spar) 199.42 383.64 T
(es) 269.52 383.64 T
2 11 Q
1.13 (The example above can be expanded to model a system with several triads and a pool of spares) 105 361.88 P
0.2 (using array state-space variables.  If two or more processors in an active triad fail, the system fails.  As) 87 348.88 P
-0.21 (long as spares are available, a faulty processor in a triad is replaced from the spare pool.  If no spares are) 87 335.88 P
(available, the triad is broken up and the nonfaulty processors are added to the spare pool.) 87 322.88 T
0.02 (This example is very similar to the first example, except that the) 105 299.95 P
4 F
0.04 (DEATHIF) 390.85 299.95 P
2 F
0.02 ( statement and) 437.05 299.95 P
4 F
0.04 (TRANTO) 503.4 299.95 P
2 F
-0.19 (statements pertaining to triads must be put inside) 87 286.95 P
4 F
-0.46 (FOR) 303.62 286.95 P
2 F
-0.19 ( constructs so that all triads are handled.  The only) 323.42 286.95 P
0.4 (significant model changes are a new transition type and a new type of system failure.  The new transi-) 87 273.95 P
0.72 (tion is the breakup of a triad when it fails and there are no spares. System failure by exhaustion must) 87 260.95 P
(also be modeled, which requires an extra state-space variable and a new) 87 247.95 T
4 F
(DEATHIF) 406.21 247.95 T
2 F
( statement.) 452.41 247.95 T
4 9.5 Q
(\050*  MULTIPLE TRIADS WITH POOL OF SPARES *\051) 87 226.02 T
(INPUT N_TRIADS;         \050* Number of triads initially *\051) 87 205.59 T
(INPUT N_SPARES;         \050* Number of spares *\051) 87 194.09 T
(N_PROCS = 3;            \050* Number of active processors per triad *\051) 87 182.59 T
(LAMBDA_P = 1E-4;        \050* Failure rate of active processors *\051) 87 171.09 T
(LAMBDA_S = 1E-5;        \050* Failure rate of cold spare processors *\051) 87 159.59 T
(DELTA = 3.6E3;          \050* Reconfiguration rate to switch in spare *\051) 87 148.09 T
(OMEGA = 5.1E3;          \050* Reconfiguration rate to break up a triad *\051) 87 136.59 T
(SPACE = \050NP: ARRAY[1..N_TRIADS] OF 0..N_PROCS, \050* processors each triad *\051) 87 116.17 T
(         NFP: ARRAY[1..N_TRIADS] OF 0..N_PROCS, \050* active each triad *\051) 87 104.67 T
(         NS,                 \050* Number of spare processors *\051) 87 93.17 T
(         NFS,                \050* Number of failed spare processors *\051) 87 81.67 T
(         NT: 0..N_TRIADS\051;) 87 70.17 T
(\050*) 253.88 70.17 T
(Number of non-failed triads *\051) 271.77 70.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "39" 44
%%Page: "40" 45
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(40) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(START = \050N_TRIADS OF N_PROCS,) 87 719.67 T
(         N_TRIADS OF 0,) 87 708.17 T
(         N_SPARES,) 87 696.67 T
(         0,) 87 685.17 T
(         N_TRIADS\051;) 87 673.67 T
(IF NS > NFS TRANTO NFS = NFS+1 BY NS*LAMBDA_S;  \050* Spare failure *\051) 87 656.7 T
(FOR J IN [1..N_TRIADS];) 87 639.73 T
(   IF NP[J] > NFP[J] TRANTO NFP[J]++) 87 628.23 T
(        BY \050NP[J]-NFP[J]\051*LAMBDA_P;  \050* Active processor failure *\051) 87 616.73 T
(   IF NFP[J] > 0 THEN) 87 599.77 T
(      IF NS > 0 THEN) 87 582.8 T
(         IF NS > NFS TRANTO NFP[J]--,NS--) 87 571.3 T
(            BY FAST \0501-\050NFS/NS\051\051*NFP[J]*DELTA;) 87 559.8 T
(            \050* Replace failed processor with working spare *\051) 87 548.3 T
(         IF NFS > 0 TRANTO NS--,NFS-- BY FAST \050NFS/NS\051*NFP[J]*DELTA;) 87 531.33 T
(            \050* Replace failed processor with failed spare *\051) 87 519.83 T
(      ELSE) 87 502.87 T
(         TRANTO NP[J]=0,NFP[J]=0,NS=NP[J]-NFP[J],NT-- BY FAST OMEGA;) 87 491.37 T
(            \050* Break up a failed triad when no spares available *\051) 87 479.87 T
(      ENDIF;) 87 468.37 T
(   ENDIF;) 87 456.87 T
(   DEATHIF 2 * NFP[J] >= NP[J] AND NP[J] > 0;) 87 439.9 T
(     \050* Two faults in an active triad is system failure *\051) 87 428.4 T
(ENDFOR;) 87 411.43 T
(DEATHIF NT = 0;    \050* System failure by exhaustion *\051) 87 394.47 T
2 11 Q
0.56 (Since variable-sized arrays were used, a system with any number of initial triads may be modeled) 105 376.5 P
0.13 (by setting the constant) 87 363.5 P
4 F
0.31 (N_TRIADS) 188.96 363.5 P
2 F
0.13 (.  As shown in the example above, the number of initial spares is set) 241.76 363.5 P
0.4 (with the constant) 87 350.5 P
4 F
0.97 (N_SPARES) 166.12 350.5 P
2 F
0.4 (. Table 10 shows that changing these two constants has a dramatic effect) 218.92 350.5 P
(on the number of states in the generated model.) 87 337.5 T
3 10.5 Q
(16.3. Quad W) 105 159.37 T
(ith T) 166.66 159.37 T
(ransient Faults) 187.76 159.37 T
2 11 Q
0.28 (A quad architecture with both permanent and transient faults is modeled in this example.  The sys-) 105 141.07 P
(tem behavior is as follows:) 87 128.07 T
(1.) 105 108.6 T
(Permanent faults arrive at rate) 117 108.6 T
(.) 266.68 108.6 T
(2.) 105 89.13 T
(Transient faults arrive at rate) 117 89.13 T
(.) 261.18 89.13 T
(3.) 105 69.67 T
(Transient faults disappear at fast exponential rate) 117 69.67 T
(.) 350.76 69.67 T
2 9 Q
(T) 146.93 303.83 T
(able 10. Number of Model States for V) 151.8 303.83 T
(arious Initial Con\336gurations \050W) 291.78 303.83 T
(ith) 406.67 303.83 T
4 F
(ONEDEATH) 418.42 303.83 T
(OFF) 463.87 303.83 T
2 F
(\051) 480.07 303.83 T
(Number of model states for spares numbering\321) 264.02 279.83 T
(Number of triads) 141.83 265.83 T
(0) 236.55 265.83 T
(1) 284.02 265.83 T
(2) 331.5 265.83 T
(3) 378.98 265.83 T
(4) 426.45 265.83 T
(5) 473.93 265.83 T
(1) 170.32 251.83 T
(4) 236.55 251.83 T
(10) 279.52 251.83 T
(19) 327 251.83 T
(31) 374.48 251.83 T
(46) 421.95 251.83 T
(64) 469.43 251.83 T
(2) 170.32 237.83 T
(45) 232.05 237.83 T
(61) 279.52 237.83 T
(85) 327 237.83 T
(1) 370.31 237.83 T
(17) 374.48 237.83 T
(157) 417.45 237.83 T
(205) 464.93 237.83 T
(3) 170.32 223.83 T
(219) 227.55 223.83 T
(259) 275.02 223.83 T
(319) 322.5 223.83 T
(399) 369.98 223.83 T
(499) 417.45 223.83 T
(619) 464.93 223.83 T
(4) 170.32 209.83 T
(889) 227.55 209.83 T
(985) 275.02 209.83 T
(1) 318.33 209.83 T
(129) 322.5 209.83 T
(1321) 365.48 209.83 T
(1561) 412.95 209.83 T
(1849) 460.43 209.83 T
(5) 170.32 195.83 T
(3323) 223.05 195.83 T
(3547) 270.52 195.83 T
(3883) 318 195.83 T
(4331) 365.48 195.83 T
(4891) 412.95 195.83 T
(5563) 460.43 195.83 T
136.57 288.58 136.57 191.08 2 L
V
0.5 H
0 Z
N
208.57 289.08 208.57 190.58 2 L
V
N
256.05 275.08 256.05 190.58 2 L
V
N
303.52 275.08 303.52 190.58 2 L
V
N
351 275.08 351 190.58 2 L
V
N
398.48 275.08 398.48 190.58 2 L
V
N
445.95 275.08 445.95 190.58 2 L
V
N
493.43 288.58 493.43 191.08 2 L
V
N
136.32 288.83 493.68 288.83 2 L
V
N
208.32 274.83 493.68 274.83 2 L
V
N
136.32 260.83 493.68 260.83 2 L
V
N
136.32 190.83 493.68 190.83 2 L
V
N
252.32 100.3 266.68 117.47 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 253.32 108.6 T
5 8.5 Q
(P) 259.49 104.42 T
0 0 612 792 C
246.82 80.83 261.18 98.01 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 248.06 89.13 T
5 8.5 Q
(T) 254.22 84.96 T
0 0 612 792 C
336.03 61.37 350.76 78.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(d) 337.03 69.67 T
5 8.5 Q
(D) 342.62 65.49 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "40" 45
%%Page: "41" 46
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(41) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(4.) 105 718.67 T
0.42 (Reconfiguration of processors with permanent faults or transient faults that remain long enough) 117 718.67 P
(to be detected occurs at fast exponential rate) 117 705.67 T
(.) 329.67 705.67 T
(5.) 105 684.58 T
(System failure occurs when a majority of the processors have permanent or transient faults.) 117 684.58 T
(The ASSIST input file that describes this system is as follows:) 105 663.49 T
4 9.5 Q
(\050* QUAD WITH TRANSIENT FAULTS *\051) 87 643.4 T
(NP = 4;                 \050* Number of processors *\051) 87 624.81 T
(LAMBDA_P = 1E-4;        \050* Permanent fault arrival rate *\051) 87 613.31 T
(LAMBDA_T = 10*LAMBDA_P; \050* Transient fault arrival rate *\051) 87 601.81 T
(DELTA_D = .5;           \050* Transient fault disappearance rate *\051) 87 590.31 T
(DELTA_R = 3.6E3;        \050* Reconfiguration rate *\051) 87 578.81 T
(SPACE = \050NW: 0..NP,     \050* Number of working processors *\051) 87 560.22 T
(         NFP: 0..NP,    \050* Active procs. with permanent faults *\051) 87 548.73 T
(         NFT: 0..NP\051;   \050* Active procs. with transient faults *\051) 87 537.23 T
(START = \050NP, 0, 0\051;) 87 525.73 T
(DEATHIF NFP+NFT >= NW;  \050* Majority of active processors failed *\051) 87 507.14 T
(IF NW>0 THEN) 87 488.55 T
(   TRANTO \050NW-1,NFP+1,\051 BY NW*LAMBDA_P; \050* Permanent fault arrival *\051) 87 477.05 T
(   TRANTO \050NW-1,,NFT+1\051 BY NW*LAMBDA_T; \050* Transient fault arrival *\051) 87 465.55 T
(ENDIF;) 87 454.05 T
(IF NFT > 0 THEN) 87 435.46 T
(   TRANTO \050NW+1,,NFT-1\051 BY FAST DELTA_D;\050* Transient fault disappearance *\051) 87 423.96 T
(   TRANTO NFT-- BY FAST DELTA_R;        \050* Transient fault reconfiguration *\051) 87 412.46 T
(ENDIF;) 87 400.96 T
(IF NFP > 0 TRANTO NFP-- BY FAST DELTA_R;\050* Permanent fault reconfiguration *\051) 87 382.37 T
2 11 Q
1.05 (The model that is generated for this example contains 15 states and 20 transitions. This ASSIST) 105 362.78 P
-0.14 (input file could be used to model a triad, a quintet, or any number of starting processors by changing the) 87 349.78 P
(constant) 87 336.78 T
4 F
(NP) 126.41 336.78 T
2 F
(.  With 7 initial processors, the model contains 50 states and 100 transitions.) 139.61 336.78 T
3 10.5 Q
(16.4.  Monitor) 105 310.03 T
(ed Sensor Failur) 168.39 310.03 T
(e) 242.29 310.03 T
2 11 Q
0.66 (A triad of monitored sensors is modeled in this example.  Faulty sensors are detected by majority) 105 290.11 P
0.65 (voting.  If half the active sensors are faulty and the vote could produce a tie, the monitors are used to) 87 277.11 P
-0.06 (detect which sensor is faulty.  Detection using the monitors has imperfect coverage.  The system behav-) 87 264.11 P
(ior is as follows:) 87 251.11 T
(1.) 105 230.02 T
(Sensors fail at rate) 117 230.02 T
(.) 214.73 230.02 T
(2.) 105 208.93 T
(Monitors fail at rate) 117 208.93 T
(.) 223.68 208.93 T
(3.) 105 187.84 T
0.03 (If a majority of the sensors are nonfaulty, a failed sensor is removed with a mean time of) 117 187.84 P
0.03 ( and) 524.34 187.84 P
0.08 (a standard deviation of) 87 174.84 P
0.08 (.  When majority voting is used for fault  detection, the probability of detect-) 204.56 174.84 P
(ing the correct sensor as faulty is 1.) 87 161.84 T
(4.) 105 140.76 T
0.12 (If exactly half the sensors are faulty, a sensor is removed with a mean time of) 117 140.76 P
0.12 ( and a standard) 476.34 140.76 P
(deviation of) 87 127.76 T
(. In this case the probability that the nonfaulty sensor was the one removed is 0.98.) 156.59 127.76 T
(5.) 105 106.67 T
-0.06 (The system fails if the majority of sensors fail, or if half the sensors fail and the number of moni-) 117 106.67 P
(tors is less than the number of sensors.) 87 93.67 T
314.95 697.37 329.67 714.54 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(d) 316.42 705.67 T
5 8.5 Q
(R) 322 701.49 T
0 0 612 792 C
201.32 221.72 214.73 238.9 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 202.32 230.02 T
5 8.5 Q
(S) 208.48 225.84 T
0 0 612 792 C
207.43 200.63 223.68 217.81 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 208.43 208.93 T
5 8.5 Q
(M) 214.6 204.76 T
0 0 612 792 C
510.64 179.54 524.34 196.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(m) 511.64 187.84 T
2 8.5 Q
(1) 518.09 183.67 T
0 0 612 792 C
190.58 166.54 204.56 183.72 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(s) 191.58 174.84 T
2 8.5 Q
(1) 198.31 170.67 T
0 0 612 792 C
462.65 132.46 476.34 149.63 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(m) 463.65 140.76 T
2 8.5 Q
(2) 470.09 136.58 T
0 0 612 792 C
142.6 119.46 156.58 136.63 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(s) 143.6 127.76 T
2 8.5 Q
(2) 150.34 123.58 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "41" 46
%%Page: "42" 47
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(42) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(The ASSIST input file to describe this system is as follows:) 105 718.67 T
4 9.5 Q
(\050* MONITORED SENSOR FAILURE MODEL *\051) 87 698.21 T
(LAMBDA_S = 10E-6; \050* Failure rate of sensors *\051) 87 679.26 T
(LAMBDA_M = 1E-6;  \050* Failure rate of monitors *\051) 87 667.76 T
(MU_1 = 3E-4;      \050* Mean recovery time for first fault *\051) 87 656.26 T
(SIG_1 = 1E-4;     \050* S.D. of recovery time for first fault *\051) 87 644.76 T
(MU_2 = 1E-4;      \050* Mean recovery time for second fault *\051) 87 633.26 T
(SIG_2 = 2E-5;     \050* S.D. of recovery time for second fault *\051) 87 621.76 T
(COV_2 = .98;      \050* Coverage for second failure *\051) 87 610.26 T
(SPACE = \050NS: 0..3,  \050* Number of active sensors *\051) 87 591.3 T
(         NFS: 0..3, \050* Number of failed active sensors *\051) 87 579.8 T
(         NM: 0..3\051; \050* Number of working monitors *\051) 87 568.3 T
(START = \0503, 0, 3\051;) 87 556.8 T
(DEATHIF 2*NFS > NS; \050* Majority of sensors failed *\051) 87 537.85 T
(DEATHIF 2*NFS = NS AND NM < NS;) 87 526.35 T
(   \050* Half of the sensors fail and the number of monitors *\051) 87 514.85 T
(   \050*   working is less than the number of active sensors *\051) 87 503.35 T
(IF NS>0 TRANTO NFS++ BY \050NS-NFS\051*LAMBDA_S; \050* Sensor failure *\051) 87 484.39 T
(IF NM>1 TRANTO NM-- BY NM*LAMBDA_M;        \050* Monitor failure *\051) 87 472.89 T
(IF NS>2*NFS AND NFS>0 THEN   \050* First fault recovery *\051) 87 453.94 T
(   IF NM>0 TRANTO NS--,NFS--,NM-- BY <MU_1,SIG_1,\050NM/NS\051>;) 87 442.44 T
(           \050* Loss of monitored sensor *\051) 87 430.94 T
(   IF NM<NS TRANTO NS--,NFS-- BY <MU_1,SIG_1,\050NS-NM\051/NS>;) 87 419.44 T
(           \050* Loss of unmonitored sensor *\051) 87 407.94 T
(ENDIF;) 87 396.44 T
(IF NS=2*NFS AND NFS>0 THEN   \050* Second fault recovery *\051) 87 377.48 T
(   TRANTO NS--,NFS-- BY <MU_2,SIG_2,COV_2>;) 87 365.98 T
(          \050* Successfully removed failed sensor *\051) 87 354.48 T
(   TRANTO NS-- BY <MU_2,SIG_2,1.0-COV_2>;) 87 342.98 T
(          \050* Mistakenly removed nonfaulty sensor *\051) 87 331.48 T
(ENDIF;) 87 319.98 T
2 11 Q
(The semi-Markov model that is generated for this example contains 20 states and 26 transitions.) 105 300.03 T
3 10.5 Q
(16.5. T) 105 272.91 T
(wo T) 134.85 272.91 T
(riads W) 156.53 272.91 T
(ith Thr) 192.22 272.91 T
(ee Power Supplies) 224.42 272.91 T
2 11 Q
-0.24 (This example has two computer triads and one triad of power supplies that are connected so that one) 105 252.62 P
0.2 (computer in each triad is connected to each power supply.  Thus, if a power supply fails, one computer) 87 239.62 P
0.84 (in each triad fails.  Because of the complex failure dependencies, this is a difficult  system to model.) 87 226.62 P
1.05 (The usual method of using state-space variables to represent the number of failed computers in each) 87 213.62 P
0.3 (triad is insufficient because which computers have failed is also important state information.  One way) 87 200.62 P
0.28 (to model this system is to use the state-space variables as flags to indicate the failure of each computer) 87 187.62 P
0.08 (and power supply in the system.  This method uses a large number of state-space variables, but the sys-) 87 174.62 P
0.92 (tem can be described using only a few simple) 87 161.62 P
4 F
2.2 (TRANTO) 298.42 161.62 P
2 F
0.92 ( statements.  The large number of state-space) 338.02 161.62 P
0.51 (variables, however, leads to an unnecessarily complex semi-Markov model.  The ASSIST input file is) 87 148.62 P
(as follows:) 87 135.62 T
4 9.5 Q
(\050* 2 TRIADS OF COMPUTERS WITH 1 TRIAD OF POWER SUPPLIES        *\051) 87 115.17 T
(\050* CONNECTED SUCH THAT 1 COMPUTER IN EACH TRIAD IS CONNECTED TO  *\051) 87 103.67 T
(\050* EACH POWER SUPPLY.  THUS, IF A POWER SUPPLY FAILS, THEN ONE *\051) 87 92.17 T
(\050* COMPUTER IN EACH TRIAD FAILS.  THE SYSTEM FAILS IF EITHER   *\051) 87 80.67 T
(\050* TRIAD OF COMPUTERS FAILS.                                   *\051) 87 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "42" 47
%%Page: "43" 48
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(43) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(LAM_PS = 1E-6;  \050* Failure rate of power supplies *\051) 87 719.67 T
(LAM_C = 1E-5;   \050* Failure rate of computers *\051) 87 708.17 T
(SPACE = \050CAF: ARRAY[1..3] OF BOOLEAN,    \050* Failed computers in Triad A *\051) 87 691.39 T
(         CBF: ARRAY[1..3] OF BOOLEAN,    \050* Failed computers in Triad B *\051) 87 679.89 T
(         PSF: ARRAY[1..3] OF BOOLEAN\051;   \050* Failed power supplies *\051) 87 668.39 T
(START = \0509 OF FALSE\051;) 87 656.89 T
(DEATHIF COUNT\050CAF\051 > 1;  \050* 2/3 computers in Triad A failed *\051) 87 640.12 T
(DEATHIF COUNT\050CBF\051 > 1;  \050* 2/3 computers in Triad B failed *\051) 87 628.62 T
(FOR I IN [1..3]) 87 611.85 T
(   IF \050NOT CAF[I]\051) 87 600.35 T
(      TRANTO CAF[I]=TRUE BY LAM_C;  \050* Computer failure in Triad A *\051) 87 588.85 T
(   IF \050NOT CBF[I]\051) 87 577.35 T
(      TRANTO CBF[I]=TRUE BY LAM_C;  \050* Computer failure in Triad B *\051) 87 565.85 T
(   IF \050NOT PSF[I]\051) 87 554.35 T
(      TRANTO CAF[I]=TRUE,CBF[I]=TRUE,PSF[I]=TRUE) 87 542.85 T
(             BY LAM_PS;  \050* Power supply failure *\051) 87 531.35 T
(ENDFOR;) 87 519.85 T
2 11 Q
-0.15 (This method of modeling the system leads to a semi-Markov model with 70 states and 138 transitions to) 87 502.08 P
(model this relatively simple system.) 87 489.08 T
0.18 (As can be seen from this example, modeling systems with semi-Markov models is still an art, even) 105 470.8 P
0.1 (when using the ASSIST program.  As with any language, once the user becomes proficient in using the) 87 457.8 P
-0 (ASSIST language, he can see more easily how to generate more elegant models.  Often, a model can be) 87 444.8 P
0.39 (made considerably smaller by using fewer state-space variables to describe the system states, although) 87 431.8 P
0.98 (this practice sometimes leads to rather complex) 87 418.8 P
4 F
2.34 (TRANTO) 305.55 418.8 P
2 F
0.98 ( and) 345.14 418.8 P
4 F
2.34 (DEATHIF) 368.48 418.8 P
2 F
0.98 ( statements.  By using state-) 414.68 418.8 P
0.22 (space variables to represent the number of failed computers in each triad and by adding a flag to signal) 87 405.8 P
1.56 (the dependencies between failed computers, the system may be modeled with a much smaller state) 87 392.8 P
0.72 (space.  When the user combines the resulting complex transition rules by using logical reasoning, the) 87 379.8 P
(system described above can be modeled by the following input file:) 87 366.8 T
4 9.5 Q
(\050* 2 TRIADS OF COMPUTERS WITH 1 TRIAD OF POWER SUPPLIES        *\051) 87 348.53 T
(\050* CONNECTED SO THAT 1 COMPUTER IN EACH TRIAD IS CONNECTED TO  *\051) 87 337.03 T
(\050* EACH POWER SUPPLY.  THUS, IF A POWER SUPPLY FAILS, THEN ONE *\051) 87 325.53 T
(\050* COMPUTER IN EACH TRIAD FAILS.  THE SYSTEM FAILS IF EITHER   *\051) 87 314.03 T
(\050* TRIAD OF COMPUTERS FAILS.                                   *\051) 87 302.53 T
(LAM_PS = 1E-6;  \050* Failure rate of power supplies *\051) 87 285.76 T
(LAM_C = 1E-5;   \050* Failure rate of computers *\051) 87 274.26 T
(SPACE = \050NFP: ARRAY[1..2] OF 0..3, \050* Count of failed computers each triad *\051) 87 257.48 T
(         NFS: 0..3,                \050* Count of failed power supplies *\051) 87 245.98 T
(         SAME:BOOLEAN\051;            \050* Set if all failed computers fall) 87 234.48 T
(                                      on same power supply *\051) 87 222.98 T
(FUNCTION OTHER\050II\051 = 3-II;) 87 206.21 T
(START = \0502 OF 0,) 87 189.44 T
(         0,) 87 177.94 T
(         TRUE\051;) 87 166.44 T
(FOR IX IN [1..2]) 87 149.67 T
(   DEATHIF NFP[IX]>1;) 87 138.17 T
(   IF \050NFP[OTHER\050IX\051] > 0\051 THEN  \050* Other triad has a failed computer *\051) 87 126.67 T
(      TRANTO NFP[IX]++ BY LAM_C;) 87 115.17 T
(         \050* Failure of computer on same power supply as other failed one *\051) 87 103.67 T
(      TRANTO NFP[IX]++,SAME=FALSE BY \0502-NFP[IX]\051*LAM_C;) 87 92.17 T
(         \050* Failures of computers on different power *\051) 87 80.67 T
(         \050* supplies than the other failed one       *\051) 87 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "43" 48
%%Page: "44" 49
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(44) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(   ELSE) 87 719.67 T
(      TRANTO NFP[IX]++ BY \0503-NFP[IX]\051*LAM_C;) 87 708.17 T
(         \050* Failures of computers when other triad has no failures yet *\051) 87 696.67 T
(   ENDIF;) 87 685.17 T
(ENDFOR;) 87 673.67 T
(IF \050SUM\050NFP\051 = 0\051 THEN) 87 657.1 T
(   TRANTO NFP[1]++,NFP[2]++,NFS++,SAME=TRUE BY 3*LAM_PS;) 87 645.6 T
(      \050* Power supply failures when no previous *\051) 87 634.1 T
(      \050* computer failures have occurred.       *\051) 87 622.6 T
(ELSE) 87 611.1 T
(   IF \050SAME\051 THEN) 87 599.6 T
(      TRANTO \0502,2,2,FALSE\051 BY \0502-NFS\051*LAM_PS;) 87 588.1 T
(         \050* Failure of a power supply not connected to another  *\051) 87 576.6 T
(         \050* previously failed computer.  NOTE: State \0502,2,2,F\051  *\051) 87 565.1 T
(         \050* is an aggregation of several death states.          *\051) 87 553.6 T
(      IF SUM\050NFP,NFS\051<3 TRANTO \0501,1,1,TRUE\051 BY LAM_PS;) 87 542.1 T
(         \050* Failed power supply connected to *\051) 87 530.6 T
(         \050* a previously failed computer.    *\051) 87 519.1 T
(   ELSE) 87 507.61 T
(      TRANTO \0502,2,2,FALSE\051 BY \0503-NFS\051*LAM_PS;) 87 496.11 T
(         \050* Failure of a power supply not connected to another  *\051) 87 484.61 T
(         \050* previously failed computer.  NOTE: State \0502,2,2,F\051  *\051) 87 473.11 T
(         \050* is an aggregation of several death states.          *\051) 87 461.61 T
(   ENDIF;) 87 450.11 T
(ENDIF;) 87 438.61 T
2 11 Q
-0.03 (The second ASSIST input file leads to a semi-Markov model with only 25 states and 29 transitions,) 105 422.04 P
-0.19 (as compared to the first strategy, which required 70 states and 138 transitions to model the same system.) 87 409.04 P
0.51 (However, this input file is much more difficult to understand and verify.  Automatic lumping of death) 87 396.04 P
(states further reduces the model to 7 states with 29 transitions.) 87 383.04 T
3 10.5 Q
(16.6. T) 105 363.31 T
(riad W) 134.85 363.31 T
(ith Intermittent Faults) 166.46 363.31 T
2 11 Q
0.28 (The next example shows a triad subject to intermittent faults.   This triad has three processors with) 105 346.42 P
0.29 (intermittent fault arrival rates of) 87 333.42 P
0.29 (. When an intermittent fault arrives, it is assumed to be in an active) 244.35 333.42 P
-0.03 (state; i.e., it is actively producing errors. After arrival, intermittent faults change to a benign state at fast) 87 320.42 P
(exponential rate) 87 307.42 T
6 F
(b) 160.32 307.42 T
2 F
( and change to an active state again at fast exponential rate) 166.35 307.42 T
6 F
(a) 427.23 307.42 T
2 F
(.) 434.17 307.42 T
0.58 (A solution using STEM or PAWS is necessary because the SURE program cannot handle the fast) 105 290.35 P
(loops in this model.) 87 277.35 T
4 9.5 Q
(                         \050***************************\051) 87 261.29 T
(                         \050***************************\051) 87 249.79 T
(                         \050***                     ***\051) 87 238.29 T
(                         \050***   RATE  CONSTANTS   ***\051) 87 226.79 T
(                         \050***                     ***\051) 87 215.29 T
(                         \050***************************\051) 87 203.79 T
(                         \050***************************\051) 87 192.29 T
(L_I_triad    = 0.707e-4; \050* Arrival rate of intermittent fault for \322triad\323 *\051) 87 176.73 T
(ALP_triad    = 2.718281e3; \050* Rate benign \322triad\323 intermittent goes active *\051) 87 165.23 T
(BET_triad    = 3.141592e3; \050* Rate active \322triad\323 intermittent goes benign *\051) 87 153.73 T
(                         \050***************************\051) 87 138.17 T
(                         \050***************************\051) 87 126.67 T
(                         \050***                     ***\051) 87 115.17 T
(                         \050***   SPACE CONSTANTS   ***\051) 87 103.67 T
(                         \050***                     ***\051) 87 92.17 T
(                         \050***************************\051) 87 80.67 T
(                         \050***************************\051) 87 69.17 T
232.36 325.12 244.35 342.29 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 233.36 333.42 T
5 8.5 Q
(I) 239.52 329.24 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "44" 49
%%Page: "45" 50
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(45) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(NI_triad     = 3;   \050* Redundancy count for \322triad\323 *\051) 87 719.67 T
(NTOT = NI_triad;    \050* Total number of components initially *\051) 87 708.17 T
(                       \050*******************************\051) 87 691.63 T
(                       \050*******************************\051) 87 680.13 T
(                       \050***                         ***\051) 87 668.63 T
(                       \050***   STATE SPACE DEFINED   ***\051) 87 657.13 T
(                       \050***                         ***\051) 87 645.63 T
(                       \050*******************************\051) 87 634.13 T
(                       \050*******************************\051) 87 622.63 T
(SPACE =) 87 608.1 T
(  \050) 87 596.6 T
(   NW_triad     : 0..NI_triad, \050* Count of working in \322triad\323 *\051) 87 585.1 T
(   NFA_triad    : 0..NI_triad, \050* Count of active failed in \322triad\323 *\051) 87 573.6 T
(   NFB_triad    : 0..NI_triad  \050* Count of benign failed in \322triad\323 *\051) 87 562.1 T
(  \051;) 87 550.6 T
(IMPLICIT TFA_triad[NFA_triad] = \050* Total active failed in \322triad\323 *\051) 87 535.07 T
(         NFA_triad;) 87 523.57 T
(IMPLICIT TWA_triad[NW_triad,NFB_triad] = \050* Total active working in \322triad\323 *\051) 87 512.07 T
(         NW_triad + NFB_triad;) 87 500.57 T
(IMPLICIT TA_triad[NW_triad,NFB_triad,NFA_triad] = \050* Total active in \322triad\323 *\051) 87 489.07 T
(         TFA_triad + TWA_triad;) 87 477.57 T
(START =) 87 462.04 T
(  \050) 87 450.54 T
(   NI_triad,      \050* Count of working in \322triad\323 *\051) 87 439.04 T
(   0,             \050* Count of active failed in \322triad\323 *\051) 87 427.54 T
(   0              \050* Count of benign failed in \322triad\323 *\051) 87 416.04 T
(  \051;) 87 404.54 T
(                       \050*******************************\051) 87 388 T
(                       \050*******************************\051) 87 376.51 T
(                       \050***                         ***\051) 87 365.01 T
(                       \050***   COMPONENT:  \322triad\323   ***\051) 87 353.51 T
(                       \050***                         ***\051) 87 342.01 T
(                       \050*******************************\051) 87 330.51 T
(                       \050*******************************\051) 87 319.01 T
(ASSERT \050TWA_triad + TFA_triad\051 = NI_triad;) 87 302.47 T
(IF \050NW_triad > 0\051) 87 285.94 T
(   TRANTO NW_triad--,NFA_triad++) 87 274.44 T
(          BY NW_triad*L_I_triad;  \050* Intermittent fault arrival *\051) 87 262.94 T
(IF \050NFB_triad > 0\051) 87 246.41 T
(   TRANTO NFB_triad--,NFA_triad++) 87 234.91 T
(          BY FAST ALP_triad;   \050* Benign fault goes active *\051) 87 223.41 T
(IF \050NFA_triad > 0\051 THEN  \050* Active Intermittent faults *\051) 87 206.87 T
(   TRANTO NFA_triad--,NFB_triad++) 87 195.37 T
(          BY FAST BET_triad;   \050* Active fault goes benign *\051) 87 183.88 T
(ENDIF;) 87 172.38 T
(                       \050*******************************\051) 87 156.84 T
(                       \050*******************************\051) 87 145.34 T
(                       \050***                         ***\051) 87 133.84 T
(                       \050***   MISC. DEATH & PRUNE   ***\051) 87 122.34 T
(                       \050***                         ***\051) 87 110.84 T
(                       \050*******************************\051) 87 99.34 T
(                       \050*******************************\051) 87 87.84 T
(DEATHIF TFA_triad >= TWA_triad;) 87 71.31 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "45" 50
%%Page: "46" 51
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(46) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(16.7. Degradable T) 105 719 T
(riad W) 189.39 719 T
(ith Intermittent Faults) 220.99 719 T
2 11 Q
0.12 (The next example is a degradable triad subject to intermittent faults. This triad has three processors) 105 702.17 P
0.67 (with intermittent fault arrival rates of) 87 689.17 P
0.67 (. When an intermittent fault arrives, it is assumed to be in an) 269.19 689.17 P
-0.01 (active state; i.e., it is actively producing errors. After arrival, intermittent faults change to a benign state) 87 676.17 P
-0.25 (at fast exponential rate) 87 663.17 P
6 F
-0.25 (b) 188.64 663.17 P
2 F
-0.25 ( and change to an active state again at fast exponential rate) 194.68 663.17 P
6 F
-0.25 (a) 452.55 663.17 P
2 F
-0.25 (. Active processors) 459.49 663.17 P
(that are faulty are removed from the system at fast exponential rate) 87 650.17 T
(.) 399.84 650.17 T
0.58 (A solution using STEM or PAWS is necessary because the SURE program cannot handle the fast) 105 633.17 P
(loops in this model.) 87 620.17 T
4 9.5 Q
(                         \050***************************\051) 87 603.17 T
(                         \050***************************\051) 87 591.67 T
(                         \050***                     ***\051) 87 580.17 T
(                         \050***   RATE  CONSTANTS   ***\051) 87 568.67 T
(                         \050***                     ***\051) 87 557.17 T
(                         \050***************************\051) 87 545.67 T
(                         \050***************************\051) 87 534.17 T
(R_D_triad    = 1.414e3; \050* Rate to degrade for \322triad\323 *\051) 87 518.67 T
(L_I_triad    = 0.707e4; \050* Arrival rate of intermittent fault for \322triad\323 *\051) 87 507.17 T
(ALP_triad    = 2.718281e3; \050* Rate benign \322triad\323 intermittent goes active *\051) 87 495.67 T
(BET_triad    = 3.141592e3; \050* Rate active \322triad\323 intermittent goes benign *\051) 87 484.17 T
(                         \050***************************\051) 87 468.67 T
(                         \050***************************\051) 87 457.17 T
(                         \050***                     ***\051) 87 445.67 T
(                         \050***   SPACE CONSTANTS   ***\051) 87 434.17 T
(                         \050***                     ***\051) 87 422.67 T
(                         \050***************************\051) 87 411.17 T
(                         \050***************************\051) 87 399.67 T
(NI_triad     = 3;   \050* Redundancy count for \322triad\323 *\051) 87 384.17 T
(NTOT = NI_triad;    \050* Total number of components initially *\051) 87 372.67 T
(                       \050*******************************\051) 87 357.17 T
(                       \050*******************************\051) 87 345.67 T
(                       \050***                         ***\051) 87 334.17 T
(                       \050***   STATE SPACE DEFINED   ***\051) 87 322.67 T
(                       \050***                         ***\051) 87 311.17 T
(                       \050*******************************\051) 87 299.67 T
(                       \050*******************************\051) 87 288.17 T
(SPACE =) 87 272.67 T
(  \050) 87 261.17 T
(   NW_triad     : 0..NI_triad, \050* Count of working in \322triad\323 *\051) 87 249.67 T
(   NFA_triad    : 0..NI_triad, \050* Count of active failed in \322triad\323 *\051) 87 238.17 T
(   NFB_triad    : 0..NI_triad  \050* Count of benign failed in \322triad\323 *\051) 87 226.67 T
(  \051;) 87 215.17 T
(IMPLICIT TFA_triad[NFA_triad] = \050* Total active failed in \322triad\323 *\051) 87 199.67 T
(         NFA_triad;) 87 188.17 T
(IMPLICIT TWA_triad[NW_triad,NFB_triad] = \050* Total active working in \322triad\323 *\051) 87 176.67 T
(         NW_triad + NFB_triad;) 87 165.17 T
(IMPLICIT TA_triad[NW_triad,NFB_triad,NFA_triad] = \050* Total active in \322triad\323 *\051) 87 153.67 T
(         TFA_triad + TWA_triad;) 87 142.17 T
(START =) 87 126.67 T
(  \050) 87 115.17 T
(   NI_triad,      \050* Count of working in \322triad\323 *\051) 87 103.67 T
(   0,             \050* Count of active failed in \322triad\323 *\051) 87 92.17 T
(   0              \050* Count of benign failed in \322triad\323 *\051) 87 80.67 T
(  \051;) 87 69.17 T
257.2 680.87 269.19 698.04 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 258.2 689.17 T
5 8.5 Q
(I) 264.36 684.99 T
0 0 612 792 C
384.54 641.87 399.84 659.04 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(r) 385.54 650.17 T
5 8.5 Q
(D) 391.7 645.99 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "46" 51
%%Page: "47" 52
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(47) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(                       \050*******************************\051) 87 719.67 T
(                       \050*******************************\051) 87 708.17 T
(                       \050***                         ***\051) 87 696.67 T
(                       \050***   COMPONENT:  \322triad\323   ***\051) 87 685.17 T
(                       \050***                         ***\051) 87 673.67 T
(                       \050*******************************\051) 87 662.17 T
(                       \050*******************************\051) 87 650.67 T
(ASSERT \050TWA_triad + TFA_triad\051 <= NI_triad;) 87 633.64 T
(IF \050NW_triad > 0\051) 87 616.62 T
(   TRANTO NW_triad--,NFA_triad++) 87 605.12 T
(          BY NW_triad*L_I_triad;  \050* Intermittent fault arrival *\051) 87 593.62 T
(IF \050NFB_triad > 0\051) 87 576.59 T
(   TRANTO NFB_triad--,NFA_triad++) 87 565.09 T
(          BY FAST ALP_triad;   \050* Benign fault goes active *\051) 87 553.59 T
(IF \050NFA_triad > 0\051 THEN  \050* Active Intermittent faults *\051) 87 536.57 T
(   TRANTO NFA_triad--,NFB_triad++) 87 525.07 T
(          BY FAST BET_triad;   \050* Active fault goes benign *\051) 87 513.57 T
(   IF \050\050NW_triad + NFB_triad\051 = 2\051 THEN \050* degrade to simplex *\051) 87 502.07 T
(      IF \050NW_triad = 2\051 THEN) 87 490.57 T
(         TRANTO NFA_triad--,NW_triad=1 BY FAST R_D_triad;) 87 479.07 T
(      ELSE IF \050NW_triad = 0\051 THEN) 87 467.57 T
(         TRANTO NFA_triad--,NFB_triad=1 BY FAST R_D_triad;) 87 456.07 T
(      ELSE) 87 444.57 T
(         TRANTO NFA_triad--,NW_triad=0 BY FAST 0.5*R_D_triad;) 87 433.07 T
(         TRANTO NFA_triad--,NFB_triad=0 BY FAST 0.5*R_D_triad;) 87 421.57 T
(      ENDIF; ENDIF;) 87 410.07 T
(   ELSE \050* degrade by one *\051) 87 398.57 T
(      TRANTO NFA_triad-- BY FAST R_D_triad;) 87 387.07 T
(   ENDIF;) 87 375.57 T
(ENDIF;) 87 364.07 T
(                       \050*******************************\051) 87 347.05 T
(                       \050*******************************\051) 87 335.55 T
(                       \050***                         ***\051) 87 324.05 T
(                       \050***   MISC. DEATH & PRUNE   ***\051) 87 312.55 T
(                       \050***                         ***\051) 87 301.05 T
(                       \050*******************************\051) 87 289.55 T
(                       \050*******************************\051) 87 278.05 T
(DEATHIF TFA_triad >= TWA_triad;) 87 261.02 T
3 10.5 Q
(16.8. T) 105 236.33 T
(riad W) 134.85 236.33 T
(ith Hot/W) 166.46 236.33 T
(arm/Cold Spar) 211.09 236.33 T
(es) 278.28 236.33 T
2 11 Q
0.28 (The next example is a triad with hot, warm, and cold spares. The three processors in the triad have) 105 217.98 P
1.07 (permanent fault arrival rates of) 87 204.98 P
1.07 (. If available, hot spares are taken first, warm next, and cold last.) 245.71 204.98 P
0.73 (Faulty processors are replaced with spares at fast exponential rate) 87 191.98 P
0.73 (,) 405.12 191.98 P
0.73 (, or) 439.28 191.98 P
0.73 (. Failure rates) 481.37 191.98 P
1.64 (for hot and warm spares are given by) 87 178.98 P
1.64 ( and) 286.36 178.98 P
1.64 (, respectively. Cold spares are optimistically) 339.55 178.98 P
(assumed to have failure rates of zero.) 87 165.98 T
4 9.5 Q
(                         \050***************************\051) 87 147.45 T
(                         \050***************************\051) 87 135.95 T
(                         \050***                     ***\051) 87 124.45 T
(                         \050***   RATE  CONSTANTS   ***\051) 87 112.95 T
(                         \050***                     ***\051) 87 101.45 T
(                         \050***************************\051) 87 89.95 T
(                         \050***************************\051) 87 78.45 T
231.35 196.68 245.71 213.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 232.35 204.98 T
5 8.5 Q
(P) 238.52 200.8 T
0 0 612 792 C
385.67 183.68 405.12 200.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(d) 386.67 191.98 T
2 8.5 Q
(h) 392.26 187.8 T
(o) 396.51 187.8 T
(t) 400.76 187.8 T
0 0 612 792 C
411.34 183.68 439.28 200.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(d) 412.34 191.98 T
2 8.5 Q
(w) 417.93 187.8 T
(a) 424.07 187.8 T
(r) 427.84 187.8 T
(m) 430.67 187.8 T
0 0 612 792 C
458.15 183.68 481.37 200.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(d) 459.15 191.98 T
2 8.5 Q
(c) 464.73 187.8 T
(o) 468.51 187.8 T
(l) 472.76 187.8 T
(d) 475.12 187.8 T
0 0 612 792 C
266.33 170.68 286.36 187.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 267.33 178.98 T
2 8.5 Q
(h) 273.5 174.8 T
(o) 277.75 174.8 T
(t) 282 174.8 T
0 0 612 792 C
311.03 170.68 339.55 187.85 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(l) 312.03 178.98 T
2 8.5 Q
(w) 318.2 174.8 T
(a) 324.33 174.8 T
(r) 328.11 174.8 T
(m) 330.94 174.8 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "47" 52
%%Page: "48" 53
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(48) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(L_P_triad    = 1.e-4;   \050* Arrival rate of permanent fault for \322triad\323 *\051) 87 719.67 T
(DEL_hot      = 7.011e6; \050* Rate to reconfigure \322hot\323 spare into \322triad\323 *\051) 87 708.17 T
(DEL_warm     = 6.802e6; \050* Rate to reconfigure \322warm\323 spare into \322triad\323 *\051) 87 696.67 T
(DEL_cold     = 2.114e6; \050* Rate to reconfigure \322cold\323 spare into \322triad\323 *\051) 87 685.17 T
(LAM_hot      = 1.2e-4;  \050* Arrival rate of permanent \322hot\323 spare faults *\051) 87 667.98 T
(LAM_warm     = 1.0e-8;  \050* Arrival rate of permanent \322warm\323 spare faults *\051) 87 656.48 T
(                         \050***************************\051) 87 639.3 T
(                         \050***************************\051) 87 627.8 T
(                         \050***                     ***\051) 87 616.3 T
(                         \050***   SPACE CONSTANTS   ***\051) 87 604.8 T
(                         \050***                     ***\051) 87 593.3 T
(                         \050***************************\051) 87 581.8 T
(                         \050***************************\051) 87 570.3 T
(NI_triad     = 3;   \050* Redundancy count for \322triad\323 *\051) 87 553.12 T
(NSI_hot      = 2;   \050* Initial pool size for \322hot\323 *\051) 87 541.62 T
(NSI_warm     = 5;   \050* Initial pool size for \322warm\323 *\051) 87 530.12 T
(NSI_cold     = 10;  \050* Initial pool size for \322cold\323 *\051) 87 518.62 T
(                    \050* Total number of components initially *\051) 87 507.12 T
(                       \050*******************************\051) 87 489.94 T
(                       \050*******************************\051) 87 478.44 T
(                       \050***                         ***\051) 87 466.94 T
(                       \050***   STATE SPACE DEFINED   ***\051) 87 455.44 T
(                       \050***                         ***\051) 87 443.94 T
(                       \050*******************************\051) 87 432.44 T
(                       \050*******************************\051) 87 420.94 T
(SPACE =) 87 403.75 T
(  \050) 87 392.25 T
(   NW_triad     : 0..NI_triad, \050* Count of working in \322triad\323 *\051) 87 380.75 T
(   NWS_hot      : 0..NSI_hot,  \050* Working spares count, HOT pool \322hot\323 *\051) 87 369.25 T
(   NFS_hot      : 0..NSI_hot,  \050* Failed spares count, HOT pool \322hot\323 *\051) 87 357.75 T
(   NWS_warm     : 0..NSI_warm, \050* Working spares count, WARM pool \322warm\323 *\051) 87 346.25 T
(   NFS_warm     : 0..NSI_warm, \050* Failed spares count, WARM pool \322warm\323 *\051) 87 334.75 T
(   NS_cold      : 0..NSI_cold  \050* Spares count, COLD pool \322cold\323 *\051) 87 323.25 T
(  \051;) 87 311.75 T
(IMPLICIT TFA_triad[NW_triad] = \050* Total active failed in \322triad\323 *\051) 87 294.57 T
(         NI_triad - NW_triad;) 87 283.07 T
(IMPLICIT TWA_triad[NW_triad] = \050* Total active working in \322triad\323 *\051) 87 271.57 T
(         NW_triad;) 87 260.07 T
(IMPLICIT TA_triad[] = NI_triad;) 87 248.57 T
(IMPLICIT NS_triad[NWS_hot,NFS_hot,NWS_warm,NFS_warm,NS_cold] =) 87 237.07 T
(         \050* Total spares available to \322triad\323 *\051) 87 225.57 T
(         NWS_hot + NFS_hot + NWS_warm + NFS_warm + NS_cold;) 87 214.07 T
(IMPLICIT NS_hot[NWS_hot,NFS_hot] = NWS_hot + NFS_hot;) 87 196.89 T
(IMPLICIT PRW_hot[NWS_hot,NFS_hot] = NWS_hot / NS_hot;) 87 185.39 T
(IMPLICIT PRF_hot[NWS_hot,NFS_hot] = NFS_hot / NS_hot;) 87 173.89 T
(IMPLICIT NS_warm[NWS_warm,NFS_warm] = NWS_warm + NFS_warm;) 87 156.71 T
(IMPLICIT PRW_warm[NWS_warm,NFS_warm] = NWS_warm / NS_warm;) 87 145.21 T
(IMPLICIT PRF_warm[NWS_warm,NFS_warm] = NFS_warm / NS_warm;) 87 133.71 T
(START =) 87 116.52 T
(  \050) 87 105.02 T
(   NI_triad,      \050* Count of working in \322triad\323 *\051) 87 93.52 T
(   NSI_hot,       \050* Working spares count, HOT pool \322hot\323 *\051) 87 82.02 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "48" 53
%%Page: "49" 54
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(49) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(   0,             \050* Failed spares count, HOT pool \322hot\323 *\051) 87 719.67 T
(   NSI_warm,      \050* Working spares count, WARM pool \322warm\323 *\051) 87 708.17 T
(   0,             \050* Failed spares count, WARM pool \322warm\323 *\051) 87 696.67 T
(   NSI_cold       \050* Spares count, COLD pool \322cold\323 *\051) 87 685.17 T
(  \051;) 87 673.67 T
(                       \050*******************************\051) 87 655.77 T
(                       \050*******************************\051) 87 644.27 T
(                       \050***                         ***\051) 87 632.77 T
(                       \050***   COMPONENT:  \322triad\323   ***\051) 87 621.27 T
(                       \050***                         ***\051) 87 609.77 T
(                       \050*******************************\051) 87 598.27 T
(                       \050*******************************\051) 87 586.77 T
(IF \050NW_triad > 0\051) 87 568.87 T
(   TRANTO NW_triad--) 87 557.37 T
(          BY NW_triad*L_P_triad;  \050* Permanent fault arrival *\051) 87 545.87 T
(IF \050TFA_triad > 0\051 THEN  \050* Faults present *\051) 87 527.97 T
(   IF \050NS_hot > 0\051 THEN   \050* Try primary spare pool \322hot\323 first *\051) 87 516.47 T
(      IF \050NWS_hot > 0\051) 87 504.97 T
(         TRANTO NWS_hot--,NW_triad++) 87 493.47 T
(                BY FAST PRW_hot*DEL_hot;) 87 481.97 T
(      IF \050NFS_hot > 0\051) 87 470.47 T
(         TRANTO NFS_hot--) 87 458.97 T
(                BY FAST PRF_hot*DEL_hot;) 87 447.47 T
(   ELSE IF \050NS_warm > 0\051 THEN   \050* Try secondary spare pool \322warm\323 next *\051) 87 435.97 T
(      IF \050NWS_warm > 0\051) 87 424.47 T
(         TRANTO NWS_warm--,NW_triad++) 87 412.97 T
(                BY FAST PRW_warm*DEL_warm;) 87 401.47 T
(      IF \050NFS_warm > 0\051) 87 389.97 T
(         TRANTO NFS_warm--) 87 378.47 T
(                BY FAST PRF_warm*DEL_warm;) 87 366.97 T
(   ELSE IF \050NS_cold > 0\051 THEN   \050* Try tertiary spare pool \322cold\323 last *\051) 87 355.47 T
(      TRANTO NS_cold--,NW_triad++ BY FAST DEL_cold;) 87 343.97 T
(   ENDIF; ENDIF; ENDIF;) 87 332.47 T
(ENDIF;) 87 320.97 T
(                        \050*****************************\051) 87 303.08 T
(                        \050*****************************\051) 87 291.58 T
(                        \050***                       ***\051) 87 280.08 T
(                        \050***   SPARE POOL: \322hot\323   ***\051) 87 268.58 T
(                        \050***                       ***\051) 87 257.08 T
(                        \050*****************************\051) 87 245.58 T
(                        \050*****************************\051) 87 234.08 T
(ASSERT \050NWS_hot + NFS_hot\051 <= NSI_hot;) 87 216.18 T
(IF \050NWS_hot > 0\051   \050* Arrival of permanent \322hot\323 spare fault *\051) 87 198.28 T
(   TRANTO NWS_hot--,NFS_hot++ BY NWS_hot*LAM_hot;) 87 186.78 T
(                       \050*******************************\051) 87 168.88 T
(                       \050*******************************\051) 87 157.38 T
(                       \050***                         ***\051) 87 145.88 T
(                       \050***   SPARE POOL:  \322warm\323   ***\051) 87 134.38 T
(                       \050***                         ***\051) 87 122.88 T
(                       \050*******************************\051) 87 111.38 T
(                       \050*******************************\051) 87 99.88 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "49" 54
%%Page: "50" 55
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(50) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(ASSERT \050NWS_warm + NFS_warm\051 <= NSI_warm;) 87 719.67 T
(IF \050NWS_warm > 0\051   \050* Arrival of permanent \322warm\323 spare fault *\051) 87 702.53 T
(   TRANTO NWS_warm--,NFS_warm++ BY NWS_warm*LAM_warm;) 87 691.03 T
(                       \050*******************************\051) 87 673.9 T
(                       \050*******************************\051) 87 662.4 T
(                       \050***                         ***\051) 87 650.9 T
(                       \050***   SPARE POOL:  \322cold\323   ***\051) 87 639.4 T
(                       \050***                         ***\051) 87 627.9 T
(                       \050*******************************\051) 87 616.4 T
(                       \050*******************************\051) 87 604.9 T
(ASSERT NS_cold <= NSI_cold;) 87 587.77 T
(                       \050*******************************\051) 87 570.63 T
(                       \050*******************************\051) 87 559.13 T
(                       \050***                         ***\051) 87 547.63 T
(                       \050***   MISC. DEATH & PRUNE   ***\051) 87 536.13 T
(                       \050***                         ***\051) 87 524.63 T
(                       \050*******************************\051) 87 513.13 T
(                       \050*******************************\051) 87 501.63 T
(DEATHIF TFA_triad >= TWA_triad;) 87 484.5 T
3 12 Q
(17. Command-Line Parameters and Options) 87 458.7 T
2 11 Q
1.15 (This section details the command for executing the ASSIST program. The program is written in) 105 439.73 P
1.44 (the) 87 426.73 P
1.44 (C programming language and will execute on a VAX under the VMS operating system or on a) 103.19 426.73 P
1.55 (Sun-) 87 413.73 P
1.55 (3 or Sun SPARCstation) 107.78 413.73 P
2 8.8 Q
1.24 (2) 216.65 418.13 P
2 11 Q
1.55 ( under the UNIX operating system.  An ANSI-standard C compiler is) 221.04 413.73 P
0.7 (required to compile the program.  The current Sun  C  compiler will not compile ASSIST, but Sun is) 87 400.73 P
1.05 (planning to release an ANSI C compiler in the future.  However, an ANSI  C  compiler for the Sun) 87 387.73 P
0.89 (computers) 87 374.73 P
3 F
0.89 (gcc) 136.47 374.73 P
2 F
0.89 (, is available from the Free Software Foundation.  The  C  compiler available with the) 151.74 374.73 P
(VAX/VMS operating system is an ANSI  C  compiler.) 87 361.73 T
1.42 (When running the ASSIST program, the only positional parameter is the name of the input file) 105 342.1 P
1.4 (being processed. The) 87 329.1 P
3 F
1.4 (.ast) 187.13 329.1 P
2 F
1.4 ( suffix may be omitted from the file name on the ASSIST command line.) 203.32 329.1 P
(Options are also allowed. The file name may not follow an option but must precede all options.) 87 316.1 T
( Options must be preceded by a slash under VMS, as in) 105 296.47 T
3 10.5 Q
(/map) 132 277.17 T
2 11 Q
(and must be preceded by a dash under UNIX, as in) 87 257.7 T
3 10.5 Q
(\320map) 132 238.4 T
2 11 Q
0.49 (Options may be specified either in upper or lower case.   The normal UNIX case sensitivity is not) 105 218.93 P
(enforced on the ASSIST command-line options.) 87 205.93 T
(The syntax is) 105 186.3 T
3 10.5 Q
(assist) 132 167 T
2 7 Q
(or) 132 156.83 T
3 10.5 Q
(assist) 132 145.5 T
2 9 Q
(<\336lename>) 158.54 145.5 T
2 7 Q
(or) 132 133 T
3 10.5 Q
(assist) 132 120.5 T
2 9 Q
(<option-list>) 158.54 120.5 T
2 7 Q
(or) 132 108 T
3 10.5 Q
(assist) 132 95.5 T
2 9 Q
(<\336lename>) 158.54 95.5 T
(<option-list>) 202.32 95.5 T
87 77 543 92 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
87.25 81.75 231.25 81.75 2 L
0.5 H
2 Z
0 X
0 0 0 1 0 0 0 K
N
0 0 612 792 C
2 7.2 Q
0 X
0 0 0 1 0 0 0 K
(2) 96 74.6 T
2 9 Q
(SPARCstation: a trademark of SPARC International.) 99.6 71 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "50" 55
%%Page: "51" 56
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(51) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(Respective examples are) 105 718.67 T
3 10.5 Q
(assist) 132 699.55 T
2 7 Q
(or) 132 689.38 T
3 10.5 Q
(assist) 132 678.05 T
(foo) 158.54 678.05 T
2 7 Q
(or) 132 667.88 T
3 10.5 Q
(assist) 132 656.55 T
(\320xr) 158.54 656.55 T
(ef) 173.52 656.55 T
2 7 Q
(or) 132 646.38 T
3 10.5 Q
(assist) 132 635.05 T
(foo) 158.54 635.05 T
(\320xr) 175.16 635.05 T
(ef) 190.14 635.05 T
2 11 Q
(If the file name is omitted, ASSIST will prompt for one.) 105 615.77 T
0.35 (There are several options that may be listed in any order on the command line.   These options are) 105 596.32 P
(all enumerated in appendix E.   A few important options are discussed below.) 87 583.32 T
3 10.5 Q
(17.1. Contr) 105 558.2 T
(olling Err) 155.26 558.2 T
(or/W) 199.12 558.2 T
(arning Limits) 221.88 558.2 T
2 11 Q
0.99 (The) 105 539.92 P
3 10.5 Q
0.95 (\320) 125.85 539.92 P
3 11 Q
0.99 (lel) 131.1 539.92 P
2 F
0.99 ( option controls the maximum number of errors allowed on a single) 142.1 539.92 P
4 F
2.38 (ASSIST) 454.05 539.92 P
2 F
0.99 ( input line.) 493.65 539.92 P
0.16 (The) 87 526.92 P
3 10.5 Q
0.15 (\320) 107.01 526.92 P
3 11 Q
0.16 (el) 112.26 526.92 P
2 F
0.16 ( option controls the maximum cumulative number of errors allowed throughout the whole input) 120.21 526.92 P
0.68 (file.   The) 87 513.92 P
3 10.5 Q
0.65 (\320) 135.23 513.92 P
3 11 Q
0.68 (lwl) 140.48 513.92 P
2 F
0.68 ( option controls the maximum number of warnings allowed on a single) 154.53 513.92 P
4 F
1.62 (ASSIST) 477.36 513.92 P
2 F
0.68 ( input) 516.96 513.92 P
0.8 (line.   The) 87 500.92 P
3 10.5 Q
0.76 (\320) 137.56 500.92 P
3 11 Q
0.8 (wl) 142.81 500.92 P
2 F
0.8 ( option controls the maximum cumulative number of warnings allowed throughout the) 153.81 500.92 P
(entire input file.) 87 487.92 T
(Examples are) 105 468.47 T
4 10 Q
(assist foo \321el=80) 132 449.68 T
(assist foo \321el=100 \321wl=1000 \321lel=10 \321lwl=10) 132 437.68 T
2 11 Q
(Defaults are) 105 419.57 T
4 10 Q
(assist foo \321el=40 \321wl=40 \321lel=5 \321lwl=5) 132 400.78 T
3 10.5 Q
(17.2. Changing Allowable Input-Line W) 105 376 T
(idth) 284.51 376 T
2 11 Q
0.04 (The) 105 357.72 P
3 10.5 Q
0.04 (\320) 124.89 357.72 P
3 11 Q
0.04 (wid) 130.14 357.72 P
2 F
0.04 ( option changes the allowable length of an input line.   The default width is 79.  The num-) 147.26 357.72 P
1.18 (ber 79 was chosen because input lines are echoed to the terminal when an error occurs and because) 87 344.72 P
-0.03 (some terminals wrap/truncate with column 80.   The value can be changed as illustrated in the example:) 87 331.72 P
4 10 Q
(assist foo \321wid=133) 132 312.93 T
3 10.5 Q
(17.3. Generating Identi\336er Cr) 105 288.15 T
(oss-Refer) 238.68 288.15 T
(ence Map) 280.46 288.15 T
2 11 Q
0.02 (The) 105 269.87 P
3 F
0.02 (\320xref) 124.87 269.87 P
2 F
0.02 ( \050synonymous with) 149.3 269.87 P
3 F
0.02 (\320map) 236.44 269.87 P
2 F
0.02 (\051 option causes inclusion of an identifier cross-reference map in) 262.72 269.87 P
0.52 (the log \050) 87 256.87 P
3 F
0.52 (.log) 124.71 256.87 P
2 F
0.52 (\051 file.   The map follows the input listing and includes the line declared in, line\050s\051 defined) 141.52 256.87 P
-0.16 (\050given a value\051 in, and lines referenced in.   Also referenced are matching) 87 243.87 P
4 F
-0.39 (ELSE) 410.94 243.87 P
2 F
-0.16 ( and) 437.34 243.87 P
4 F
-0.39 (ENDIF) 458.39 243.87 P
2 F
-0.16 ( and match-) 491.39 243.87 P
(ing) 87 230.87 T
4 F
(ENDFOR) 103.81 230.87 T
2 F
( key words.) 143.41 230.87 T
0.69 (In a cross-reference listing,) 105 211.42 P
4 F
1.65 (DCL) 230.23 211.42 P
2 F
0.69 ( stands for) 250.03 211.42 P
5 F
0.69 (declared) 300.66 211.42 P
2 F
0.69 ( and indicates the line on which the item was) 339.15 211.42 P
0.32 (declared,) 87 198.42 P
4 F
0.77 (SET) 130.08 198.42 P
2 F
0.32 ( indicates the line\050s\051 on which the item took on a value, and) 149.88 198.42 P
4 F
0.77 (USE) 419.26 198.42 P
2 F
0.32 ( indicates the line\050s\051 on) 439.06 198.42 P
(which the item was referenced \050) 87 185.42 T
5 F
(used) 227.81 185.42 T
2 F
(\051.) 247.97 185.42 T
(The following shows the syntax of input-line references:) 105 165.97 T
2 9 Q
(<line-number>) 132 146.85 T
3 10.5 Q
(c) 188.77 146.85 T
2 9 Q
(<column-number>) 196.06 146.85 T
2 11 Q
(The following log file was produced with) 105 127.57 T
3 10.5 Q
(\320) 290.45 127.57 T
3 11 Q
(xref) 295.7 127.57 T
2 F
(:) 314.63 127.57 T
4 9.5 Q
-0.55 (sys1.ast    3/17/94 9:46:50 a.m.) 87 109.12 P
-0.55 (ASSIST 7.1, NASA LaRC    Page 1) 370.69 109.12 P
(\0500001\051: LAMBDA = 1.e-4;) 87 92.17 T
(\0500002\051: NP = 3;) 87 80.67 T
(\0500003\051:) 87 69.17 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "51" 56
%%Page: "52" 57
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(52) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9.5 Q
(\0500004\051: SPACE = \050NW:0..NP\051;) 87 719.67 T
(\0500005\051: START = \050NP\051;) 87 708.17 T
(\0500006\051:) 87 696.67 T
(\0500007\051: IF \050NW > 0\051 THEN) 87 685.17 T
(\0500008\051:    TRANTO NW-- BY NW*LAMBDA;) 87 673.67 T
(\0500009\051: ENDIF;) 87 662.17 T
(\0500010\051:) 87 650.67 T
(\0500011\051: DEATHIF \050NP - NW\051 >= NW;) 87 639.17 T
(PARSING TIME = 0.14 sec.) 87 622.67 T
(RULE GENERATION TIME = 0.00 sec.) 87 611.17 T
(NUMBER OF STATES IN MODEL = 3) 87 599.67 T
(NUMBER OF TRANSITIONS IN MODEL = 2) 87 588.17 T
(1 DEATH STATES AGGREGATED INTO STATE 1) 87 576.67 T
3 10.5 Q
(17.4. Piping Model to Standard Output) 105 552.5 T
2 11 Q
0.52 (The) 105 534.67 P
3 F
0.52 (\320pipe) 125.38 534.67 P
2 F
0.52 ( option is used on UNIX systems to write the model to standard output so that it can be) 151.05 534.67 P
0.36 (piped directly to SURE.  For example, to process the input file) 87 521.67 P
3 F
0.36 (foo.ast) 372.45 521.67 P
2 F
0.36 (  and pipe the model directly to) 403.31 521.67 P
(SURE for solution, use the command) 87 508.67 T
4 10 Q
(assist foo \321pipe | sure > sureout) 132 490.33 T
2 11 Q
2.24 (When the) 105 472.67 P
3 F
2.24 (\320pipe) 154.69 472.67 P
2 F
2.24 ( option is specified, dialog which normally appears on the standard output is) 180.36 472.67 P
(redirected to the standard error.) 87 459.67 T
0.07 (The) 105 440.67 P
3 F
0.07 (\320nostats) 124.92 440.67 P
2 F
0.07 ( option can be used together with the) 163.42 440.67 P
3 F
0.07 (\320pipe) 328.93 440.67 P
2 F
0.07 ( option to suppress the printing of ASSIST) 354.61 440.67 P
0.2 (statistics.   This is useful when the output from SURE is to come directly to standard output and would) 87 427.67 P
(otherwise be scrambled with the standard error file statistics from ASSIST. For example) 87 414.67 T
4 10 Q
(assist foo \321pipe \321nostats | sure) 132 396.33 T
2 11 Q
2.5 (The model output from ASSIST should not be piped directly to SURE unless all errors and) 105 378.67 P
0.41 (warnings have been fixed.   If this is done, the standard output from SURE will be scrambled with the) 87 365.67 P
1.85 (standard error messages from ASSIST.   The) 87 352.67 P
3 F
1.85 (\320nostats) 301.86 352.67 P
2 F
1.85 ( option will not suppress error and warning) 340.36 352.67 P
(messages.) 87 339.67 T
0.46 (If the VMS \050or other non-UNIX\051 user attempts to use the) 105 320.67 P
3 F
0.46 (/pipe) 363.94 320.67 P
2 F
0.46 ( option, a warning message will be) 387.17 320.67 P
(printed:) 87 307.67 T
4 10 Q
([WARNING] OPTION ONLY VALID ON A UNIX SYSTEM.  OPTION IGNORED: /pipe) 132 289.33 T
3 10.5 Q
(17.5. Batch Mode) 105 265 T
2 11 Q
-0.03 (The) 105 247.17 P
3 F
-0.03 (\320bat) 124.83 247.17 P
2 F
-0.03 ( option causes ASSIST to run in batch mode. In batch mode, the ASSIST command line is) 145.61 247.17 P
0.5 (echoed to standard error. A batch process will usually redirect standard error to a file instead of to the) 87 234.17 P
0.14 (user\325s monitor screen. If the batch process invokes ASSIST many times, and one of the input files hap-) 87 221.17 P
0.54 (pens to contain some errors, the user will be able to tell which file was being processed by examining) 87 208.17 P
(the echoed command line.) 87 195.17 T
3 10.5 Q
(17.6. Contr) 105 170.5 T
(olling Printing of W) 155.26 170.5 T
(arning Messages) 244.24 170.5 T
2 11 Q
1.04 (The) 105 152.67 P
3 F
1.04 (\320w) 125.9 152.67 P
2 F
1.04 ( option specifies the number of warning levels that are printed. The lower the number of) 139.34 152.67 P
(warning levels reported, the fewer warning messages there are.) 87 139.67 T
3 12 Q
(18.  Concluding Remarks) 87 114 T
2 11 Q
1.35 (The ASSIST program automatically generates a semi-Markov reliability model from an abstract) 105 95.67 P
1.05 (input language.  Semi-Markov models have the flexibility to accurately represent virtually any fault-) 87 82.67 P
0.95 (tolerant system.  The ASSIST input language provides an abstraction for describing rules rather than) 87 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "52" 57
%%Page: "53" 58
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(53) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
1.88 (individual transitions. However, the flexibility of semi-Markov modeling is maintained because no) 87 718.67 P
2.15 (assumptions are made about the system; the rules themselves completely specify the model to be) 87 705.67 P
(generated.) 87 692.67 T
0.98 (As flight-critical systems become more complex and more highly integrated, the Markov models) 105 673.67 P
1.02 (describing them will become enormously complex.  However, our experience has been that even the) 87 660.67 P
0.73 (most complex system characteristics can usually be described by relatively simple rules.  The models) 87 647.67 P
0.03 (only become complex because these few rules combine many times to form models with large numbers) 87 634.67 P
0.14 (of states and transitions between them.  Furthermore, the process of describing a system in terms of the) 87 621.67 P
0.07 (model generation rules forces the reliability engineer to clearly understand the fault-tolerance strategies) 87 608.67 P
0.62 (of the system, and the abstract description is also useful for communicating and validating the system) 87 595.67 P
(model.) 87 582.67 T
0.89 (Further levels of abstraction are both possible and feasible.  Several research prototype computer) 105 563.67 P
1.64 (programs to generate ASSIST input descriptions from even more abstract system descriptions have) 87 550.67 P
1.12 (been developed, including the Table Oriented Translator to the ASSIST Language \050TOTAL\051 \050ref. 8\051) 87 537.67 P
(and the Reliability Estimation Testbed \050REST\051 \050ref. 9\051.) 87 524.67 T
2 9 Q
(NASA Langley Research Center) 87 489 T
(Hampton, V) 87 478 T
(A 23681-0001) 130.34 478 T
(April 7, 1995) 87 467 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "53" 58
%%Page: "54" 59
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(54) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Appendix) 87 718 T
(A) 141.34 718 T
(Expr) 87 690.23 T
(ession Pr) 112.79 690.23 T
(ecedence) 158.9 690.23 T
2 11 Q
0.11 (This appendix defines the order of precedence used by ASSIST in evaluating mathematical expres-) 105 670.12 P
-0.17 (sions. The operator precedence is shown in the following table, which is sorted from highest precedence) 87 657.12 P
(to lowest precedence.) 87 644.12 T
0.24 (A list of sample expressions follows. Each expression is followed by an arrow and a description of) 105 368.35 P
(the ASSIST interpretation of the expression.) 87 355.35 T
3 F
(The dash is used for both unary negation and binary subtraction:) 105 334.58 T
2 9.5 Q
(5 *) 240.66 314.8 T
6 F
(-) 254.91 314.8 T
2 F
( 6 ** 8) 260.12 314.8 T
6 F
(\256) 291 314.8 T
2 F
(  \0505\051 * \050\050) 300.38 314.8 T
6 F
(-) 332.03 314.8 T
2 F
(6\051**8\051) 337.25 314.8 T
(5) 247.79 303.3 T
6 F
(-) 254.91 303.3 T
2 F
( 6 ** 8) 260.12 303.3 T
6 F
(\256) 291 303.3 T
2 F
(  \0505\051) 300.38 303.3 T
6 F
(-) 318.58 303.3 T
2 F
(\0506**8\051) 326.17 303.3 T
3 11 Q
(The following are legal:) 105 284.03 T
4 9.5 Q
(NP MOD NFP + I) 199.8 264.26 T
6 F
(\256) 291 264.26 T
4 F
(  \050NP MOD NFP\051 + I) 300.38 264.26 T
(I + NP MOD NFP) 199.8 252.76 T
6 F
(\256) 291 252.76 T
4 F
(  I + \050NP MOD NFP\051) 300.38 252.76 T
(I + NP DIV NFP) 199.8 241.26 T
6 F
(\256) 291 241.26 T
4 F
(  I + \050NP DIV NFP\051) 300.38 241.26 T
(PSI * \0502.0 + MU\051) 188.4 223.98 T
6 F
(\256) 291 223.98 T
4 F
(  PSI * \0502.0 + MU\051) 300.38 223.98 T
(PSI ** MU ** OMEGA) 177 212.48 T
6 F
(\256) 291 212.48 T
4 F
(  PSI ** \050MU ** OMEGA\051) 300.38 212.48 T
(PSI / MU / OMEGA) 188.4 200.98 T
6 F
(\256) 291 200.98 T
4 F
(  \050PSI / MU\051 / OMEGA) 300.38 200.98 T
(PSI) 195.07 189.48 T
6 F
(-) 217.87 189.48 T
4 F
( MU) 223.09 189.48 T
6 F
(-) 245.88 189.48 T
4 F
(OMEGA) 251.1 189.48 T
6 F
(\256) 291 189.48 T
4 F
(  \050PSI) 300.38 189.48 T
6 F
(-) 340.28 189.48 T
4 F
( MU\051) 345.49 189.48 T
6 F
(-) 373.99 189.48 T
4 F
( OMEGA) 379.21 189.48 T
(PSI **) 211.68 177.98 T
6 F
(-) 251.59 177.98 T
4 F
( EPS) 256.8 177.98 T
6 F
(\256) 291 177.98 T
4 F
(  PSI ** \050) 300.38 177.98 T
6 F
(-) 357.38 177.98 T
4 F
(EPS\051) 362.59 177.98 T
(PSI * MU ** 3) 205.5 166.48 T
6 F
(\256) 291 166.48 T
4 F
(  PSI * \050MU ** 3\051) 300.38 166.48 T
(PSI + MU * XI + TAU) 171.3 154.98 T
6 F
(\256) 291 154.98 T
4 F
(  PSI + \050MU * XI\051 + TAU) 300.38 154.98 T
(PSI + MU < XI + TAU) 171.3 143.48 T
6 F
(\256) 291 143.48 T
4 F
(  \050PSI + MU\051 < \050XI + TAU\051) 300.38 143.48 T
(PSI < MU == XI >= TAU) 159.9 126.21 T
6 F
(\256) 291 126.21 T
4 F
(  \050PSI < MU\051 == \050XI >= TAU\051) 300.38 126.21 T
4 7.6 Q
(\240) 454.28 130.01 T
4 9.5 Q
-0.06 (TAU > MU & MU > RHO == TAU < RHO) 97.2 114.71 P
6 F
-0.02 (\256) 290.33 114.71 P
4 F
-0.06 (  \050TAU > MU\051 & \050\050MU > RHO\051 == \050TAU < RHO\051\051) 299.71 114.71 P
4 7.6 Q
-0.05 (\240) 538.44 118.51 P
4 9.5 Q
(P AND Q OR P AND R) 177 97.44 T
6 F
(\256) 291 97.44 T
4 F
(  \050P AND Q\051 OR \050P AND R\051) 300.38 97.44 T
(P OR Q AND P OR R) 182.7 85.94 T
6 F
(\256) 291 85.94 T
4 F
(  P OR \050Q AND P\051 OR R) 300.38 85.94 T
2 6.4 Q
(\240) 96 71.87 T
2 8 Q
(The == in this context is applied to Boolean values. The result will be TRUE whenever both sides are TRUE or both sides are FALSE.) 99.2 68.67 T
2 9 Q
(T) 171.97 618.45 T
(able A1. Order of Precedence Used by ASSIST for Mathematical Expressions) 176.84 618.45 T
(Precedence) 95.23 594.45 T
(Category) 164.86 594.45 T
(Operator) 247.51 594.45 T
(Associativity) 321.89 594.45 T
(Operand type) 396.27 594.45 T
(Result) 488.78 594.45 T
(Highest) 101.71 579.45 T
(Indexing) 164.86 579.45 T
([ ]) 259.38 579.45 T
(Left to right) 323.14 579.45 T
(Any[int]) 405.14 579.45 T
(Same) 490.29 579.45 T
(Grouping) 164.86 564.45 T
(\050 \051) 259.38 564.45 T
(Left to right) 323.14 564.45 T
(Any) 412.89 564.45 T
(Same) 490.29 564.45 T
(Binary) 164.86 549.45 T
(^) 261.39 549.45 T
(Right to left) 323.14 549.45 T
(Real ^ int) 403.28 549.45 T
(Real) 492.04 549.45 T
(Unary) 164.86 534.45 T
(-) 262 534.45 T
(Right to left) 323.14 534.45 T
(Real,int) 406.52 534.45 T
(Same) 490.29 534.45 T
(Unary) 164.86 519.45 T
(NOT) 254.25 519.45 T
(Right to left) 323.14 519.45 T
(Boolean) 405.64 519.45 T
(Boolean) 485.29 519.45 T
(Binary) 164.86 504.45 T
(**) 259 504.45 T
(Right to left) 323.14 504.45 T
(Real,int) 406.52 504.45 T
(Real,int) 486.16 504.45 T
(Binary) 164.86 489.45 T
(*,/,DIV) 228.33 489.45 T
(,MOD,CYC) 254.67 489.45 T
(Left to right) 323.14 489.45 T
(Real\050*,/\051,int) 398.89 489.45 T
(Same\050*\051, real\050/\051, int) 464.79 489.45 T
(Binary) 164.86 474.45 T
(+,) 257.37 474.45 T
6 F
(-) 264.69 474.45 T
2 F
(Left to right) 323.14 474.45 T
(Real,int) 406.52 474.45 T
(Same) 490.29 474.45 T
(Binary) 164.86 459.45 T
(<,>,<=,>=,=,<>) 235.03 459.45 T
(Left to right) 323.14 459.45 T
(Real,int) 406.52 459.45 T
(Boolean) 485.29 459.45 T
(Binary) 164.86 444.45 T
(==) 258.42 444.45 T
(Left to right) 323.14 444.45 T
(Boolean) 405.64 444.45 T
(Boolean) 485.29 444.45 T
(Binary) 164.86 429.45 T
(AND,&) 249.13 429.45 T
(Left to right) 323.14 429.45 T
(Boolean) 405.64 429.45 T
(Boolean) 485.29 429.45 T
(Lowest) 102.47 414.45 T
(Binary) 164.86 414.45 T
(OR,|,XOR) 244.6 414.45 T
(Left to right) 323.14 414.45 T
(Boolean) 405.64 414.45 T
(Boolean) 485.29 414.45 T
(N/A) 107.96 399.45 T
(Rate dest.) 164.86 399.45 T
(++,) 251.98 399.45 T
6 F
(-) 264.39 399.45 T
(-) 270.07 399.45 T
2 F
(N/A) 337.89 399.45 T
(State-space-var) 392.03 399.45 T
(.) 447.01 399.45 T
(Same) 490.29 399.45 T
87.57 603.2 87.57 393.7 2 L
V
0.5 H
0 Z
N
143.86 603.7 143.86 393.2 2 L
V
N
218.86 603.7 218.86 393.2 2 L
V
N
308.14 603.7 308.14 393.2 2 L
V
N
383.14 603.7 383.14 393.2 2 L
V
N
458.14 603.7 458.14 393.2 2 L
V
N
542.43 603.2 542.43 393.7 2 L
V
N
87.32 603.45 542.68 603.45 2 L
V
N
87.32 588.45 542.68 588.45 2 L
V
N
87.32 408.45 542.68 408.45 2 L
V
N
87.32 393.45 542.68 393.45 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "54" 59
%%Page: "55" 60
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(55) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.22 (In some instances, in order to avoid overflow/underflow, it is assumed that the user really intended) 105 718.67 P
(to do real  arithmetic.  These instances are) 87 705.67 T
4 9 Q
(<integer>) 162 687.33 T
4 10 Q
( **) 210.6 687.33 T
4 9 Q
(<negative-integer>) 234.6 687.33 T
6 10 Q
(\256) 343.8 687.33 T
4 9 Q
(<real>) 365.67 687.33 T
(<integer>) 134.49 675.33 T
4 10 Q
( **) 183.09 675.33 T
4 9 Q
(<large-positive-integer>) 207.09 675.33 T
6 10 Q
(\256) 342.69 675.33 T
4 9 Q
(<real>) 364.56 675.33 T
(<integer>) 210 663.33 T
4 10 Q
( /) 258.6 663.33 T
4 9 Q
(<integer>) 276.6 663.33 T
6 10 Q
(  \256) 337.2 663.33 T
4 9 Q
(<real>) 364.07 663.33 T
2 11 Q
(For example) 105 645.67 T
4 10 Q
( 2  **  -3) 132 627.33 T
6 F
(\256) 204 627.33 T
4 F
(  0.125) 213.87 627.33 T
( 10  **  9) 132 615.33 T
6 F
(\256) 204 615.33 T
4 F
(  1,000,000,000) 213.87 615.33 T
(10  **  11) 132 603.33 T
6 F
(\256) 204 603.33 T
4 F
(  100,000,000,000.0) 213.87 603.33 T
(       3/2) 132 591.33 T
6 F
(\256) 204 591.33 T
4 F
(  1.5) 213.87 591.33 T
(   9 DIV 2) 132 579.33 T
6 F
(\256) 204 579.33 T
4 F
(  4        \050integer result\051) 213.87 579.33 T
(   9 MOD 2) 132 567.33 T
6 F
(\256) 204 567.33 T
4 F
(  1        \050integer result\051) 213.87 567.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "55" 60
%%Page: "56" 61
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(56) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Appendix) 87 718 T
(B) 142 718 T
(BNF Language Description) 87 692 T
2 11 Q
0.86 (Appendix B gives a complete description of the ASSIST language syntax using the Backus-Naur) 105 673.67 P
(Form \050BNF\051 grammar.) 87 660.67 T
4 9 Q
(<program>) 194.4 643 T
(::=) 255 643 T
(<setup-section>  <start-section>  <rule-section>) 282 643 T
(<setup-section>) 162 621 T
(::=) 255 621 T
(<setup-stat-seq>  <SPACE-stat>) 282 621 T
(<start-section>) 162 599 T
(::=) 255 599 T
(<start-stat-seq>  <START-stat>  <start-stat-seq>) 282 599 T
(<rule-section>) 167.4 577 T
(::=) 255 577 T
(<rule-stat-seq>) 282 577 T
(<setup-stat-seq>) 156.6 543 T
(::=) 255 543 T
6 F
(e) 282 543 T
4 F
( |) 255 532 T
(<any-setup-sec-stat>  <setup-stat-seq>) 282 532 T
(<start-stat-seq>) 156.6 510 T
(::=) 255 510 T
6 F
(e) 282 510 T
4 F
( |) 255 499 T
(<any-start-sec-stat>  <start-stat-seq>) 282 499 T
(<rule-stat-seq>) 162 477 T
(::=) 255 477 T
(<any-rule-sec-stat>) 282 477 T
( |) 255 466 T
(<any-rule-sec-stat>  <rule-stat-seq>) 282 466 T
(<any-setup-sec-stat>) 135 432 T
(::=) 255 432 T
(<global-stat>) 282 432 T
( |) 255 421 T
(<pre-rule-global-stat>) 282 421 T
(<any-start-sec-stat>) 135 399 T
(::=) 255 399 T
(<global-stat>) 282 399 T
( |) 255 388 T
(<pre-rule-global-stat>) 282 388 T
( |) 255 377 T
(<dep-variable-def>) 282 377 T
( |) 255 366 T
(<function-def>) 282 366 T
( |) 255 355 T
(<impl-function-def>) 282 355 T
(<any-rule-sec-stat>) 140.4 333 T
(::=) 255 333 T
(<global-stat>) 282 333 T
( |) 255 322 T
(<ASSERT-stat>) 282 322 T
( |) 255 311 T
(<DEATHIF-stat>) 282 311 T
( |) 255 300 T
(<PRUNEIF-stat>) 282 300 T
( |) 255 289 T
(<TRANTO-stat>) 282 289 T
( |) 255 278 T
(<IF-stat>) 282 278 T
( |) 255 267 T
(<FOR-stat>) 282 267 T
(<pre-rule-global-stat>) 124.2 245 T
(::=) 255 245 T
(<quoted-SURE-stat>) 282 245 T
( |) 255 234 T
(<constant-def-stat>) 282 234 T
( |) 255 223 T
(<option-def-stat>) 282 223 T
( |) 255 212 T
(<INPUT-stat>) 282 212 T
(<global-stat>) 172.8 190 T
(::=) 255 190 T
(<debug-stat>) 282 190 T
( |) 255 179 T
(<command-option-stat>) 282 179 T
4 7.2 Q
(#) 395.4 182.6 T
4 9 Q
( |) 255 168 T
(<empty-stat>) 282 168 T
(<any-statement>) 162 146 T
(::=) 255 146 T
(<any-setup-sec-stat>) 282 146 T
( |) 255 135 T
(<any-start-sec-stat>) 282 135 T
( |) 255 124 T
(<any-rule-sec-stat>) 282 124 T
( |) 255 113 T
(<SPACE-stat>) 282 113 T
( |) 255 102 T
(<START-stat>) 282 102 T
(<reserved-word>) 162 80 T
(::=) 255 80 T
(<sensitive-keyword>) 282 80 T
( |) 255 69 T
(<built-in-func-name>) 282 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "56" 61
%%Page: "57" 62
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(57) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
( |) 255 720 T
(<pre-defined-constant>) 282 720 T
( |) 255 709 T
(<descriptive-operator>) 282 709 T
( |) 255 698 T
(<statement-name>) 282 698 T
(<sensitive-keyword>) 140.4 672.71 T
(::=) 255 672.71 T
3 10.5 Q
(BY) 282 672.71 T
4 9 Q
( |) 255 661.71 T
3 10.5 Q
(FAST) 282 661.71 T
4 9 Q
( |) 255 650.71 T
3 10.5 Q
(THEN) 282 650.71 T
4 9 Q
( |) 255 639.71 T
3 10.5 Q
(ELSE) 282 639.71 T
4 9 Q
( |) 255 628.71 T
3 10.5 Q
(ENDIF) 282 628.71 T
4 9 Q
( |) 255 617.71 T
3 10.5 Q
(ENDFOR) 282 617.71 T
4 9 Q
( |) 255 606.71 T
3 10.5 Q
(WITH) 282 606.71 T
4 9 Q
( |) 255 595.71 T
3 10.5 Q
(OF) 282 595.71 T
4 9 Q
( |) 255 584.71 T
3 10.5 Q
(IN) 282 584.71 T
4 9 Q
( |) 255 573.71 T
3 10.5 Q
(ARRAY) 282 573.71 T
4 9 Q
( |) 255 562.71 T
3 10.5 Q
(ON) 282 562.71 T
4 9 Q
( |) 255 551.71 T
3 10.5 Q
(OFF) 282 551.71 T
4 9 Q
( |) 255 540.71 T
3 10.5 Q
(FULL) 282 540.71 T
4 9 Q
( |) 255 529.71 T
3 10.5 Q
(BOOLEAN) 282 529.71 T
4 9 Q
(<pre-defined-constant>) 124.2 504.43 T
(::=) 255 504.43 T
(<option-def-name>) 282 504.43 T
( |) 255 493.43 T
3 10.5 Q
(AUTOFAST) 282 493.43 T
4 9 Q
( |) 255 482.43 T
3 10.5 Q
(TRIMOMEGA) 282 482.43 T
4 9 Q
( |) 255 471.43 T
3 10.5 Q
(TRUE) 282 471.43 T
4 9 Q
( |) 255 460.43 T
3 10.5 Q
(FALSE) 282 460.43 T
4 9 Q
(<descriptive-operator>) 124.2 435.14 T
(::=) 255 435.14 T
3 10.5 Q
(AND) 282 435.14 T
4 9 Q
( |) 255 424.14 T
3 10.5 Q
(OR) 282 424.14 T
4 9 Q
( |) 255 413.14 T
3 10.5 Q
(NOT) 282 413.14 T
4 9 Q
( |) 255 402.14 T
3 10.5 Q
(MOD) 282 402.14 T
4 9 Q
( |) 255 391.14 T
3 10.5 Q
(CYC) 282 391.14 T
4 9 Q
( |) 255 380.14 T
3 10.5 Q
(DIV) 282 380.14 T
4 9 Q
(<statement-name>) 156.6 354.86 T
(::=) 255 354.86 T
(<option-def-name>) 282 354.86 T
( |) 255 343.86 T
3 10.5 Q
(C_OPTION) 282 343.86 T
4 9 Q
( |) 255 332.86 T
3 10.5 Q
(DEBUG$) 282 332.86 T
4 9 Q
( |) 255 321.86 T
3 10.5 Q
(INPUT) 282 321.86 T
4 9 Q
( |) 255 310.86 T
3 10.5 Q
(SPACE) 282 310.86 T
4 9 Q
( |) 255 299.86 T
3 10.5 Q
(FUNCTION) 282 299.86 T
4 9 Q
( |) 255 288.86 T
3 10.5 Q
(IMPLICIT) 282 288.86 T
4 9 Q
( |) 255 277.86 T
3 10.5 Q
(VARIABLE) 282 277.86 T
4 9 Q
( |) 255 266.86 T
3 10.5 Q
(START) 282 266.86 T
4 9 Q
( |) 255 255.86 T
3 10.5 Q
(ASSERT) 282 255.86 T
4 9 Q
( |) 255 244.86 T
3 10.5 Q
(DEATHIF) 282 244.86 T
4 9 Q
( |) 255 233.86 T
3 10.5 Q
(PRUNEIF) 282 233.86 T
4 9 Q
( |) 255 222.86 T
3 10.5 Q
(PRUNIF) 282 222.86 T
4 9 Q
( |) 255 211.86 T
3 10.5 Q
(TRANTO) 282 211.86 T
4 9 Q
( |) 255 200.86 T
3 10.5 Q
(IF) 282 200.86 T
4 9 Q
( |) 255 189.86 T
3 10.5 Q
(FOR) 282 189.86 T
4 9 Q
(<option-def-name>) 151.2 164.57 T
(::=) 255 164.57 T
3 10.5 Q
(ONEDEATH) 282 164.57 T
4 9 Q
( |) 255 153.57 T
3 10.5 Q
(COMMENT) 282 153.57 T
4 9 Q
( |) 255 142.57 T
3 10.5 Q
(ECHO) 282 142.57 T
4 9 Q
( |) 255 131.57 T
3 10.5 Q
(TRIM) 282 131.57 T
4 9 Q
(<constant-def-stat>) 140.4 91 T
(::=) 255 91 T
(<named-constant>  =  <const-var-def-clause>  ;) 282 91 T
(<const-var-def-clause>) 124.2 80 T
(::=) 255 80 T
(<constant-def-clause>) 282 80 T
( |) 255 69 T
3 10.5 Q
(BOOLEAN) 282 69 T
4 9 Q
(  <constant-def-clause>) 334.51 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "57" 62
%%Page: "58" 63
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(58) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
(<constant-def-clause>) 129.6 720 T
(::=) 255 720 T
(<expr>  ;) 282 720 T
( |) 255 709 T
3 10.5 Q
(ARRAY) 282 709 T
4 9 Q
(  \050  <expr-list-with-of>  \051  ;) 319.9 709 T
( |) 255 698 T
(<single-sub-array>  ;) 282 698 T
( |) 255 687 T
(<double-sub-array>  ;) 282 687 T
(<double-sub-array>) 145.8 665 T
(::=) 255 665 T
([  <sub-array-list>  ]) 282 665 T
(<sub-array-list>) 156.6 643 T
(::=) 255 643 T
(<single-sub-array>  ,  <single-sub-array>) 282 643 T
( |) 255 632 T
(<single-sub-array>  ,  <sub-array-list>) 282 632 T
(<single-sub-array>) 145.8 610 T
(::=) 255 610 T
([  <expr-list-with-of>  ]) 282 610 T
(<option-def-stat>) 151.2 588 T
(::=) 255 588 T
3 10.5 Q
(ONEDEATH) 282 588 T
4 9 Q
(  <flag-status>  ;) 342.09 588 T
( |) 255 577 T
3 10.5 Q
(COMMENT) 282 577 T
4 9 Q
(  <flag-status>  ;) 339.16 577 T
( |) 255 566 T
3 10.5 Q
(ECHO) 282 566 T
4 9 Q
(  <flag-status>  ;) 312.92 566 T
( |) 255 555 T
3 10.5 Q
(TRIM) 282 555 T
4 9 Q
(  <flag-status>  ;) 310.58 555 T
( |) 255 544 T
3 10.5 Q
(TRIM) 282 544 T
4 9 Q
(  <flag-status>) 310.58 544 T
3 10.5 Q
(WITH) 402.38 544 T
4 9 Q
(  <expr>  ;) 432.14 544 T
(<INPUT-stat>) 178.2 522 T
(::=) 255 522 T
3 10.5 Q
(INPUT) 282 522 T
4 9 Q
(  <input-list>  ;) 314.67 522 T
(<SPACE-stat>) 178.2 500 T
(::=) 255 500 T
3 10.5 Q
(SPACE) 282 500 T
4 9 Q
( = <space-picture>  ;) 316.42 500 T
(<function-def>) 167.4 466 T
(::=) 255 466 T
3 10.5 Q
(FUNCTION) 282 466 T
4 9 Q
(  <function-name>  \050  <function-parm-) 338 466 T
(list>  \051  =     <expr>  ;) 282 455 T
(<impl-function-def>) 140.4 433 T
(::=) 255 433 T
3 10.5 Q
(IMPLICIT) 282 433 T
4 9 Q
(  <impl-func-name>  [  <impl-parm-) 332.17 433 T
(list>  ]  =  <expr>  ;) 282 422 T
( |) 255 411 T
3 10.5 Q
(IMPLICIT) 282 411 T
4 9 Q
(  <impl-func-name>) 332.17 411 T
(         [  <impl-parm-list>  ]  \050  <index-parm-) 282 400 T
(list>  \051  =     <expr>  ;) 282 389 T
(<dep-variable-def>) 145.8 367 T
(::=) 255 367 T
3 10.5 Q
(VARIABLE) 282 367 T
4 9 Q
(  <impl-func-name>  [  <impl-parm-) 337.42 367 T
(list>  ]  =  <const-var-def-clause>  ;) 282 356 T
(<START-stat>) 178.2 322 T
(::=) 255 322 T
3 10.5 Q
(START) 282 322 T
4 9 Q
( = <space-expression>  ;>) 317.01 322 T
(<ASSERT-stat>) 172.8 300 T
(::=) 255 300 T
3 10.5 Q
(ASSERT) 282 300 T
4 9 Q
(  <boolean-expression>  ;) 322.85 300 T
(<DEATHIF-stat>) 167.4 278 T
(::=) 255 278 T
3 10.5 Q
(DEATHIF) 282 278 T
4 9 Q
(  <boolean-expression>  ;) 329.84 278 T
(<PRUNEIF-stat>) 167.4 256 T
(::=) 255 256 T
3 10.5 Q
(PRUNEIF) 282 256 T
4 9 Q
(  <boolean-expression>  ;) 328.66 256 T
( |) 255 245 T
3 10.5 Q
(PRUNIF) 282 245 T
4 9 Q
(  <boolean-expression>  ;>) 321.66 245 T
(<TRANTO-stat>) 172.8 223 T
(::=) 255 223 T
3 10.5 Q
(IF) 282 223 T
4 9 Q
( <boolean-expression>  <TRANTO-clause>  ;) 292.5 223 T
( |) 255 212 T
(<TRANTO-clause>  ;) 282 212 T
(<IF-stat>) 194.4 190 T
(::=) 255 190 T
3 10.5 Q
(IF) 282 190 T
4 9 Q
( <boolean-expression>) 292.5 190 T
3 10.5 Q
(THEN) 416.7 190 T
4 9 Q
(   <rule-stat-seq>) 282 179 T
3 10.5 Q
(ENDIF) 282 168 T
4 9 Q
(  ;) 314.67 168 T
( |) 255 157 T
3 10.5 Q
(IF) 282 157 T
4 9 Q
( <boolean-expression>) 292.5 157 T
3 10.5 Q
(THEN) 416.7 157 T
4 9 Q
(   <rule-stat-seq>) 282 146 T
3 10.5 Q
(ELSE) 282 135 T
4 9 Q
(   <rule-stat-seq>) 282 124 T
3 10.5 Q
(ENDIF) 282 113 T
4 9 Q
(  ;) 314.67 113 T
(<FOR-stat>) 189 91 T
(::=) 255 91 T
3 10.5 Q
(FOR) 282 91 T
4 9 Q
( <for-range>) 304.17 91 T
(     <rule-stat-seq>) 282 80 T
3 10.5 Q
(ENDFOR) 282 69 T
4 9 Q
(  ;) 326.33 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "58" 63
%%Page: "59" 64
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(59) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
(<quoted-SURE-stat>) 145.8 720 T
(::=) 255 720 T
(\322  <quot-text>\323) 282 720 T
(<command-option-stat>) 129.6 683.64 T
(::=) 255 683.64 T
3 10.5 Q
(C_OPTION) 282 683.64 T
4 9 Q
(  <identifier>  ;) 336.25 683.64 T
( |) 255 672.64 T
3 10.5 Q
(C_OPTION) 282 672.64 T
4 9 Q
(  <identifier>  =  <value>  ;) 336.25 672.64 T
(<debug-stat>) 178.2 636.27 T
(::=) 255 636.27 T
3 10.5 Q
(DEBUG$) 282 636.27 T
4 9 Q
(  ;) 324.59 636.27 T
( |) 255 625.27 T
3 10.5 Q
(DEBUG$) 282 625.27 T
4 9 Q
(  <identifier>  ;) 324.59 625.27 T
(<empty-stat>) 178.2 614.27 T
(::=) 255 614.27 T
(;>) 282 614.27 T
(<TRANTO-clause>) 162 577.91 T
(::=) 255 577.91 T
3 10.5 Q
(TRANTO) 282 577.91 T
4 9 Q
(  <space-destination-list>) 326.92 577.91 T
3 10.5 Q
(BY) 478.12 577.91 T
4 9 Q
(<rate-expression>) 282 566.91 T
( |) 255 555.91 T
3 10.5 Q
(TRANTO) 282 555.91 T
4 9 Q
(  <space-expression>) 326.92 555.91 T
3 10.5 Q
(BY) 445.72 555.91 T
4 9 Q
(<rate-expression>) 282 544.91 T
(<flag-status>) 172.8 508.55 T
(::=) 255 508.55 T
6 F
(e) 282 508.55 T
4 F
( |) 255 497.55 T
3 10.5 Q
(OFF) 282 497.55 T
4 9 Q
( |) 255 486.55 T
3 10.5 Q
(ON) 282 486.55 T
4 9 Q
( |) 255 475.55 T
3 10.5 Q
(FULL) 282 475.55 T
4 9 Q
( |) 255 464.55 T
3 10.5 Q
(= 0) 282 464.55 T
4 9 Q
( |) 255 453.55 T
3 10.5 Q
(= 1) 282 453.55 T
4 9 Q
( |) 255 442.55 T
3 10.5 Q
(= 2) 282 442.55 T
4 9 Q
(<input-list>) 178.2 406.18 T
(::=) 255 406.18 T
(<input-item>) 282 406.18 T
( |) 255 395.18 T
(<input-item>  ,  <input-list>) 282 395.18 T
(<input-item>) 178.2 358.82 T
(::=) 255 358.82 T
(<named-constant>) 282 358.82 T
( |) 255 347.82 T
(<prompt-message>  :  <named-constant>) 282 347.82 T
( |) 255 336.82 T
3 10.5 Q
(BOOLEAN) 282 336.82 T
4 9 Q
(  <named-constant>) 334.51 336.82 T
( |) 255 325.82 T
3 10.5 Q
-0.17 (BOOLEAN) 282 325.82 P
4 9 Q
-0.35 (  <prompt-message>  :  <named-constant>) 334.51 325.82 P
(<prompt-message>) 156.6 302.64 T
(::=) 255 302.64 T
(\322  <quot-text>  \322) 282 302.64 T
(<function-parm-list>) 135 266.27 T
(::=) 255 266.27 T
6 F
(e) 282 266.27 T
4 F
( |) 255 255.27 T
(<identifier>) 282 255.27 T
( |) 255 244.27 T
(<identifier>  ,  <function-parm-list>) 282 244.27 T
(<index-parm-list>) 151.2 221.09 T
(::=) 255 221.09 T
(<identifier>) 282 221.09 T
( |) 255 210.09 T
(<identifier>  ,  <index-parm-list>) 282 210.09 T
(<impl-parm-list>) 156.6 186.91 T
(::=) 255 186.91 T
(<state-space-var>) 282 186.91 T
( |) 255 175.91 T
(<state-space-var>  ,  <impl-parm-list>) 282 175.91 T
(<quot-text>) 183.6 139.54 T
(::=) 255 139.54 T
6 F
(e) 282 139.54 T
4 F
( |) 255 128.54 T
(<quot-text-char>  <quot-text>) 282 128.54 T
(<quot-text-char>) 156.6 105.36 T
(::=) 255 105.36 T
(<non-quote-ascii-char>) 282 105.36 T
(<space-expression>) 145.8 69 T
(::=) 255 69 T
(\050  <space-expr-list>  \051) 282 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "59" 64
%%Page: "60" 65
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(60) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
(<space-expr-list>) 151.2 720 T
(::=) 255 720 T
(<space-expr-item>) 282 720 T
( |) 255 709 T
(<space-expr-item>  ,  <space-expr-list>) 282 709 T
(<space-expr-item>) 151.2 686.47 T
(::=) 255 686.47 T
(<whole-or-boolean-expression>) 282 686.47 T
( |) 255 675.47 T
(<whole-expression>) 282 675.47 T
3 10.5 Q
(OF) 390 675.47 T
4 9 Q
(  <whole-or-boolean-) 404.58 675.47 T
(expression>) 282 664.47 T
( |) 255 653.47 T
(<space-expression>) 282 653.47 T
(<space-picture>) 162 618.42 T
(::=) 255 618.42 T
(\050  <space-item-list>  \051) 282 618.42 T
(<space-item-list>) 151.2 595.9 T
(::=) 255 595.9 T
(<space-item>) 282 595.9 T
( |) 255 584.9 T
(<space-item>  ,  <space-item-list>) 282 584.9 T
(<space-item>) 178.2 562.37 T
(::=) 255 562.37 T
(<state-space-var>) 282 562.37 T
( |) 255 551.37 T
(<state-space-var>  :  <i-range>) 282 551.37 T
( |) 255 540.37 T
(<state-space-var>  :) 282 540.37 T
3 10.5 Q
(BOOLEAN) 400.8 540.37 T
4 9 Q
( |) 255 529.37 T
(<space-picture>) 282 529.37 T
( |) 255 518.37 T
(<state-space-var>  :) 282 518.37 T
3 10.5 Q
(ARRAY) 400.8 518.37 T
4 9 Q
([  <array-range>  ]) 282 507.37 T
( |) 255 496.37 T
(<state-space-var>  :) 282 496.37 T
3 10.5 Q
(ARRAY) 400.8 496.37 T
4 9 Q
([  <array-range>) 282 485.37 T
3 10.5 Q
(OF) 379.2 485.37 T
4 9 Q
(  <i-range>) 393.78 485.37 T
( |) 255 474.37 T
(<state-space-var>  :) 282 474.37 T
3 10.5 Q
(ARRAY) 400.8 474.37 T
4 9 Q
([  <array-range>) 282 463.37 T
3 10.5 Q
(OF) 379.2 463.37 T
(BOOLEAN) 404.58 463.37 T
4 9 Q
(<array-range>) 172.8 440.84 T
(::=) 255 440.84 T
(<i-range>) 282 440.84 T
( |) 255 429.84 T
(<i-range>  ,  <i-range>) 282 429.84 T
(<space-destination-list>) 113.4 394.79 T
(::=) 255 394.79 T
(<space-destination>) 282 394.79 T
( |) 255 383.79 T
(<space-destination>  ,  <space-destination-list>) 282 383.79 T
(<space-destination>) 140.4 361.26 T
(::=) 255 361.26 T
(<dest-adj-clause>) 282 361.26 T
(<dest-adj-clause>) 151.2 338.74 T
(::=) 255 338.74 T
(<state-space-var> = <whole-or-boolean-) 282 338.74 T
(expression>) 282 327.74 T
( |) 255 316.74 T
(<state-space-var>  <inc-op>) 282 316.74 T
(<for-range>) 183.6 281.68 T
(::=) 255 281.68 T
(<index-variable>  =  <whole-expression>  ,) 282 281.68 T
(<whole-expression>) 282 270.68 T
4 6.8 Q
(\240) 379.2 274.08 T
4 9 Q
( |) 255 259.68 T
(<index-variable>) 282 259.68 T
3 10.5 Q
(IN) 379.2 259.68 T
4 9 Q
(  <set>) 390.86 259.68 T
(<set>) 216 237.16 T
(::=) 255 237.16 T
([  <set-range-list>  ]) 282 237.16 T
(<set-range-list>) 156.6 214.63 T
(::=) 255 214.63 T
(<i-range>) 282 214.63 T
( |) 255 203.63 T
(<whole-expression>) 282 203.63 T
( |) 255 192.63 T
(<i-range>  ,  <i-range-list>) 282 192.63 T
(<i-range>) 194.4 170.1 T
(::=) 255 170.1 T
(<lower-bound>  ..  <upper-bound>) 282 170.1 T
(<lower-bound>) 172.8 147.58 T
(::=) 255 147.58 T
(<range-bound>) 282 147.58 T
(<upper-bound>) 172.8 125.05 T
(::=) 255 125.05 T
(<range-bound>) 282 125.05 T
(<range-bound>) 172.8 102.53 T
(::=) 255 102.53 T
(<whole-expression>) 282 102.53 T
4 7.2 Q
(\244) 379.2 106.13 T
4 9 Q
(<rate-expression>) 151.2 80 T
(::=) 255 80 T
(<real-expression>) 282 80 T
( |) 255 69 T
(<  <real-expression>  ,  <real-expression>  >) 282 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "60" 65
%%Page: "61" 66
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(61) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
( |) 255 720 T
(<  <real-expression>  ,  <real-expression>  ,) 282 720 T
(<real-expression>  >) 282 709 T
( |) 255 698 T
3 10.5 Q
(FAST) 282 698 T
4 9 Q
(  <real-expression>) 308.84 698 T
(<expr-list-with-of>) 140.4 662.78 T
(::=) 255 662.78 T
(<expr>) 282 662.78 T
( |) 255 651.78 T
(<whole-expression>) 282 651.78 T
3 10.5 Q
(OF) 390 651.78 T
4 9 Q
(  <expr>) 404.58 651.78 T
( |) 255 640.78 T
(<expr>  ,  <expr-list-with-of>) 282 640.78 T
( |) 255 629.78 T
(<whole-expression>) 282 629.78 T
3 10.5 Q
(OF) 390 629.78 T
4 9 Q
(  <expr>  ,) 404.58 629.78 T
(<expr-list-with-of>) 282 618.78 T
(<expression-list>) 151.2 596.17 T
(::=) 255 596.17 T
(<expr>) 282 596.17 T
( |) 255 585.17 T
(<expr>  ,  <expression-list>) 282 585.17 T
(<built-in-expr-list>) 135 562.56 T
(::=) 255 562.56 T
(<expr>) 282 562.56 T
( |) 255 551.56 T
(<expr>  ,  <built-in-expr-list>) 282 551.56 T
( |) 255 540.56 T
(<wild-sub-array>) 282 540.56 T
( |) 255 529.56 T
(<wild-sub-array>  ,  <built-in-expr-list>) 282 529.56 T
(<wild-sub-array>) 156.6 506.95 T
(::=) 255 506.95 T
(<named-constant>  [  *  ,  <whole-expression>  ]) 282 506.95 T
( |) 255 495.95 T
-0.36 (<named-constant>  [  <whole-expression>  ,  *  ]>) 282 495.95 P
( |) 255 484.95 T
-0.36 (<state-space-var>  [  *  ,  <whole-expression>  ]) 282 484.95 P
( |) 255 473.95 T
(<state-space-var>  [  <whole-expression>  ,) 282 473.95 T
(*  ]>) 282 462.95 T
(<expr>) 210.6 440.33 T
(::=) 255 440.33 T
(<real-expression>) 282 440.33 T
( |) 255 429.33 T
(<whole-expression>) 282 429.33 T
( |) 255 418.33 T
(<boolean-expression>) 282 418.33 T
(<whole-or-boolean-expression>) 87 395.72 T
(::=) 255 395.72 T
(<whole-expression>) 282 395.72 T
( |) 255 384.72 T
(<boolean-expression>) 282 384.72 T
(<whole-expression>) 145.8 362.11 T
(::=) 255 362.11 T
(<integer-expression>) 282 362.11 T
(<real-expression>) 151.2 339.5 T
(::=) 255 339.5 T
(<numeric-expression>) 282 339.5 T
(<integer-expression>) 135 316.89 T
(::=) 255 316.89 T
(<numeric-expression>) 282 316.89 T
(<boolean-expression>) 135 281.67 T
(::=) 255 281.67 T
(<bool-term-expr>) 282 281.67 T
(<bool-term-expr>) 156.6 259.06 T
(::=) 255 259.06 T
(<bool-term>) 282 259.06 T
( |) 255 248.06 T
(<bool-term-expr>  <or-op>  <bool-term>) 282 248.06 T
(<bool-term>) 183.6 225.45 T
(::=) 255 225.45 T
(<bool-factor>) 282 225.45 T
( |) 255 214.45 T
(<bool-term>  <and-op>  <bool-factor>) 282 214.45 T
(<bool-factor>) 172.8 191.83 T
(::=) 255 191.83 T
(<bool-item>) 282 191.83 T
( |) 255 180.83 T
(<bool-item>  ==  <bool-item>) 282 180.83 T
(<bool-item>) 183.6 158.22 T
(::=) 255 158.22 T
(<numeric-comparison>) 282 158.22 T
( |) 255 147.22 T
(<simple-bool-item>) 282 147.22 T
(<numeric-comparison>) 135 124.61 T
(::=) 255 124.61 T
(<whole-expression>  <relation>) 282 124.61 T
(<whole-expression>) 282 113.61 T
(<simple-bool-item>) 145.8 91 T
(::=) 255 91 T
(<non-index-single-item>) 282 91 T
( |) 255 80 T
(<truth-value>) 282 80 T
( |) 255 69 T
(<boolean-function-invocation>) 282 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "61" 66
%%Page: "62" 67
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(62) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
( |) 255 720 T
(\050  <boolean-expression>  \051) 282 720 T
( |) 255 709 T
3 10.5 Q
(NOT) 282 709 T
4 9 Q
(  <simple-bool-item>) 304.75 709 T
(<or-op>) 205.2 671.44 T
(::=) 255 671.44 T
3 10.5 Q
(OR) 282 671.44 T
4 9 Q
( |) 255 660.44 T
(|) 282 660.44 T
( |) 255 649.44 T
3 10.5 Q
(XOR) 282 649.44 T
4 9 Q
(<and-op>) 199.8 625.67 T
(::=) 255 625.67 T
3 10.5 Q
(AND) 282 625.67 T
4 9 Q
( |) 255 614.67 T
3 10.5 Q
(&) 282 614.67 T
4 9 Q
(<relation>) 189 590.89 T
(::=) 255 590.89 T
(<inequality-relation>) 282 590.89 T
( |) 255 579.89 T
(<equality-relation>) 282 579.89 T
(<inequality-relation>) 129.6 556.11 T
(::=) 255 556.11 T
(>) 282 556.11 T
( |) 255 545.11 T
(<) 282 545.11 T
( |) 255 534.11 T
(>=) 282 534.11 T
( |) 255 523.11 T
(<=) 282 523.11 T
(<equality-relation>) 140.4 499.33 T
(::=) 255 499.33 T
(<>) 282 499.33 T
( |) 255 488.33 T
(=) 282 488.33 T
(<numeric-expression>) 135 450.78 T
(::=) 255 450.78 T
(<term-expr>) 282 450.78 T
(<term-expr>) 183.6 427 T
(::=) 255 427 T
(<term>) 282 427 T
( |) 255 416 T
(<term-expr>  <add-op>  <term>) 282 416 T
(<term>) 210.6 392.22 T
(::=) 255 392.22 T
(<factor>) 282 392.22 T
( |) 255 381.22 T
(<term>  <mpy-op>  <factor>) 282 381.22 T
(<factor>) 199.8 357.45 T
(::=) 255 357.45 T
(<numeric-item>) 282 357.45 T
( |) 255 346.45 T
(<numeric-item>  <pow-op>  <factor>) 282 346.45 T
(<numeric-item>) 167.4 322.67 T
(::=) 255 322.67 T
(<bin-numeric-item>) 282 322.67 T
( |) 255 311.67 T
(<sign-op>  <numeric-item>) 282 311.67 T
(<bin-numeric-item>) 145.8 287.89 T
(::=) 255 287.89 T
(<non-index-single-item>) 282 287.89 T
( |) 255 276.89 T
(<index-variable>) 282 276.89 T
( |) 255 265.89 T
(<unsigned-value>) 282 265.89 T
( |) 255 254.89 T
(<named-constant>  <cat-op>  <bin-numeric-item>) 282 254.89 T
( |) 255 243.89 T
(<numeric-function-invocation>) 282 243.89 T
( |) 255 232.89 T
(\050  <numeric-expression>  \051) 282 232.89 T
(<add-op>) 199.8 195.33 T
(::=) 255 195.33 T
(+) 282 195.33 T
( |) 255 184.33 T
(-) 282 184.33 T
(<mpy-op>) 199.8 160.56 T
(::=) 255 160.56 T
(*) 282 160.56 T
( |) 255 149.56 T
(/) 282 149.56 T
( |) 255 138.56 T
3 10.5 Q
(MOD) 282 138.56 T
4 9 Q
( |) 255 127.56 T
3 10.5 Q
(CYC) 282 127.56 T
4 9 Q
( |) 255 116.56 T
3 10.5 Q
(DIV) 282 116.56 T
4 9 Q
(<pow-op>) 199.8 92.78 T
(::=) 255 92.78 T
(**) 282 92.78 T
(<sign-op>) 194.4 69 T
(::=) 255 69 T
(-) 282 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "62" 67
%%Page: "63" 68
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(63) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
(<inc-op>) 199.8 720 T
(::=) 255 720 T
(++) 282 720 T
( |) 255 709 T
(--) 282 709 T
(<cat-op>) 199.8 686.5 T
(::=) 255 686.5 T
(^) 282 686.5 T
(<boolean-function-invocation>) 87 651.5 T
(::=) 255 651.5 T
(<function-invocation>) 282 651.5 T
(<numeric-function-invocation>) 87 629 T
(::=) 255 629 T
(<function-invocation>) 282 629 T
(<function-invocation>) 129.6 606.5 T
(::=) 255 606.5 T
(<impl-func-name>) 282 606.5 T
( |) 255 595.5 T
(<function-name>  \050  <expression-list>  \051) 282 595.5 T
( |) 255 584.5 T
(<built-in-name>  \050  <built-in-expr-list>  \051) 282 584.5 T
(<non-index-single-item>) 118.8 549.5 T
(::=) 255 549.5 T
(<named-constant>) 282 549.5 T
( |) 255 538.5 T
(<named-constant>  [  <whole-expression>  ]) 282 538.5 T
( |) 255 527.5 T
(<named-constant>  [  <whole-expression>) 282 527.5 T
(<whole-expression>  ]) 282 516.5 T
( |) 255 505.5 T
(<state-space-var>) 282 505.5 T
( |) 255 494.5 T
(<state-space-var>  [  <whole-expression>  ]) 282 494.5 T
( |) 255 483.5 T
(<state-space-var>  [  <whole-expression>) 282 483.5 T
(<whole-expression>  ]) 282 472.5 T
(<function-name>) 162 437.5 T
(::=) 255 437.5 T
(<identifier>) 282 437.5 T
(<impl-func-name>) 156.6 415 T
(::=) 255 415 T
(<identifier>) 282 415 T
(<built-in-name>) 162 392.5 T
(::=) 255 392.5 T
3 10.5 Q
(SQRT) 282 392.5 T
4 9 Q
(|) 345 392.5 T
3 10.5 Q
(EXP) 363 392.5 T
4 9 Q
(|) 429 392.5 T
3 10.5 Q
(LN) 447 392.5 T
4 9 Q
( |) 255 381.5 T
3 10.5 Q
(SIN) 282 381.5 T
4 9 Q
(|) 345 381.5 T
3 10.5 Q
(COS) 363 381.5 T
4 9 Q
(|) 429 381.5 T
3 10.5 Q
(TAN) 447 381.5 T
4 9 Q
( |) 255 370.5 T
3 10.5 Q
(ARCSIN) 282 370.5 T
4 9 Q
(|) 345 370.5 T
3 10.5 Q
(ARCCOS) 363 370.5 T
4 9 Q
(|) 429 370.5 T
3 10.5 Q
(ARCTAN) 447 370.5 T
4 9 Q
( |) 255 359.5 T
3 10.5 Q
(FACT) 282 359.5 T
4 9 Q
(|) 345 359.5 T
3 10.5 Q
(SUM) 363 359.5 T
4 9 Q
(|) 429 359.5 T
3 10.5 Q
(COUNT) 447 359.5 T
4 9 Q
( |) 255 348.5 T
3 10.5 Q
(COMB) 282 348.5 T
4 9 Q
(|) 345 348.5 T
3 10.5 Q
(PERM) 363 348.5 T
4 9 Q
(|) 429 348.5 T
3 10.5 Q
(ABS) 447 348.5 T
4 9 Q
( |) 255 337.5 T
3 10.5 Q
(ANY) 282 337.5 T
4 9 Q
(|) 345 337.5 T
3 10.5 Q
(ALL) 363 337.5 T
4 9 Q
(|) 429 337.5 T
3 10.5 Q
(SIZE) 447 337.5 T
4 9 Q
( |) 255 326.5 T
3 10.5 Q
(MIN) 282 326.5 T
4 9 Q
(|) 345 326.5 T
3 10.5 Q
(MAX) 363 326.5 T
4 9 Q
(<truth-value>) 172.8 291.5 T
(::=) 255 291.5 T
3 10.5 Q
(FALSE) 282 291.5 T
4 9 Q
( |) 255 280.5 T
3 10.5 Q
(TRUE) 282 280.5 T
4 9 Q
(<comment>) 194.4 258 T
(::=) 255 258 T
(\050*  <text>  *\051) 282 258 T
( |) 255 247 T
({  <text>  }) 282 247 T
(<under>) 205.2 224.5 T
(::=) 255 224.5 T
(-) 282 224.5 T
(<dollar>) 199.8 202 T
(::=) 255 202 T
($) 282 202 T
(<E-char>) 199.8 179.5 T
(::=) 255 179.5 T
3 10.5 Q
(E) 282 179.5 T
4 9 Q
(|) 297 179.5 T
3 10.5 Q
(e) 304.8 179.5 T
4 9 Q
(|) 321 179.5 T
3 10.5 Q
(D) 328.8 179.5 T
4 9 Q
(|) 345 179.5 T
3 10.5 Q
(d) 352.8 179.5 T
4 9 Q
(<letter>) 199.8 157 T
(::=) 255 157 T
3 10.5 Q
(A) 282 157 T
4 9 Q
(|) 297 157 T
3 10.5 Q
(B) 304.8 157 T
4 9 Q
(|) 321 157 T
3 10.5 Q
(C) 328.8 157 T
4 9 Q
(|) 345 157 T
3 10.5 Q
(D) 352.8 157 T
4 9 Q
(|) 369 157 T
3 10.5 Q
(E) 376.8 157 T
4 9 Q
( |) 255 146 T
3 10.5 Q
(F) 282 146 T
4 9 Q
(|) 297 146 T
3 10.5 Q
(G) 304.8 146 T
4 9 Q
(|) 321 146 T
3 10.5 Q
(H) 328.8 146 T
4 9 Q
(|) 345 146 T
3 10.5 Q
(I) 352.8 146 T
4 9 Q
(|) 369 146 T
3 10.5 Q
(J) 376.8 146 T
4 9 Q
( |) 255 135 T
3 10.5 Q
(K) 282 135 T
4 9 Q
(|) 297 135 T
3 10.5 Q
(L) 304.8 135 T
4 9 Q
(|) 321 135 T
3 10.5 Q
(M) 328.8 135 T
4 9 Q
(|) 345 135 T
3 10.5 Q
(N) 352.8 135 T
4 9 Q
(|) 369 135 T
3 10.5 Q
(O) 376.8 135 T
4 9 Q
( |) 255 124 T
3 10.5 Q
(P) 282 124 T
4 9 Q
(|) 297 124 T
3 10.5 Q
(Q) 304.8 124 T
4 9 Q
(|) 321 124 T
3 10.5 Q
(R) 328.8 124 T
4 9 Q
(|) 345 124 T
3 10.5 Q
(S) 352.8 124 T
4 9 Q
(|) 369 124 T
3 10.5 Q
(T) 376.8 124 T
4 9 Q
( |) 255 113 T
3 10.5 Q
(U) 282 113 T
4 9 Q
(|) 297 113 T
3 10.5 Q
(V) 304.8 113 T
4 9 Q
(|) 321 113 T
3 10.5 Q
(W) 328.8 113 T
4 9 Q
(|) 345 113 T
3 10.5 Q
(X) 352.8 113 T
4 9 Q
(|) 369 113 T
3 10.5 Q
(Y) 376.8 113 T
4 9 Q
( |) 255 102 T
3 10.5 Q
(Z) 282 102 T
4 9 Q
( |) 255 91 T
3 10.5 Q
(a) 282 91 T
4 9 Q
(|) 297 91 T
3 10.5 Q
(b) 304.8 91 T
4 9 Q
(|) 321 91 T
3 10.5 Q
(c) 328.8 91 T
4 9 Q
(|) 345 91 T
3 10.5 Q
(d) 352.8 91 T
4 9 Q
(|) 369 91 T
3 10.5 Q
(e) 376.8 91 T
4 9 Q
( |) 255 80 T
3 10.5 Q
(f) 282 80 T
4 9 Q
(|) 297 80 T
3 10.5 Q
(g) 304.8 80 T
4 9 Q
(|) 321 80 T
3 10.5 Q
(h) 328.8 80 T
4 9 Q
(|) 345 80 T
3 10.5 Q
(i) 352.8 80 T
4 9 Q
(|) 369 80 T
3 10.5 Q
(j) 376.8 80 T
4 9 Q
( |) 255 69 T
3 10.5 Q
(k) 282 69 T
4 9 Q
(|) 297 69 T
3 10.5 Q
(l) 304.8 69 T
4 9 Q
(|) 321 69 T
3 10.5 Q
(m) 328.8 69 T
4 9 Q
(|) 345 69 T
3 10.5 Q
(n) 352.8 69 T
4 9 Q
(|) 369 69 T
3 10.5 Q
(o) 376.8 69 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "63" 68
%%Page: "64" 69
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(64) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
4 9 Q
( |) 255 720 T
3 10.5 Q
(p) 282 720 T
4 9 Q
(|) 297 720 T
3 10.5 Q
(q) 304.8 720 T
4 9 Q
(|) 321 720 T
3 10.5 Q
(r) 328.8 720 T
4 9 Q
(|) 345 720 T
3 10.5 Q
(s) 352.8 720 T
4 9 Q
(|) 369 720 T
3 10.5 Q
(t) 376.8 720 T
4 9 Q
( |) 255 709 T
3 10.5 Q
(u) 282 709 T
4 9 Q
(|) 297 709 T
3 10.5 Q
(v) 304.8 709 T
4 9 Q
(|) 321 709 T
3 10.5 Q
(w) 328.8 709 T
4 9 Q
(|) 345 709 T
3 10.5 Q
(x) 352.8 709 T
4 9 Q
(|) 369 709 T
3 10.5 Q
(y) 376.8 709 T
4 9 Q
( |) 255 698 T
3 10.5 Q
(z) 282 698 T
4 9 Q
(<digit>) 205.2 675.99 T
(::=) 255 675.99 T
3 10.5 Q
(0) 282 675.99 T
4 9 Q
(|) 297 675.99 T
3 10.5 Q
(1) 304.8 675.99 T
4 9 Q
(|) 321 675.99 T
3 10.5 Q
(2) 328.8 675.99 T
4 9 Q
(|) 345 675.99 T
3 10.5 Q
(3) 352.8 675.99 T
4 9 Q
(|) 369 675.99 T
3 10.5 Q
(4) 376.8 675.99 T
4 9 Q
( |) 255 664.99 T
3 10.5 Q
(5) 282 664.99 T
4 9 Q
(|) 297 664.99 T
3 10.5 Q
(6) 304.8 664.99 T
4 9 Q
(|) 321 664.99 T
3 10.5 Q
(7) 328.8 664.99 T
4 9 Q
(|) 345 664.99 T
3 10.5 Q
(8) 352.8 664.99 T
4 9 Q
(|) 369 664.99 T
3 10.5 Q
(9) 376.8 664.99 T
4 9 Q
(<ident-char>) 178.2 642.98 T
(::=) 255 642.98 T
(<letter>) 282 642.98 T
( |) 255 631.98 T
(<digit>) 282 631.98 T
( |) 255 620.98 T
(<under>) 282 620.98 T
( |) 255 609.98 T
(<dollar>) 282 609.98 T
4 7.2 Q
(\340) 325.2 613.58 T
4 9 Q
(<identifier>) 178.2 587.97 T
(::=) 255 587.97 T
(<letter>) 282 587.97 T
( |) 255 576.97 T
(<letter>  <ident-rest>) 282 576.97 T
(<ident-rest>) 178.2 554.96 T
(::=) 255 554.96 T
(<ident-char>) 282 554.96 T
( |) 255 543.96 T
(<ident-char>  <ident-rest>) 282 543.96 T
(<unsigned-integer-value>) 113.4 521.95 T
(::=) 255 521.95 T
(<digit>) 282 521.95 T
( |) 255 510.95 T
(<digit>  <unsigned-integer-value>) 282 510.95 T
(<unsigned-real-value>) 129.6 488.94 T
(::=) 255 488.94 T
(<unsigned-integer-value>  .  <unsigned-integer-) 282 488.94 T
(value>) 87 477.94 T
( |) 255 466.94 T
(<unsigned-integer-value>  .  <unsigned-integer-) 282 466.94 T
(value>  <exponent-value>) 87 455.94 T
(<exponent-value>) 156.6 433.93 T
(::=) 255 433.93 T
(<E-char>  <sign-op>  <unsigned-integer-value>) 282 433.93 T
( |) 255 422.93 T
(<E-char>  <unsigned-integer-value>) 282 422.93 T
(<named-constant>) 156.6 400.92 T
(::=) 255 400.92 T
(<identifier>) 282 400.92 T
(<state-space-var>) 151.2 378.91 T
(::=) 255 378.91 T
(<identifier>) 282 378.91 T
(<index-variable>) 156.6 356.9 T
(::=) 255 356.9 T
(<identifier>) 282 356.9 T
2 6.4 Q
(#) 96 326.75 T
2 8 Q
( The C_OPTION statement can be repeated but will usually precede any other statements.) 99.2 323.55 T
2 6.4 Q
(\240) 96 316.74 T
2 8 Q
( This syntax is obsolete at revision 7.0\321its use will result in a warning message.) 99.2 313.54 T
2 6.4 Q
(\340) 96 306.73 T
2 8 Q
( All identifiers with dollar signs are reserved by the ASSIST language.) 99.2 303.53 T
2 6.4 Q
(\244) 96 296.72 T
2 8 Q
( Although lower and upper bounds can take on values between 0 and 32767, their difference must be no more than 255.) 99.2 293.52 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "64" 69
%%Page: "65" 70
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(65) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Appendix) 87 718 T
(C) 141.34 718 T
(Err) 87 689.3 T
(ors/W) 105.44 689.3 T
(arnings Detected) 136.12 689.3 T
2 11 Q
-0.13 (The ASSIST language checks for errors in the input file. Appropriate error or warning messages are) 105 668.27 P
1.21 (displayed depending upon the severity of the problem detected. The following conditions are tested.) 87 655.27 P
0.71 (Some are petty warnings and are not reported unless) 87 642.27 P
3 F
0.71 (\322/WARN=ALL\323) 326.52 642.27 P
2 F
0.71 ( is specified on the VMS com-) 404.29 642.27 P
0.33 (mand line or) 87 629.27 P
3 F
0.33 (\322\320WARN=ALL\323) 146.33 629.27 P
2 F
0.33 ( is specified on the UNIX command line. Some potential problems that) 226.55 629.27 P
0.76 (are detected are reported as both errors and warnings, depending upon the context in which the prob-) 87 616.27 P
(lems were encountered.) 87 603.27 T
1.22 (Note that after detecting an error in a statement, ASSIST makes a best-guess attempt to recover) 105 581.57 P
0.66 (enough so that it can continue to find more errors without generating too many extraneous error mes-) 87 568.57 P
-0.07 (sages. Sometimes it is not possible to do this. If a line contains several error messages and most of them) 87 555.57 P
0.14 (do not seem to apply, fix the ones that do apply. The other errors, especially when they follow the ones) 87 542.57 P
(that do apply, will probably disappear when the fixes are made.) 87 529.57 T
3 10.5 Q
(C.1. Listing of Detected Err) 105 502.2 T
(ors) 229.04 502.2 T
2 11 Q
(An alphabetical listing of all error messages follows:) 105 481.67 T
2 12 Q
(\245) 99 460.63 T
4 10 Q
(AN INTEGER EXPRESSION MUST PRECEDE THE WORD \322OF\323:) 111 460.63 T
434.83 459.58 411 459.58 2 L
V
0.53 H
0 Z
N
5 11 Q
(token) 411 460.63 T
6 10 Q
(\336) 440.83 460.63 T
2 11 Q
0.26 (This error indicates that something other than an integer expression preceded the word \322OF\323 dur-) 111 445.27 P
-0.25 (ing repetition \050usually in a) 111 432.27 P
4 F
-0.6 (START) 228.6 432.27 P
2 F
-0.25 ( statement\051. It is usually caused by the presence of a real number) 261.6 432.27 P
(but can also be caused by an ill-formed expression.) 111 419.27 T
2 12 Q
(\245) 99 398.23 T
4 10 Q
-0.41 (ARCCOS\050X\051 ARGUMENT MUST BE -1.0 <= X <= 1.0:) 111 398.23 P
381.6 397.18 377.32 397.18 2 L
V
N
5 11 Q
-0.19 (r) 377.32 398.23 P
394.64 397.18 381.19 397.18 2 L
V
N
-0.19 (eal) 381.19 398.23 P
4 10 Q
-0.41 ( \050ABS\051> 1.0, \050expression) 394.64 398.23 P
(on line#) 111 386.23 T
209.1 385.18 159 385.18 2 L
V
N
5 11 Q
(linenumber) 159 386.23 T
4 10 Q
(\051) 209.1 386.23 T
6 F
(\336) 221.1 386.23 T
2 11 Q
-0.1 (This error indicates that, during rule generation, an expression that was passed to the built-in func-) 111 370.87 P
0.16 (tion) 111 357.87 P
4 F
0.38 (ARCCOS) 131.02 357.87 P
2 F
0.16 ( evaluated to) 170.62 357.87 P
234.34 356.81 230.06 356.81 2 L
V
N
5 F
0.16 (r) 230.06 357.87 P
247.37 356.81 233.93 356.81 2 L
V
N
0.16 (eal) 233.93 357.87 P
2 F
0.16 (, a number greater in absolute magnitude than 1.0. The user should) 247.37 357.87 P
-0.23 (examine the log file to check the expression for mistakes and check the ASSIST input file rule sec-) 111 344.87 P
(tion for correctness.) 111 331.87 T
2 12 Q
(\245) 99 310.83 T
4 10 Q
(ARCCOS\050X\051 ARGUMENT MUST BE -1.0 <= X <= 1.0: \050expression on) 111 310.83 T
(line#) 111 298.83 T
191.1 297.78 141 297.78 2 L
V
N
5 11 Q
(linenumber) 141 298.83 T
4 10 Q
(\051) 191.1 298.83 T
6 F
(\336) 203.1 298.83 T
2 11 Q
-0.1 (This error indicates that, during rule generation, an expression that was passed to the built-in func-) 111 283.47 P
1.8 (tion) 111 270.47 P
4 F
4.32 (ARCCOS) 132.66 270.47 P
2 F
1.8 ( evaluated to a number greater in absolute magnitude than 1.0. The user should) 172.26 270.47 P
-0.23 (examine the log file to check the expression for mistakes and check the ASSIST input file rule sec-) 111 257.47 P
(tion for correctness.) 111 244.47 T
2 12 Q
(\245) 99 223.43 T
4 10 Q
-0.41 (ARCSIN\050X\051 ARGUMENT MUST BE -1.0 <= X <= 1.0:) 111 223.43 P
381.6 222.38 377.32 222.38 2 L
V
N
5 11 Q
-0.19 (r) 377.32 223.43 P
394.64 222.38 381.19 222.38 2 L
V
N
-0.19 (eal) 381.19 223.43 P
4 10 Q
-0.41 ( \050ABS\051> 1.0, \050expression) 394.64 223.43 P
(on line#) 111 211.43 T
209.1 210.38 159 210.38 2 L
V
N
5 11 Q
(linenumber) 159 211.43 T
4 10 Q
(\051) 209.1 211.43 T
6 F
(\336) 221.1 211.43 T
2 11 Q
-0.1 (This error indicates that, during rule generation, an expression that was passed to the built-in func-) 111 196.07 P
0.16 (tion) 111 183.07 P
4 F
0.38 (ARCSIN) 131.02 183.07 P
2 F
0.16 ( evaluated to) 170.62 183.07 P
234.34 182.01 230.06 182.01 2 L
V
N
5 F
0.16 (r) 230.06 183.07 P
247.37 182.01 233.93 182.01 2 L
V
N
0.16 (eal) 233.93 183.07 P
2 F
0.16 (, a number greater in absolute magnitude than 1.0. The user should) 247.37 183.07 P
-0.23 (examine the log file to check the expression for mistakes and check the ASSIST input file rule sec-) 111 170.07 P
(tion for correctness.) 111 157.07 T
2 12 Q
(\245) 99 136.03 T
4 10 Q
(ARCSIN\050X\051 ARGUMENT MUST BE -1.0 <= X <= 1.0: \050expression on) 111 136.03 T
(line#) 111 124.03 T
191.1 122.98 141 122.98 2 L
V
N
5 11 Q
(linenumber) 141 124.03 T
4 10 Q
(\051) 191.1 124.03 T
6 F
(\336) 203.1 124.03 T
2 11 Q
-0.1 (This error indicates that, during rule generation, an expression that was passed to the built-in func-) 111 108.67 P
1.8 (tion) 111 95.67 P
4 F
4.32 (ARCSIN) 132.66 95.67 P
2 F
1.8 ( evaluated to a number greater in absolute magnitude than 1.0. The user should) 172.26 95.67 P
-0.23 (examine the log file to check the expression for mistakes and check the ASSIST input file rule sec-) 111 82.67 P
(tion for correctness.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "65" 70
%%Page: "66" 71
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(66) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(ARITHMETIC INTEGER OVERFLOW:) 111 719.33 T
296.62 718.28 285 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(int) 285 719.33 T
4 10 Q
( +) 296.62 719.33 T
326.23 718.28 314.62 718.28 2 L
V
N
5 11 Q
(int) 314.62 719.33 T
4 10 Q
(, \050expression on line#) 326.23 719.33 T
508.34 718.28 458.23 718.28 2 L
V
N
5 11 Q
(linenumber) 458.23 719.33 T
4 10 Q
(\051) 508.34 719.33 T
6 F
(\336) 520.34 719.33 T
2 11 Q
0.35 (This error indicates that, during rule generation, the sum \050or difference\051 of two integers exceeded) 111 705.61 P
0.48 (the maximum or minimum value allowed by the hardware. Most models use very small integers.) 111 692.61 P
0.38 (The user should examine the log file to check the expression for mistakes and check the ASSIST) 111 679.61 P
(input file rule section for correctness.) 111 666.61 T
2 12 Q
(\245) 99 647.23 T
4 10 Q
(ARITHMETIC INTEGER OVERFLOW:) 111 647.23 T
296.62 646.17 285 646.17 2 L
V
N
5 11 Q
(int) 285 647.23 T
4 10 Q
( *) 296.62 647.23 T
326.23 646.17 314.62 646.17 2 L
V
N
5 11 Q
(int) 314.62 647.23 T
4 10 Q
(, \050expression on line#) 326.23 647.23 T
508.34 646.17 458.23 646.17 2 L
V
N
5 11 Q
(linenumber) 458.23 647.23 T
4 10 Q
(\051) 508.34 647.23 T
6 F
(\336) 520.34 647.23 T
2 11 Q
0.83 (This error indicates that, during rule generation, the product of two integers exceeded the maxi-) 111 633.51 P
0.26 (mum or minimum value allowed by the hardware. Most models use very small integers. The user) 111 620.51 P
0.27 (should examine the log file to check the expression for mistakes and check the ASSIST input file) 111 607.51 P
(rule section for correctness.) 111 594.51 T
2 12 Q
(\245) 99 575.12 T
4 10 Q
(ARITHMETIC REAL OVERFLOW: \050expression on line#) 111 575.12 T
437.11 574.07 387 574.07 2 L
V
N
5 11 Q
(linenumber) 387 575.12 T
4 10 Q
(\051) 437.11 575.12 T
6 F
(\336) 449.11 575.12 T
2 11 Q
0.72 (This error indicates that, during rule generation, a value in a real expression exceeded the maxi-) 111 561.4 P
0.52 (mum or minimum value allowed by the hardware. The user should examine the log file to check) 111 548.4 P
(the expression for mistakes and check the ASSIST input file rule section for correctness.) 111 535.4 T
2 12 Q
(\245) 99 516.02 T
4 10 Q
(ARITHMETIC REAL OVERFLOW:) 111 516.02 T
271.28 514.96 267 514.96 2 L
V
N
5 11 Q
(r) 267 516.02 T
284.31 514.96 270.87 514.96 2 L
V
N
(eal) 270.87 516.02 T
4 10 Q
( +) 284.31 516.02 T
306.59 514.96 302.31 514.96 2 L
V
N
5 11 Q
(r) 302.31 516.02 T
319.63 514.96 306.19 514.96 2 L
V
N
(eal) 306.19 516.02 T
4 10 Q
(, \050expression on line#) 319.63 516.02 T
501.73 514.96 451.63 514.96 2 L
V
N
5 11 Q
(linenumber) 451.63 516.02 T
4 10 Q
(\051) 501.73 516.02 T
6 F
(\336) 513.73 516.02 T
2 11 Q
1.88 (This error indicates that, during rule generation, the sum \050or difference\051 of two real numbers) 111 502.3 P
0.02 (exceeded the maximum or minimum value allowed by the hardware. The user should examine the) 111 489.3 P
1.45 (log file to check the expression for mistakes and check the ASSIST input file rule section for) 111 476.3 P
(correctness.) 111 463.3 T
2 12 Q
(\245) 99 443.91 T
4 10 Q
(ARITHMETIC REAL OVERFLOW:) 111 443.91 T
271.28 442.86 267 442.86 2 L
V
N
5 11 Q
(r) 267 443.91 T
284.31 442.86 270.87 442.86 2 L
V
N
(eal) 270.87 443.91 T
4 10 Q
( *) 284.31 443.91 T
306.59 442.86 302.31 442.86 2 L
V
N
5 11 Q
(r) 302.31 443.91 T
319.63 442.86 306.19 442.86 2 L
V
N
(eal) 306.19 443.91 T
4 10 Q
(, \050expression on line#) 319.63 443.91 T
501.73 442.86 451.63 442.86 2 L
V
N
5 11 Q
(linenumber) 451.63 443.91 T
4 10 Q
(\051) 501.73 443.91 T
6 F
(\336) 513.73 443.91 T
2 11 Q
1.27 (This error indicates that, during rule generation, the product of two real numbers exceeded the) 111 430.19 P
0.98 (maximum or minimum value allowed by the hardware. The user should examine the log file to) 111 417.19 P
(check the expression for mistakes and check the ASSIST input file rule section for correctness.) 111 404.19 T
2 12 Q
(\245) 99 384.81 T
4 10 Q
(ARITHMETIC OPERATOR IN A BOOLEAN EXPRESSION:) 111 384.81 T
392 383.75 381 383.75 2 L
V
N
5 11 Q
(op) 381 384.81 T
6 10 Q
(\336) 398 384.81 T
2 11 Q
0.07 (This error indicates that the user tried to do arithmetic on Boolean quantities. If the user desires to) 111 371.09 P
0.36 (do arithmetic with the ordinal value of a Boolean, then the) 111 358.09 P
4 F
0.86 (COUNT) 374.64 358.09 P
2 F
0.36 ( function must be used to con-) 407.64 358.09 P
(vert the Boolean to an integer. Arithmetic on Booleans is otherwise disallowed.) 111 345.09 T
2 12 Q
(\245) 99 325.7 T
4 10 Q
(ARRAY DIMENSION OUT OF BOUNDS: \050expression on line#) 111 325.7 T
467.11 324.65 417 324.65 2 L
V
N
5 11 Q
(linenumber) 417 325.7 T
4 10 Q
(\051) 467.11 325.7 T
6 F
(\336) 479.11 325.7 T
2 11 Q
0.59 (This error indicates that, during rule generation, the expression for a subscript of an array evalu-) 111 311.98 P
0.44 (ated to a value that was not within the declared range. For example, if the array is bounded 5..11) 111 298.98 P
1.2 (and referenced with an expression evaluating to 12, then this error will occur. The user should) 111 285.98 P
0.57 (examine the log file and check the expression for mistakes and check the ASSIST input file rule) 111 272.98 P
(section for correctness.) 111 259.98 T
2 12 Q
(\245) 99 240.6 T
4 10 Q
(ARRAY DIMENSION OUT OF BOUNDS:) 111 240.6 T
320.83 239.54 297 239.54 2 L
V
N
5 11 Q
(token) 297 240.6 T
6 10 Q
(\336) 326.83 240.6 T
2 11 Q
0.23 (This error indicates that, during parsing, the constant expression for a subscript of an array evalu-) 111 226.88 P
0.44 (ated to a value that was not within the declared range. For example, if the array is bounded 5..11) 111 213.88 P
1.2 (and referenced with an expression evaluating to 12, then this error will occur. The user should) 111 200.88 P
(check the expression for mistakes or increase the range of the array.) 111 187.88 T
2 12 Q
(\245) 99 168.49 T
4 10 Q
(ARRAY DIMENSION\050S\051 MISSING:) 111 168.49 T
302.83 167.43 279 167.43 2 L
V
N
5 11 Q
(token) 279 168.49 T
6 10 Q
(\336) 308.83 168.49 T
2 11 Q
0.04 (This error indicates that the key word) 111 154.77 P
4 F
0.09 (ARRAY) 278.98 154.77 P
2 F
0.04 ( was used but no subscript bounds were given inside) 311.98 154.77 P
-0.08 (brackets. The user may have forgotten the brackets entirely or may have used brackets but omitted) 111 141.77 P
(an expression between them. The error could also be caused by an extraneous comma.) 111 128.77 T
2 12 Q
(\245) 99 109.39 T
4 10 Q
(ARRAY SUBSCRIPTS MUST BE ENCLOSED IN [ ]:) 111 109.39 T
371.56 108.33 363 108.33 2 L
V
N
5 11 Q
(id) 363 109.39 T
6 10 Q
(\336) 377.56 109.39 T
2 11 Q
-0.25 (This error indicates that an array subscript was given but no square brackets were found. This error) 111 95.67 P
0.55 (usually occurs when an array is referenced with parentheses instead of square brackets. The user) 111 82.67 P
(should change the \050 \051 to [ ].) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "66" 71
%%Page: "67" 72
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(67) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(ATTEMPT TO DEFINE RECURSIVE FUNCTION/IMPLICIT DISALLOWED:) 111 719.33 T
477.94 718.28 459 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(num) 459 719.33 T
6 10 Q
(\336) 483.94 719.33 T
2 11 Q
2.23 (This error indicates that a FUNCTION or IMPLICIT made reference to itself. For example,) 111 706.54 P
0.51 (\322FUNCTION FOO\050X\051 = FOO\05012\051 + X;\323 is illegal because the function FOO references itself by) 111 693.54 P
0.81 (computing FOO\05012\051 in the body of the function definition. The user should rethink the problem) 111 680.54 P
(and change the function body.) 111 667.54 T
2 12 Q
(\245) 99 649.08 T
4 10 Q
(ATTEMPT TO TAKE LN OF NEGATIVE NUMBER: \050expression on line#) 111 649.08 T
485.16 648.03 465 648.03 2 L
V
N
5 11 Q
(line-) 465 649.08 T
518.77 648.03 485.16 648.03 2 L
V
N
(number) 485.16 649.08 T
4 10 Q
(\051) 518.77 649.08 T
6 F
(\336) 530.77 649.08 T
2 11 Q
1.09 (This error indicates that, during rule generation, an illegal attempt to compute the natural loga-) 111 636.29 P
0.16 (rithm of a negative \050or zero\051 number was made. The user should examine the log file to check the) 111 623.29 P
(expression for mistakes and check the ASSIST input file rule section for correctness.) 111 610.29 T
2 12 Q
(\245) 99 591.83 T
4 10 Q
-0.94 (ATTEMPT TO TAKE LN OF NEGATIVE NUMBER:) 111 591.83 P
342.68 590.78 338.4 590.78 2 L
V
N
5 11 Q
-0.43 (r) 338.4 591.83 P
355.71 590.78 342.27 590.78 2 L
V
N
-0.43 (eal) 342.27 591.83 P
4 10 Q
-0.94 ( <= 0.000000000, \050expression on) 355.71 591.83 P
(line#) 111 579.83 T
191.1 578.78 141 578.78 2 L
V
N
5 11 Q
(linenumber) 141 579.83 T
4 10 Q
(\051) 191.1 579.83 T
6 F
(\336) 203.1 579.83 T
2 11 Q
1.09 (This error indicates that, during rule generation, an illegal attempt to compute the natural loga-) 111 567.04 P
0.16 (rithm of a negative \050or zero\051 number was made. The user should examine the log file to check the) 111 554.04 P
(expression for mistakes and check the ASSIST input file rule section for correctness.) 111 541.04 T
2 12 Q
(\245) 99 522.58 T
4 10 Q
-0.48 (ATTEMPT TO TAKE SQRT OF NEGATIVE NUMBER:) 111 522.58 P
357.9 521.52 353.62 521.52 2 L
V
N
5 11 Q
-0.22 (r) 353.62 522.58 P
370.93 521.52 357.49 521.52 2 L
V
N
-0.22 (eal) 357.49 522.58 P
4 10 Q
-0.48 ( < 0.0000000000, \050expression) 370.93 522.58 P
(on line#) 111 510.58 T
209.1 509.52 159 509.52 2 L
V
N
5 11 Q
(linenumber) 159 510.58 T
4 10 Q
(\051) 209.1 510.58 T
6 F
(\336) 221.1 510.58 T
2 11 Q
0.15 (This error indicates that, during rule generation, an illegal attempt to compute the square root of a) 111 497.79 P
-0.05 (negative \050or zero\051 number was made. The user should examine the log file to check the expression) 111 484.79 P
(for mistakes and check the ASSIST input file rule section for correctness.) 111 471.79 T
2 12 Q
(\245) 99 453.33 T
4 10 Q
(ATTEMPT TO TAKE TAN\050\051 AT SINGULAR POINT \050PI/2,3*PI/2,ETC\051: \050expression) 111 453.33 T
(on line#) 111 441.33 T
209.1 440.27 159 440.27 2 L
V
N
5 11 Q
(linenumber) 159 441.33 T
4 10 Q
(\051) 209.1 441.33 T
6 F
(\336) 221.1 441.33 T
2 11 Q
0 (This error indicates that, during rule generation, an illegal attempt was made to take the tangent of) 111 428.54 P
0.25 (a number near a singular point such as) 111 407.92 P
0.25 (. The user should examine the log file to check the) 318.42 407.92 P
(expression for mistakes and check the ASSIST input file rule section for correctness.) 111 387.17 T
2 12 Q
(\245) 99 368.71 T
4 10 Q
(BAD TYPE IN A NUMERIC EXPRESSION:) 111 368.71 T
323.56 367.66 315 367.66 2 L
V
N
5 11 Q
(id) 315 368.71 T
6 10 Q
(\336) 329.56 368.71 T
2 11 Q
2.02 (This error indicates that a non-numeric quantity occurred in a numeric expression. It usually) 111 355.92 P
(appears when Booleans are found when numeric expressions are expected.) 111 342.92 T
2 12 Q
(\245) 99 324.46 T
4 10 Q
(BOOLEAN ITEM EXPECTED:) 111 324.46 T
272.83 323.41 249 323.41 2 L
V
N
5 11 Q
(token) 249 324.46 T
6 10 Q
(\336) 278.83 324.46 T
2 11 Q
-0.26 (This error indicates that something other than a Boolean item was encountered when the syntax for) 111 311.67 P
(ASSIST) 111 298.67 T
( required a Boolean item. The token fund instead of the Boolean item is echoed.) 147.67 298.67 T
2 12 Q
(\245) 99 280.21 T
4 10 Q
(BOOLEAN ITEM EXPECTED:) 111 280.21 T
272.83 279.16 249 279.16 2 L
V
N
5 11 Q
(token) 249 280.21 T
4 10 Q
( \050BUILT-IN FUNCTION) 272.83 280.21 T
411.77 279.16 392.83 279.16 2 L
V
N
5 11 Q
(func) 392.83 280.21 T
4 10 Q
(\051) 411.77 280.21 T
6 F
(\336) 423.77 280.21 T
2 11 Q
0.83 (This error indicates that something other than a Boolean item was encountered in the parameter) 111 267.42 P
0.59 (list for a built-in function such as) 111 254.42 P
4 F
1.42 (COUNT) 263.93 254.42 P
2 F
0.59 ( when the syntax for ASSIST required a Boolean item.) 296.93 254.42 P
(The token found instead of the Boolean item is echoed.) 111 241.42 T
2 12 Q
(\245) 99 222.96 T
4 10 Q
(BOOLEAN OPERATOR IN AN ARITHMETIC EXPRESSION:) 111 222.96 T
398 221.91 387 221.91 2 L
V
N
5 11 Q
(op) 387 222.96 T
6 10 Q
(\336) 404 222.96 T
2 11 Q
-0.22 (This error indicates that something other than a Boolean operator was encountered in an arithmetic) 111 210.17 P
0.45 (expression when the syntax for ASSIST required a Boolean item. The token found instead of the) 111 197.17 P
0.83 (Boolean item is echoed. A relational operator was probably found in a numeric expression. The) 111 184.17 P
(operator that is illegal in the expression is echoed.) 111 171.17 T
2 12 Q
(\245) 99 152.71 T
4 10 Q
(BOOLEAN VALUE EXPECTED:) 111 152.71 T
278.83 151.65 255 151.65 2 L
V
N
5 11 Q
(token) 255 152.71 T
6 10 Q
(\336) 284.83 152.71 T
2 11 Q
0.76 (This error indicates that the resulting type of an expression was not a Boolean. The token at the) 111 139.92 P
(end of the expression in error is echoed.) 111 126.92 T
2 12 Q
(\245) 99 108.46 T
4 10 Q
(BUILT-IN FUNCTION SIZE REQUIRES AN ARRAY:) 111 108.46 T
386.83 107.4 363 107.4 2 L
V
N
5 11 Q
(token) 363 108.46 T
6 10 Q
(\336) 392.83 108.46 T
2 11 Q
-0.19 (This error indicates that something other than an array was encountered as a parameter to the SIZE) 111 95.67 P
0.79 (function when the syntax for ASSIST required an array. The token found instead of the array is) 111 82.67 P
(echoed.) 111 69.67 T
284.67 396.51 318.42 422.87 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(p) 285.88 413.99 T
2 F
(2) 286.14 401.13 T
(-) 285.88 408.17 T
(-) 287.63 408.17 T
(-) 288.15 408.17 T
(3) 297.32 413.99 T
6 F
(p) 310.44 413.99 T
(\327) 305.19 413.99 T
2 F
(2) 304.14 401.13 T
(-) 297.32 408.17 T
(-) 299.07 408.17 T
(-) 300.81 408.17 T
(-) 302.56 408.17 T
(-) 304.31 408.17 T
(-) 306.06 408.17 T
(-) 307.81 408.17 T
(-) 309.55 408.17 T
(-) 311.3 408.17 T
(-) 312.71 408.17 T
6 F
(,) 291.86 407.92 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "67" 72
%%Page: "68" 73
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(68) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(CALLING PARAMETERS NOT ALLOWED ON IMPLICIT REFERENCES:) 111 719.33 T
449.56 718.28 441 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 441 719.33 T
6 10 Q
(\336) 455.56 719.33 T
2 11 Q
0.18 (This error indicates that an IMPLICIT function, which was declared without a parameter list, was) 111 704.19 P
(referenced with a passed parameter list.) 111 691.19 T
2 12 Q
(\245) 99 670.39 T
4 10 Q
(CANNOT MIX REAL NUMBERS INTO INTEGER ARRAY CONSTANT.) 111 670.39 T
6 F
(\336) 429 670.39 T
2 11 Q
0.92 (This error indicates that the user was in the process of defining a constant integer array when a) 111 655.25 P
1.2 (real) 111 642.25 P
1.2 (number was encountered. The ASSIST file determines the type of array from the presence) 130.24 642.25 P
3.01 (or) 111 629.25 P
3.01 (absence of a period in the first element of the array. If the array is a real array with) 125.66 629.25 P
0.81 (some) 111 616.25 P
0.81 (integer) 136.97 616.25 P
0.81 (values, then the first element in the array must have a decimal point. For example,) 170.27 616.25 P
4 F
0.23 (\322FOO = [ 7.0, 11, 8.5 ];\323) 111 603.25 P
2 F
0.1 (. The decimal can be omitted for any integer elements in the) 277.38 603.25 P
0.56 (real array unless the integer element comes first. If the array is an integer array, then no decimal) 111 590.25 P
(points are allowed in any of the elements.) 111 577.25 T
2 12 Q
(\245) 99 556.44 T
4 10 Q
(CANNOT OPEN FILE. PLEASE CONTACT SYSTEM MANAGER:) 111 556.44 T
434.64 555.38 405 555.38 2 L
V
N
5 11 Q
(foo.ast) 405 556.44 T
6 10 Q
(\336) 440.64 556.44 T
2 11 Q
1.53 (This error indicates that there is probably something wrong with the disk drive since ASSIST) 111 541.3 P
0.09 (could not open the input file. The system manager might have the disk drive dismounted or other-) 111 528.3 P
-0.26 (wise unavailable. ASSIST will usually tell the user why it cannot open a file. If it does not, the sys-) 111 515.3 P
(tem manager would be aware of any unusual circumstances that would affect disk drive access.) 111 502.3 T
2 12 Q
(\245) 99 481.49 T
4 10 Q
(CANNOT RAISE A NEGATIVE NUMBER TO A REAL POWER:) 111 481.49 T
403.28 480.43 399 480.43 2 L
V
N
5 11 Q
(r) 399 481.49 T
416.31 480.43 402.87 480.43 2 L
V
N
(eal) 402.87 481.49 T
4 10 Q
( **) 416.31 481.49 T
444.59 480.43 440.31 480.43 2 L
V
N
5 11 Q
(r) 440.31 481.49 T
457.63 480.43 444.19 480.43 2 L
V
N
(eal) 444.19 481.49 T
4 10 Q
(, \050expression) 457.63 481.49 T
(on line#) 111 469.49 T
209.1 468.43 159 468.43 2 L
V
N
5 11 Q
(linenumber) 159 469.49 T
4 10 Q
(\051) 209.1 469.49 T
6 F
(\336) 221.1 469.49 T
2 11 Q
-0.27 (This error indicates that, during rule generation, an attempt was made to raise a negative number to) 111 454.35 P
(a real power. If the power is something like \322** 2.0\323 then it should be changed to \322** 2\323.) 111 441.35 T
2 12 Q
(\245) 99 420.54 T
4 10 Q
(COLON EXPECTED:) 111 420.54 T
230.83 419.49 207 419.49 2 L
V
N
5 11 Q
(token) 207 420.54 T
6 10 Q
(\336) 236.83 420.54 T
2 11 Q
2.18 (This error indicates that something other than a colon was encountered when the syntax for) 111 405.4 P
(ASSIST requires a colon. The token found instead of the colon is echoed.) 111 392.4 T
2 12 Q
(\245) 99 371.6 T
4 10 Q
(COMMA EXPECTED:) 111 371.6 T
230.83 370.54 207 370.54 2 L
V
N
5 11 Q
(token) 207 371.6 T
6 10 Q
(\336) 236.83 371.6 T
2 11 Q
1.62 (This error indicates that something other than a comma was encountered when the syntax for) 111 356.46 P
(ASSIST requires a comma. The token found instead of the comma is echoed.) 111 343.46 T
2 12 Q
(\245) 99 322.65 T
4 10 Q
(COMMA EXPECTED:) 111 322.65 T
230.83 321.59 207 321.59 2 L
V
N
5 11 Q
(token) 207 322.65 T
4 10 Q
( \050FUNCTION) 230.83 322.65 T
315.77 321.59 296.83 321.59 2 L
V
N
5 11 Q
(func) 296.83 322.65 T
4 10 Q
(\051) 315.77 322.65 T
6 F
(\336) 327.77 322.65 T
2 11 Q
-0.07 (This error indicates that something other than a comma was encountered in the parameter list for a) 111 307.51 P
4 F
4.93 (FUNCTION) 111 294.51 P
2 F
2.06 ( when the syntax for ASSIST requires a comma. The token found instead of the) 163.8 294.51 P
(comma is echoed.) 111 281.51 T
2 12 Q
(\245) 99 260.7 T
4 10 Q
(COMMA EXPECTED:) 111 260.7 T
230.83 259.65 207 259.65 2 L
V
N
5 11 Q
(token) 207 260.7 T
4 10 Q
( \050IMPLICIT) 230.83 260.7 T
316.38 259.65 296.83 259.65 2 L
V
N
5 11 Q
(impl) 296.83 260.7 T
4 10 Q
(\051) 316.38 260.7 T
6 F
(\336) 328.38 260.7 T
2 11 Q
0.43 (This error indicates that something other than a comma was encountered in the parameter list for) 111 245.56 P
1.04 (an) 111 232.56 P
4 F
2.5 (IMPLICIT) 125.18 232.56 P
2 F
1.04 ( when the syntax for ASSIST requires a comma. The token found instead of the) 177.98 232.56 P
(comma is echoed.) 111 219.56 T
2 12 Q
(\245) 99 198.75 T
4 10 Q
(COMMA EXPECTED:) 111 198.75 T
225.94 197.7 207 197.7 2 L
V
N
5 11 Q
(func) 207 198.75 T
4 10 Q
( REQUIRES 1-) 225.94 198.75 T
316.88 197.7 297.94 197.7 2 L
V
N
5 11 Q
(num) 297.94 198.75 T
4 10 Q
( PARAMETERS AND NO FEWER.) 316.88 198.75 T
6 F
(\336) 472.88 198.75 T
2 11 Q
-0.07 (This error indicates that something other than a comma was encountered in the parameter list for a) 111 183.61 P
0.65 (built-in function when the syntax for ASSIST requires a comma. The token found instead of the) 111 170.61 P
0.9 (comma is echoed. This error usually occurs when a list function, such as SUM, COUNT, MIN,) 111 157.61 P
(MAX, ANY or ALL, is invoked without any parameters.) 111 144.61 T
2 12 Q
(\245) 99 123.81 T
4 10 Q
(COMMA EXPECTED:) 111 123.81 T
225.94 122.75 207 122.75 2 L
V
N
5 11 Q
(func) 207 123.81 T
4 10 Q
( REQUIRES EXACTLY) 225.94 123.81 T
352.88 122.75 333.94 122.75 2 L
V
N
5 11 Q
(num) 333.94 123.81 T
4 10 Q
( PARAMETERS AND NO FEWER.) 352.88 123.81 T
6 F
(\336) 508.88 123.81 T
2 11 Q
-0.07 (This error indicates that something other than a comma was encountered in the parameter list for a) 111 108.67 P
0.65 (built-in function when the syntax for ASSIST requires a comma. The token found instead of the) 111 95.67 P
0.25 (comma is echoed. This error usually occurs when one or more parameters for the named function) 111 82.67 P
(are missing.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "68" 73
%%Page: "69" 74
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(69) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(COMMAND LINE OPTION TOO BIG: \322) 111 719.33 T
339 718.51 291 718.51 2 L
V
0.4 H
0 Z
N
(-wid=nnn) 291 719.33 T
(\323, \050limit=256\051) 339 719.33 T
6 F
(\336) 429 719.33 T
2 11 Q
1.02 (This error indicates that the user tried to specify the maximum width of an input file line to be) 111 706.48 P
-0.02 (greater than 256. Input lines are usually limited to wid=80, or 79 characters. The user can increase) 111 693.48 P
(the allowed width, but not to a value greater than 256.) 111 680.48 T
2 12 Q
(\245) 99 661.95 T
4 10 Q
(COMMAND LINE OPTION TOO BIG: \322) 111 661.95 T
339 661.13 291 661.13 2 L
V
N
(/wid=nnn) 291 661.95 T
(\323, \050limit=256\051) 339 661.95 T
6 F
(\336) 429 661.95 T
2 11 Q
(This error is the VMS version of the previous error message.) 111 649.09 T
2 12 Q
(\245) 99 630.57 T
4 10 Q
(COMMAND LINE OPTION TOO TINY: \322) 111 630.57 T
345 629.75 297 629.75 2 L
V
N
(-wid=nnn) 297 630.57 T
(\323, \050limit=38\051) 345 630.57 T
6 F
(\336) 429 630.57 T
2 11 Q
-0.05 (This error indicates that the user tried to specify the maximum width of an input file line to be less) 111 617.71 P
1.28 (than 38. Input lines are usually limited to wid=80, or 79 characters. The user can decrease the) 111 604.71 P
(allowed width, but not to a value less than 38.) 111 591.71 T
2 12 Q
(\245) 99 573.19 T
4 10 Q
(COMMAND LINE OPTION TOO TINY: \322) 111 573.19 T
345 572.37 297 572.37 2 L
V
N
(/wid=nnn) 297 573.19 T
(\323, \050limit=38\051) 345 573.19 T
6 F
(\336) 429 573.19 T
2 11 Q
(This error is the VMS version of the previous error message.) 111 560.33 T
2 12 Q
(\245) 99 541.81 T
4 10 Q
(COMMAND LINE OPTION VALUE TOO BIG, MAX-ALLOWED = 32767.) 111 541.81 T
6 F
(\336) 447 541.81 T
2 11 Q
1.08 (This error indicates that the value entered for a command-line option was bigger than could be) 111 528.95 P
(parsed. The user should use a smaller value.) 111 515.95 T
2 12 Q
(\245) 99 497.43 T
4 10 Q
(CONSTANT IDENTIFIER NAME NOT UNIQUE TO FIRST 12 CHARS. SURE WILL NOT BE) 111 497.43 T
(ABLE TO SOLVE THIS MODEL:) 111 485.43 T
275.56 484.37 267 484.37 2 L
V
0.53 H
N
5 11 Q
(id) 267 485.43 T
6 10 Q
(\336) 281.56 485.43 T
2 11 Q
0.65 (This error indicates that two different named constants have different names in ASSIST but will) 111 472.57 P
0.63 (have the same name in SURE due to truncation to 12 characters by SURE. This message occurs) 111 459.57 P
-0.12 (only for named numeric constants since Boolean constants are not written to the model output file.) 111 446.57 P
0.24 (The error is usually caused when a constant array is declared. For each item in a constant array, a) 111 433.57 P
0.19 (constant scalar name is generated by appending the subscript\050s\051 used to index the array to the end) 111 420.57 P
5.02 (of the array name. For example, in the case of the doubly subscripted array named) 111 407.57 P
-0.03 (\322LAMBDA_REC\323, identifiers such as \322LAMBDA_REC_4_11\323 will be generated. These identifi-) 111 394.57 P
(ers are not unique to the first 12 characters. To solve this problem, use a shorter array name.) 111 381.57 T
2 12 Q
(\245) 99 363.05 T
4 10 Q
(DISK QUOTA EXCEEDED. PLEASE CONTACT SYSTEM MANAGER:) 111 363.05 T
452.63 361.99 423 361.99 2 L
V
N
5 11 Q
(foo.ext) 423 363.05 T
6 10 Q
(\336) 458.63 363.05 T
2 11 Q
0.66 (This error indicates that there is not enough disk space left to open or write to the specified file.) 111 350.19 P
0.2 (When a user gets this message, it is usually because the user has a lot of scratch files in the direc-) 111 337.19 P
0 (tory. Files that are no longer required should be deleted. VMS users can use the) 111 324.19 P
4 F
0 (PURGE) 463.86 324.19 P
2 F
0 ( command) 496.86 324.19 P
-0.14 (to delete multiple versions of the same file. If, after cleaning up, the error still occurs, then the sys-) 111 311.19 P
(tem manager should be contacted to get the user\325s quota increased.) 111 298.19 T
2 12 Q
(\245) 99 279.67 T
4 10 Q
(EMPTY LIST SPECIFIED:) 111 279.67 T
251.56 278.61 243 278.61 2 L
V
N
5 11 Q
(id) 243 279.67 T
6 10 Q
(\336) 257.56 279.67 T
2 11 Q
0.09 (This error indicates that the user followed a left parenthesis by a right parenthesis or a left bracket) 111 266.81 P
0.86 (by a right bracket. It could also indicate that an) 111 253.81 P
4 F
2.06 (INPUT) 329.47 253.81 P
2 F
0.86 ( statement did not specify any constants) 362.47 253.81 P
0.6 (to) 111 240.81 P
0.6 (be input, or that a) 122.31 240.81 P
4 F
1.44 (SPACE) 205.35 240.81 P
2 F
0.6 ( statement did not have any state-space variables, or that a) 238.35 240.81 P
4 F
1.44 (TRANTO) 503.4 240.81 P
2 F
1.02 (did not list any destination expressions. The enclosed text may have been commented out as in) 111 227.81 P
(\322[) 111 214.81 T
(\050* 1,2 *\051 ]\323.) 122.3 214.81 T
2 12 Q
(\245) 99 196.29 T
4 10 Q
(EOF REACHED BEFORE COMMENT TERMINATED: \050\322\050*\323 on line#nnn\051) 111 196.29 T
6 F
(\336) 459 196.29 T
2 11 Q
1.45 (This error indicates that a comment starting on the specified line was never terminated with a) 111 183.43 P
(matching \322*\051\323.) 111 170.43 T
2 12 Q
(\245) 99 151.91 T
4 10 Q
(EOF REACHED BEFORE COMMENT TERMINATED: \050\322{\322 on line#nnn\051) 111 151.91 T
6 F
(\336) 453 151.91 T
2 11 Q
1.45 (This error indicates that a comment starting on the specified line was never terminated with a) 111 139.05 P
(matching \322}\323.) 111 126.05 T
2 12 Q
(\245) 99 107.52 T
4 10 Q
(EOF REACHED BEFORE NESTED RULE SEQUENCE TERMINATED: ELSE OR ENDIF) 111 107.52 T
(MISSING.) 111 95.52 T
6 F
(\336) 165 95.52 T
2 11 Q
-0.05 (This error indicates that no matching) 111 82.67 P
4 F
-0.12 (ELSE) 275.68 82.67 P
2 F
-0.05 ( or) 302.08 82.67 P
4 F
-0.12 (ENDIF) 316.64 82.67 P
2 F
-0.05 ( was found for a) 349.64 82.67 P
4 F
-0.12 (THEN) 423.62 82.67 P
2 F
-0.05 (. The user should use) 450.02 82.67 P
-0.13 (the) 111 69.67 P
3 F
-0.13 (\320xref) 127.06 69.67 P
2 F
-0.13 ( option to generate a cross-reference map on the log file. This cross-reference map can be) 151.49 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "69" 74
%%Page: "70" 75
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(70) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.05 (used to help determine if the user\325s indentation style is inconsistent and can help the user to deter-) 111 718.67 P
(mine where the missing) 111 705.67 T
4 F
(ELSE) 218.55 705.67 T
2 F
( or) 244.95 705.67 T
4 F
(ENDIF) 259.61 705.67 T
2 F
( belongs.) 292.61 705.67 T
2 12 Q
(\245) 99 686.33 T
4 10 Q
(EOF REACHED BEFORE NESTED RULE SEQUENCE TERMINATED: ENDFOR MISSING.) 111 686.33 T
6 F
(\336) 519 686.33 T
2 11 Q
-0.27 (This) 111 672.67 P
-0.27 (error) 134.87 672.67 P
-0.27 (indicates) 160.55 672.67 P
-0.27 (that) 203.96 672.67 P
-0.27 (no) 224.77 672.67 P
-0.27 (matching) 240.08 672.67 P
4 F
-0.64 (ENDFOR) 285.33 672.67 P
2 F
-0.27 (was) 329.24 672.67 P
-0.27 (found) 350.65 672.67 P
-0.27 (for) 380.62 672.67 P
-0.27 (a) 397.76 672.67 P
4 F
-0.64 (FOR) 406.95 672.67 P
2 F
-0.27 (.) 426.75 672.67 P
-0.27 (The) 432.89 672.67 P
-0.27 (user) 454.31 672.67 P
-0.27 (should) 476.94 672.67 P
-0.27 (use) 510.59 672.67 P
-0.27 (the) 529.56 672.67 P
3 F
0.94 (\320xref) 111 659.67 P
2 F
0.94 ( option to generate a cross-reference map on the log file. This cross-reference map can be) 135.43 659.67 P
0.05 (used to help determine if the user\325s indentation style is inconsistent and can help the user to deter-) 111 646.67 P
(mine where the missing) 111 633.67 T
4 F
(ENDFOR) 218.55 633.67 T
2 F
( belongs.) 258.15 633.67 T
2 12 Q
(\245) 99 614.33 T
4 10 Q
(EOF REACHED BEFORE QUOTED TEXT TERMINATED: \050\322 on line#nnn\051) 111 614.33 T
6 F
(\336) 465 614.33 T
2 11 Q
1.05 (This error indicates that the matching quote to end quoted text on the specified line is missing.) 111 600.67 P
1.07 (This usually indicates that a prompt message in an) 111 587.67 P
4 F
2.57 (INPUT) 345.2 587.67 P
2 F
1.07 ( statement or a) 378.2 587.67 P
4 F
2.57 (SURE) 449.69 587.67 P
2 F
1.07 ( statement was) 476.09 587.67 P
(never completed due to omission of the terminating quote character.) 111 574.67 T
2 12 Q
(\245) 99 555.33 T
4 10 Q
(EQUAL SIGN \322=\323 EXPECTED:) 111 555.33 T
284.83 554.28 261 554.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(token) 261 555.33 T
6 10 Q
(\336) 290.83 555.33 T
2 11 Q
0.02 (This error indicates that something other than an equals sign was encountered when the syntax for) 111 541.67 P
(ASSIST requires an equals sign. The token found instead of the equal sign is echoed.) 111 528.67 T
2 12 Q
(\245) 99 509.33 T
4 10 Q
(EXP\050X\051 VALUE IS TOO BIG:) 111 509.33 T
265.28 508.28 261 508.28 2 L
V
N
5 11 Q
(r) 261 509.33 T
278.31 508.28 264.87 508.28 2 L
V
N
(eal) 264.87 509.33 T
4 10 Q
( >) 278.31 509.33 T
300.59 508.28 296.31 508.28 2 L
V
N
5 11 Q
(r) 296.31 509.33 T
313.63 508.28 300.19 508.28 2 L
V
N
(eal) 300.19 509.33 T
4 10 Q
(, \050expression on line#) 313.63 509.33 T
495.73 508.28 445.63 508.28 2 L
V
N
5 11 Q
(linenumber) 445.63 509.33 T
4 10 Q
(\051) 495.73 509.33 T
6 F
(\336) 507.73 509.33 T
2 11 Q
0.49 (This error indicates that, during rule generation, the value of \322) 111 495.67 P
5 F
0.49 (x) 389.02 495.67 P
2 F
0.49 (\323 for exp) 393.91 495.67 P
5 8.8 Q
0.39 (x) 433.98 500.07 P
2 11 Q
0.49 ( was too big. The value) 437.89 495.67 P
0.12 (passed for \322) 111 482.67 P
5 F
0.12 (x) 163.77 482.67 P
2 F
0.12 (\323 is printed to the left of the > and the maximum value allowed is printed to the right) 168.65 482.67 P
(of the >.) 111 469.67 T
2 12 Q
(\245) 99 450.33 T
4 10 Q
(EXPECT ON/OFF/FULL or =#:) 111 450.33 T
275.56 449.28 267 449.28 2 L
V
N
5 11 Q
(id) 267 450.33 T
6 10 Q
(\336) 281.56 450.33 T
2 11 Q
0.63 (This error indicates that an option definition name was followed by something other than one of) 111 436.67 P
1.48 (the legal choices listed in the message. The user may have tried to redefine an option to be a) 111 423.67 P
2.12 (named constant or a state-space variable. Option names can only appear in option definition) 111 410.67 P
(statements.) 111 397.67 T
2 12 Q
(\245) 99 378.33 T
4 10 Q
(EXPRESSION OPERAND LIST OVERFLOW. SPECIFY \321O OPTION:) 111 378.33 T
437.56 377.28 429 377.28 2 L
V
N
5 11 Q
(id) 429 378.33 T
6 10 Q
(\336) 443.56 378.33 T
2 11 Q
1.68 (This error indicates that a very long expression was being parsed. The expression was longer) 111 364.67 P
0.14 (than) 111 351.67 P
0.14 (ever anticipated. If the expression cannot be simplified, then increase the allowable size with) 132.69 351.67 P
0.08 (the \320o=) 111 338.67 P
163.41 337.61 144.47 337.61 2 L
V
N
5 F
0.08 (num) 144.47 338.67 P
2 F
0.08 ( command-line option or in a \322) 163.41 338.67 P
4 F
0.18 (C_OPTION 0) 299.52 338.67 P
2 F
0.08 (=) 365.71 338.67 P
390.85 337.61 371.91 337.61 2 L
V
N
5 F
0.08 (num) 371.91 338.67 P
2 F
0.08 ( ;\323 statement as the first line of the) 390.85 338.67 P
(input file. The default is \320o=100 for workstations and \320o=50 for the IBM PC.) 111 325.67 T
2 12 Q
(\245) 99 306.33 T
4 10 Q
(EXPRESSION OPERAND LIST OVERFLOW. SPECIFY /O OPTION:) 111 306.33 T
437.56 305.28 429 305.28 2 L
V
N
5 11 Q
(id) 429 306.33 T
6 10 Q
(\336) 443.56 306.33 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 292.67 T
2 12 Q
(\245) 99 273.33 T
4 10 Q
(EXPRESSION REQUIRED BUT WAS OMITTED:) 111 273.33 T
356.83 272.28 333 272.28 2 L
V
N
5 11 Q
(token) 333 273.33 T
6 10 Q
(\336) 362.83 273.33 T
2 11 Q
0.18 (This error indicates that something other than an expression was encountered when the syntax for) 111 259.67 P
(ASSIST requires an expression. The token found instead of the expression is echoed.) 111 246.67 T
2 12 Q
(\245) 99 227.33 T
4 10 Q
(FILE NAME TOO LONG.) 111 227.33 T
6 F
(\336) 231 227.33 T
2 11 Q
0.09 (This error indicates that the name of at least one of the ASSIST file names is too long. Remember) 111 213.67 P
0.48 (that the longest file name that can be used for an ASSIST input file name \050\322) 111 200.67 P
5 F
0.48 (.ast) 451.55 200.67 P
2 F
0.48 (\323 file\051 is one less) 467.14 200.67 P
0.75 (than the longest file name allowed by the operating system on systems that allow four character) 111 187.67 P
(extents \050such as UNIX and VMS\051.) 111 174.67 T
2 12 Q
(\245) 99 155.33 T
4 10 Q
(FILE NOT FOUND:) 111 155.33 T
236.65 154.28 207 154.28 2 L
V
N
5 11 Q
(foo.ast) 207 155.33 T
6 10 Q
(\336) 242.65 155.33 T
2 11 Q
0.73 (This error indicates that the specified input file does not exist. The user probably misspelled the) 111 141.67 P
(file name.) 111 128.67 T
2 12 Q
(\245) 99 109.33 T
4 10 Q
(FUNCTION BODY STORAGE OVERFLOW. SPECIFY \321B OPTION:) 111 109.33 T
425.56 108.28 417 108.28 2 L
V
N
5 11 Q
(id) 417 109.33 T
6 10 Q
(\336) 431.56 109.33 T
2 11 Q
1.02 (This error indicates that there were very many or very large) 111 95.67 P
4 F
2.44 (FUNCTION) 387.01 95.67 P
2 F
1.02 ( and) 439.81 95.67 P
4 F
2.44 (IMPLICIT) 463.22 95.67 P
2 F
1.02 ( func-) 516.02 95.67 P
1.16 (tions. There was not enough body token storage allocated. To fix the problem, try to use more) 111 82.67 P
4 F
1.12 (FUNCTION) 111 69.67 P
2 F
0.47 (s and) 163.8 69.67 P
4 F
1.12 (IMPLICIT) 190.4 69.67 P
2 F
0.47 (s and eliminate common subexpressions. If that does not help, then) 243.2 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "70" 75
%%Page: "71" 76
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(71) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.68 (increase the body storage on the command line or in a \322) 111 718.67 P
4 F
1.63 (C_OPTION B) 363.79 718.67 P
2 F
0.68 (=) 431.42 718.67 P
456.57 717.61 437.63 717.61 2 L
V
0.53 H
0 Z
N
5 F
0.68 (num) 437.63 718.67 P
2 F
0.68 ( ;\323 statement as the) 456.57 718.67 P
(first line of the input file. The default is \320b=1024 for workstations and \320b=256 for the IBM PC.) 111 705.67 T
2 12 Q
(\245) 99 687.08 T
4 10 Q
(FUNCTION BODY STORAGE OVERFLOW. SPECIFY /B OPTION:) 111 687.08 T
425.56 686.03 417 686.03 2 L
V
N
5 11 Q
(id) 417 687.08 T
6 10 Q
(\336) 431.56 687.08 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 674.17 T
2 12 Q
(\245) 99 655.58 T
4 10 Q
(FUNCTION/IMPLICIT NESTING LEVEL OVERFLOW. SPECIFY \321NEST OPTION:) 111 655.58 T
503.56 654.53 495 654.53 2 L
V
N
5 11 Q
(id) 495 655.58 T
6 10 Q
(\336) 509.56 655.58 T
2 11 Q
4.82 (This error indicates that there were) 111 642.67 P
4 F
11.57 (FUNCTION) 296.32 642.67 P
2 F
4.82 (s or) 349.12 642.67 P
4 F
11.57 (IMPLICIT) 377.7 642.67 P
2 F
4.82 (s that referenced other) 430.5 642.67 P
4 F
1.21 (FUNCTION) 111 629.67 P
2 F
0.5 (s or) 163.8 629.67 P
4 F
1.21 (IMPLICIT) 183.75 629.67 P
2 F
0.5 (s and that the depth of the nested invocation exceeded the maximum) 236.55 629.67 P
(allowed. The default is \320n=16 for workstations and \320n=8 for the IBM PC.) 111 616.67 T
2 12 Q
(\245) 99 598.08 T
4 10 Q
(FUNCTION/IMPLICIT NESTING LEVEL OVERFLOW. SPECIFY /NEST OPTION:) 111 598.08 T
503.56 597.03 495 597.03 2 L
V
N
5 11 Q
(id) 495 598.08 T
6 10 Q
(\336) 509.56 598.08 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 585.17 T
2 12 Q
(\245) 99 566.58 T
4 10 Q
(IDENTIFIER ALREADY DEFINED.) 111 566.58 T
6 F
(\336) 279 566.58 T
2 11 Q
0.78 (This error indicates that the user tried to redefine an identifier that had been defined previously.) 111 553.67 P
-0.13 (The identifier may have been used in the parameter list for a) 111 540.67 P
4 F
-0.32 (FUNCTION) 377.61 540.67 P
2 F
-0.13 ( or) 430.41 540.67 P
4 F
-0.32 (IMPLICIT) 444.8 540.67 P
2 F
-0.13 ( definition) 497.6 540.67 P
0.34 (statement and is now being defined as a constant. Once an identifier is used in a parameter list, it) 111 527.67 P
0.71 (may be reused in another parameter list or as a) 111 514.67 P
4 F
1.7 (FOR) 325.8 514.67 P
2 F
0.71 ( index, but it may not be reused as a named) 345.6 514.67 P
(constant. See sections 3.2.4, 3.2.3, and 12.2.7.3 for descriptions of the respective statements.) 111 501.67 T
2 12 Q
(\245) 99 483.08 T
4 10 Q
(IDENTIFIER EXPECTED:) 111 483.08 T
260.83 482.03 237 482.03 2 L
V
N
5 11 Q
(token) 237 483.08 T
6 10 Q
(\336) 266.83 483.08 T
2 11 Q
0.66 (This error indicates that something other than an identifier was encountered when the syntax for) 111 470.17 P
4 F
(ASSIST) 111 457.17 T
2 F
( requires an identifier. The token found instead of the identifier is echoed.) 150.6 457.17 T
2 12 Q
(\245) 99 438.58 T
4 10 Q
(IDENTIFIER NOT DEFINED:) 111 438.58 T
263.56 437.53 255 437.53 2 L
V
N
5 11 Q
(id) 255 438.58 T
6 10 Q
(\336) 269.56 438.58 T
2 11 Q
(This error indicates that an identifier was used before it was defined.) 111 425.67 T
2 12 Q
(\245) 99 407.08 T
4 10 Q
(IDENTIFIER OR LITERAL EXPECTED:) 111 407.08 T
326.83 406.03 303 406.03 2 L
V
N
5 11 Q
(token) 303 407.08 T
6 10 Q
(\336) 332.83 407.08 T
2 11 Q
1.14 (This error indicates that something other than an identifier or literal was encountered when the) 111 394.17 P
0.17 (syntax for ASSIST requires an identifier or literal. The token found instead of the identifier or lit-) 111 381.17 P
0.21 (eral is echoed. The user probably has two arithmetic operations in a row without an item between) 111 368.17 P
(them. For example, \322) 111 355.17 T
5 F
(X) 204.18 355.17 T
2 F
( + * 3\323 is illegal because there is nothing between the \322+\323 and the \322*\323.) 210.9 355.17 T
2 12 Q
(\245) 99 336.58 T
4 10 Q
(IDENTIFIER TABLE OVERFLOW. SPECIFY -I,-N OPTIONS: \050currently: -) 111 336.58 T
(N=200 -) 489 336.58 T
(I=400\051) 111 324.58 T
6 F
(\336) 153 324.58 T
2 11 Q
-0.19 (This error indicates that the user is using more numbers or identifiers than the current symbol table) 111 311.67 P
0.52 (can hold. The user must increase the table size with either the \320n=) 111 298.67 P
426.78 297.61 407.84 297.61 2 L
V
N
5 F
0.52 (num) 407.84 298.67 P
2 F
0.52 ( or \320i=anynum command-) 426.78 298.67 P
0.54 (line option or in a \322) 111 285.67 P
4 F
1.3 (C_OPTION I) 199.56 285.67 P
2 F
0.54 (=) 266.86 285.67 P
292.01 284.61 273.07 284.61 2 L
V
N
5 F
0.54 (num) 273.07 285.67 P
2 F
0.54 ( ;\323 or \322) 292.01 285.67 P
4 F
1.3 (C_OPTION N) 323.87 285.67 P
2 F
0.54 (=) 391.17 285.67 P
416.32 284.61 397.38 284.61 2 L
V
N
5 F
0.54 (num) 397.38 285.67 P
2 F
0.54 ( ;\323 statement as the first line) 416.32 285.67 P
1.45 (of) 111 272.67 P
1.45 (the) 125.66 272.67 P
1.45 (input file. The default is  \320i=400  for workstations and  \320i=200  for the IBM PC. The) 144.6 272.67 P
(default is  \320n=200  for workstations and  \320n=50  for the IBM PC.) 111 259.67 T
2 12 Q
(\245) 99 241.08 T
4 10 Q
(IDENTIFIER TABLE OVERFLOW. SPECIFY /I,/N OPTIONS: \050currently: /N=200) 111 241.08 T
(/I=400\051) 111 229.08 T
6 F
(\336) 159 229.08 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 216.17 T
2 12 Q
(\245) 99 197.58 T
4 10 Q
(INTEGER VALUE EXPECTED.) 111 197.58 T
6 F
(\336) 255 197.58 T
2 11 Q
0.79 (This error indicates that the resulting type of an expression was not an integer. The token at the) 111 184.67 P
(end of the expression in error is echoed.) 111 171.67 T
2 12 Q
(\245) 99 153.08 T
4 10 Q
(ILLEGAL CHARACTER:) 111 153.08 T
245.16 152.03 225 152.03 2 L
V
N
5 11 Q
(char) 225 153.08 T
6 10 Q
(\336) 251.16 153.08 T
2 11 Q
0.63 (This error indicates that a special character not allowed by the ASSIST syntax was encountered.) 111 140.17 P
1.65 (Certain characters, including the exclamation mark \050\322!\323\051, the percent sign \050\322%\323\051, and all non-) 111 127.17 P
(printing characters, are illegal in ASSIST.) 111 114.17 T
2 12 Q
(\245) 99 95.58 T
4 10 Q
(INFIX EXPRESSION LIST OVERFLOW. SPECIFY -O OPTION:) 111 95.58 T
425.56 94.53 417 94.53 2 L
V
N
5 11 Q
(id) 417 95.58 T
6 10 Q
(\336) 431.56 95.58 T
2 11 Q
1.68 (This error indicates that a very long expression was being parsed. The expression was longer) 111 82.67 P
0.14 (than) 111 69.67 P
0.14 (ever anticipated. If the expression cannot be simplified, then increase the allowable size with) 132.69 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "71" 76
%%Page: "72" 77
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(72) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.04 (the \320o=num command-line option or in a \322) 111 718.67 P
4 F
0.1 (C_OPTION 0) 299.89 718.67 P
2 F
0.04 (=) 365.99 718.67 P
391.14 717.61 372.19 717.61 2 L
V
0.53 H
0 Z
N
5 F
0.04 (num) 372.19 718.67 P
2 F
0.04 ( ;\323 statement as the first line of the) 391.14 718.67 P
(input file. The default is) 111 705.67 T
3 F
(\320o=100) 222.52 705.67 T
2 F
(  for workstations and) 256.29 705.67 T
3 F
(\320o=50) 357.72 705.67 T
2 F
(  for the IBM PC.) 385.99 705.67 T
2 12 Q
(\245) 99 685.44 T
4 10 Q
(INFIX EXPRESSION LIST OVERFLOW. SPECIFY /O OPTION:) 111 685.44 T
425.56 684.39 417 684.39 2 L
V
N
5 11 Q
(id) 417 685.44 T
6 10 Q
(\336) 431.56 685.44 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 670.89 T
2 12 Q
(\245) 99 650.67 T
4 10 Q
(INSUFFICIENT MEMORY FOR PARSE PHASE.) 111 650.67 T
6 F
(\336) 333 650.67 T
2 11 Q
1.09 (This error indicates that the ASSIST input file is too big to parse. Since ASSIST will typically) 111 636.11 P
0.48 (parse programs bigger than it can solve, it will probably be necessary to rethink the problem and) 111 623.11 P
(make it simpler.) 111 610.11 T
2 12 Q
(\245) 99 589.89 T
4 10 Q
-0.46 (INSUFFICIENT MEMORY FOR PARSE PHASE:) 111 589.89 P
353.3 588.83 330.7 588.83 2 L
V
N
5 11 Q
-0.21 (bytes) 330.7 589.89 P
4 10 Q
-0.46 ( BYTES. OPERATING SYSTEM MALLOC) 353.3 589.89 P
(LIMIT =) 111 577.89 T
177.94 576.83 159 576.83 2 L
V
N
5 11 Q
(num) 159 577.89 T
6 10 Q
(\336) 183.94 577.89 T
2 11 Q
1.96 (This error indicates that the total table size was bigger than ASSIST will allocate. The error) 111 563.33 P
0.39 (always arises from large values for the) 111 550.33 P
3 F
0.39 (\320b) 286.32 550.33 P
2 F
0.39 (,) 297.93 550.33 P
3 F
0.39 (\320e) 303.82 550.33 P
2 F
0.39 (,) 314.21 550.33 P
3 F
0.39 (\320o) 320.1 550.33 P
2 F
0.39 (,) 331.1 550.33 P
3 F
0.39 (\320i) 336.99 550.33 P
2 F
0.39 (,) 345.55 550.33 P
3 F
0.39 (\320n) 351.43 550.33 P
2 F
0.39 (,) 363.05 550.33 P
3 F
0.39 (\320p) 368.94 550.33 P
2 F
0.39 (,) 380.56 550.33 P
3 F
0.39 (\320nest) 386.45 550.33 P
2 F
0.39 (,) 410.89 550.33 P
3 F
0.39 (\320pic) 416.78 550.33 P
2 F
0.39 (, and) 436.34 550.33 P
3 F
0.39 (\320rule) 461.25 550.33 P
2 F
0.39 ( options. Try) 485.69 550.33 P
0.29 (decreasing the value specified on the command line for one or more of these options. The default) 111 537.33 P
0.41 (is) 111 524.33 P
3 F
0.41 (\320pic=100) 124.66 524.33 P
2 F
0.41 ( for workstations and) 170.15 524.33 P
3 F
0.41 (\320pic=100) 270.9 524.33 P
2 F
0.41 (  for the IBM PC. The default is) 313.23 524.33 P
3 F
0.41 (\320i=400) 463.09 524.33 P
2 F
0.41 (  for work-) 494.42 524.33 P
0.67 (stations and) 111 511.33 P
3 F
0.67 (\320i=200) 170.77 511.33 P
2 F
0.67 ( for the IBM PC. The default is) 205.52 511.33 P
3 F
0.67 (\320n=200) 354.58 511.33 P
2 F
0.67 (  for workstations and) 388.96 511.33 P
3 F
0.67 (\320n=50) 494.44 511.33 P
2 F
0.67 (  for) 523.33 511.33 P
0.18 (the) 111 498.33 P
0.18 (IBM PC. The default is) 127.19 498.33 P
3 F
0.18 (\320o=100) 236.75 498.33 P
2 F
0.18 ( for workstations and) 273.45 498.33 P
3 F
0.18 (\320o=50) 373.04 498.33 P
2 F
0.18 (  for the IBM PC. The default is) 401.31 498.33 P
3 F
1.33 (\320nest=16) 111 485.33 P
2 F
1.33 (  for workstations and) 152.71 485.33 P
3 F
1.33 (\320nest=8) 262.09 485.33 P
2 F
1.33 ( for the IBM PC. The default is) 302.38 485.33 P
3 F
1.33 (\320n=200) 457.3 485.33 P
2 F
1.33 ( for work-) 495.76 485.33 P
0.27 (stations and) 111 472.33 P
3 F
0.27 (\320n=50) 169.55 472.33 P
2 F
0.27 ( for the IBM PC. The default is) 201.45 472.33 P
3 F
0.27 (\320b=1024) 346.84 472.33 P
2 F
0.27 ( for workstations and) 389.74 472.33 P
3 F
0.27 (\320b=256) 489.75 472.33 P
2 F
0.27 ( for) 527.16 472.33 P
0.23 (the IBM PC. The default is) 111 459.33 P
3 F
0.23 (\320e=100) 237.28 459.33 P
2 F
0.23 (  for workstations and) 270.44 459.33 P
3 F
0.23 (\320e=50) 373.26 459.33 P
2 F
0.23 (  for the IBM PC. The default is) 400.91 459.33 P
3 F
-0.16 (\320p=64) 111 446.33 P
2 F
-0.16 (  for workstations and) 139.89 446.33 P
3 F
-0.16 (\320p=32) 240.38 446.33 P
2 F
-0.16 (  for the IBM PC. The default is) 269.27 446.33 P
3 F
-0.16 (\320rule=4096) 413.46 446.33 P
2 F
-0.16 ( for workstations) 468.76 446.33 P
(and) 111 433.33 T
3 F
(\320rule=1024) 132.38 433.33 T
2 F
(  for the IBM PC.) 185.1 433.33 T
2 12 Q
(\245) 99 413.11 T
4 10 Q
(INSUFFICIENT MEMORY FOR PARSE PHASE: \050Identif) 111 413.11 T
(ier table\051) 381 413.11 T
6 F
(\336) 447 413.11 T
2 11 Q
1.79 (This error indicates that the total table size was bigger than ASSIST will allocate. This error) 111 398.56 P
0.08 (always arises from large values for the) 111 385.56 P
3 F
0.08 (\320i) 286.96 385.56 P
2 F
0.08 (  and) 295.52 385.56 P
3 F
0.08 (\320n) 322.72 385.56 P
2 F
0.08 (  options. Try decreasing the value specified on) 334.33 385.56 P
0.25 (the command line for either or both of these options. The default is) 111 372.56 P
3 F
0.25 (\320i=400) 414.76 372.56 P
2 F
0.25 (  for workstations and) 446.09 372.56 P
3 F
(\320i=200) 111 359.56 T
2 F
(  for the IBM PC. The default is) 142.33 359.56 T
3 F
(\320n=200) 288.07 359.56 T
2 F
(  for workstations and) 322.45 359.56 T
3 F
(\320n=50) 423.88 359.56 T
2 F
(  for the IBM PC.) 452.77 359.56 T
2 12 Q
(\245) 99 339.33 T
4 10 Q
(INSUFFICIENT MEMORY FOR PARSE PHASE: \050astparse storage\051) 111 339.33 T
6 F
(\336) 447 339.33 T
2 11 Q
1.79 (This error indicates that the total table size was bigger than ASSIST will allocate. This error) 111 324.78 P
0.37 (always arises from large values for the) 111 311.78 P
3 F
0.37 (\320e) 286.17 311.78 P
2 F
0.37 (,) 296.55 311.78 P
3 F
0.37 (\320o) 302.42 311.78 P
2 F
0.37 (,) 313.42 311.78 P
3 F
0.37 (\320p) 319.29 311.78 P
2 F
0.37 (,) 330.9 311.78 P
3 F
0.37 (\320nest) 336.77 311.78 P
2 F
0.37 (,) 361.21 311.78 P
3 F
0.37 (\320pic) 367.08 311.78 P
2 F
0.37 (, and) 386.64 311.78 P
3 F
0.37 (\320rule) 411.51 311.78 P
2 F
0.37 ( options. Try) 435.95 311.78 P
0.37 (decreasing) 495.96 311.78 P
-0.19 (the value specified on the command line for one or more of these options. The default is) 111 298.78 P
3 F
-0.19 (\320pic=100) 500.67 298.78 P
2 F
0.26 (for) 111 285.78 P
0.26 (workstations) 127.75 285.78 P
0.26 ( and) 184.88 285.78 P
3 F
0.26 (\320pic=100) 210.69 285.78 P
2 F
0.26 ( for) 256.94 285.78 P
0.26 (the) 276.69 285.78 P
0.26 ( IBM) 291.05 285.78 P
0.26 ( PC.) 315.74 285.78 P
0.26 (The) 339.79 285.78 P
0.26 (default) 360.81 285.78 P
0.26 ( is) 392.27 285.78 P
3 F
0.26 (\320o=100) 409.54 285.78 P
2 F
0.26 ( for) 447.23 285.78 P
0.26 (workstations) 466.98 285.78 P
0.26 ( and) 524.11 285.78 P
3 F
1.03 (\320o=50) 111 272.78 P
2 F
1.03 ( for the IBM PC. The default is) 143.05 272.78 P
3 F
1.03 (\320nest=16) 295.3 272.78 P
2 F
1.03 ( for workstations and) 340.8 272.78 P
3 F
1.03 (\320nest=8) 444.62 272.78 P
2 F
1.03 (  for the IBM) 480.83 272.78 P
0.17 (PC.) 111 259.78 P
0.17 (The default is) 129.95 259.78 P
3 F
0.17 (\320n=200) 196.63 259.78 P
2 F
0.17 ( for workstations and) 233.94 259.78 P
3 F
0.17 (\320n=50) 333.49 259.78 P
2 F
0.17 ( for the IBM PC. The default is) 365.3 259.78 P
3 F
0.17 (\320e=100) 509.85 259.78 P
2 F
0.5 (for workstations and) 111 246.78 P
3 F
0.5 (\320e=50) 205.68 246.78 P
2 F
0.5 (  for the IBM PC. The default is) 233.33 246.78 P
3 F
0.5 (\320p=64) 384.05 246.78 P
2 F
0.5 ( for workstations and) 412.94 246.78 P
3 F
0.5 (\320p=32) 514.11 246.78 P
2 F
(for the IBM PC. The default is) 111 233.78 T
3 F
(\320rule=4096) 251.24 233.78 T
2 F
( for workstations and) 306.7 233.78 T
3 F
(\320rule=1024) 405.38 233.78 T
2 F
(  for the IBM PC.) 458.09 233.78 T
2 12 Q
(\245) 99 213.56 T
4 10 Q
(INSUFFICIENT MEMORY FOR PARSE PHASE: \050parse library storage -- func) 111 213.56 T
(body\051) 111 201.56 T
6 F
(\336) 147 201.56 T
2 11 Q
0.23 (This) 111 187 P
0.23 (error) 134.45 187 P
0.23 (is) 159.72 187 P
0.23 (similar) 170.95 187 P
0.23 (to) 205.4 187 P
0.23 (the) 217.85 187 P
0.23 (above) 235.19 187 P
0.23 (error) 265.35 187 P
0.23 (and) 290.62 187 P
0.23 (arises) 310.39 187 P
0.23 (from) 339.34 187 P
0.23 (a) 364.61 187 P
0.23 (large) 373.39 187 P
0.23 (value) 399.27 187 P
0.23 (for) 426.99 187 P
0.23 (the) 443.71 187 P
3 F
0.23 (\320b) 461.05 187 P
2 F
0.23 (.) 472.67 187 P
0.23 (The) 480.22 187 P
0.23 (default) 501.22 187 P
0.23 (is) 535.66 187 P
3 F
(\320b=1024) 111 174 T
2 F
(  for workstations and) 150.89 174 T
3 F
(\320b=256) 252.32 174 T
2 F
(  for the IBM PC.) 286.7 174 T
2 12 Q
(\245) 99 153.78 T
4 10 Q
(INSUFFICIENT MEMORY FOR PARSE PHASE: \050parse library storage\051) 111 153.78 T
6 F
(\336) 477 153.78 T
2 11 Q
(This error is similar to the \322\050astparse storage\051\323 error above.) 111 139.22 T
2 12 Q
(\245) 99 119 T
4 10 Q
(INSUFFICIENT MEMORY FOR RULE GENERATION PHASE: \050allstorage\051) 111 119 T
6 F
(\336) 471 119 T
2 11 Q
(This error is similar to the \322\050astparse storage\051\323 error above.) 111 104.45 T
2 12 Q
(\245) 99 84.22 T
4 10 Q
(INSUFFICIENT MEMORY FOR RULE GENERATION PHASE: \050data_ptr\051) 111 84.22 T
6 F
(\336) 459 84.22 T
2 11 Q
(This error is similar to the above error. Try pruning or trimming the model.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "72" 77
%%Page: "73" 78
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(73) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(INSUFFICIENT MEMORY FOR RULE GENERATION PHASE: \050init_hash_function\051) 111 719.33 T
6 F
(\336) 519 719.33 T
2 11 Q
0.83 (This error is similar to the above error. The user probably asked for too large a number of hash) 111 706.01 P
-0.15 (buckets) 111 693.02 P
-0.15 (with) 148.12 693.02 P
-0.15 (the) 171.19 693.02 P
3 F
-0.15 (\320bc) 189.82 693.02 P
2 F
-0.15 (  option) 206.32 693.02 P
-0.15 (or) 243.15 693.02 P
-0.15 (too) 255.82 693.02 P
-0.15 (wide) 273.39 693.02 P
-0.15 (a) 298.29 693.02 P
-0.15 (bucket) 306.68 693.02 P
-0.15 (width) 339.52 693.02 P
-0.15 (with) 368.09 693.02 P
-0.15 (the) 391.16 693.02 P
3 F
-0.15 (\320bw) 409.8 693.02 P
2 F
-0.15 (  option.  The) 429.36 693.02 P
-0.15 (defaults) 491.23 693.02 P
-0.15 (are) 529.57 693.02 P
3 F
(\320bc=1009) 111 680.02 T
2 F
( and) 158.52 680.02 T
3 F
(\320bw=5) 179.9 680.02 T
2 F
(.) 211.23 680.02 T
2 12 Q
(\245) 99 661.03 T
4 10 Q
(INSUFFICIENT MEMORY FOR RULE GENERATION PHASE:) 111 661.03 T
(\050link_to_a_brand_new_bucket\051) 111 649.03 T
6 F
(\336) 285 649.03 T
2 11 Q
0.11 (This error is similar to the above error. ASSIST was attempting to obtain more memory for a new) 111 635.71 P
(state on the ready set but no more memory was available. Try pruning or trimming the model.) 111 622.71 T
2 12 Q
(\245) 99 603.72 T
4 10 Q
(INTEGER CYCLIC WRAP MODULO ZERO:) 111 603.72 T
320.62 602.67 309 602.67 2 L
V
0.53 H
0 Z
N
5 11 Q
(int) 309 603.72 T
4 10 Q
( CYC) 320.62 603.72 T
362.23 602.67 350.62 602.67 2 L
V
N
5 11 Q
(int) 350.62 603.72 T
4 10 Q
(, \050expression on) 362.23 603.72 T
(line#) 111 591.72 T
191.1 590.67 141 590.67 2 L
V
N
5 11 Q
(linenumber) 141 591.72 T
4 10 Q
(\051) 191.1 591.72 T
6 F
(\336) 203.1 591.72 T
2 11 Q
0.31 (This error indicates that, during rule generation, the user tried to divide by zero in order to obtain) 111 578.41 P
(the cyclically wrapped integer remainder. This is illegal; do not do it.) 111 565.41 T
2 12 Q
(\245) 99 546.42 T
4 10 Q
(INTEGER DIVIDE BY ZERO:) 111 546.42 T
266.62 545.36 255 545.36 2 L
V
N
5 11 Q
(int) 255 546.42 T
4 10 Q
( DIV 0, \050expression on line#) 266.62 546.42 T
484.72 545.36 434.62 545.36 2 L
V
N
5 11 Q
(linenumber) 434.62 546.42 T
4 10 Q
(\051) 484.72 546.42 T
6 F
(\336) 496.72 546.42 T
2 11 Q
0.31 (This error indicates that, during rule generation, the user tried to divide by zero in order to obtain) 111 533.1 P
(the integer quotient. This is illegal; do not do it.) 111 520.1 T
2 12 Q
(\245) 99 501.12 T
4 10 Q
(INTEGER EXPRESSION EXPECTED: \050expression on line#) 111 501.12 T
455.11 500.06 405 500.06 2 L
V
N
5 11 Q
(linenumber) 405 501.12 T
4 10 Q
(\051) 455.11 501.12 T
6 F
(\336) 467.11 501.12 T
2 11 Q
1.27 (This error indicates that, during rule generation, an expression that must evaluate to an integer) 111 487.8 P
-0.25 (evaluated to a real or Boolean. This error is fairly uncommon since ASSIST does a pretty thorough) 111 474.8 P
(job of finding type mismatches during parsing.) 111 461.8 T
2 12 Q
(\245) 99 442.81 T
4 10 Q
(INTEGER EXPRESSION EXPECTED: MOD\134CYC\134DIV) 111 442.81 T
6 F
(\336) 357 442.81 T
2 11 Q
1.27 (This error indicates that, during rule generation, an expression that must evaluate to an integer) 111 429.49 P
-0.25 (evaluated to a real or Boolean. This error is fairly uncommon since ASSIST does a pretty thorough) 111 416.49 P
(job of finding type mismatches during parsing.) 111 403.49 T
2 12 Q
(\245) 99 384.51 T
4 10 Q
(INTEGER EXPRESSION EXPECTED:) 111 384.51 T
308.83 383.45 285 383.45 2 L
V
N
5 11 Q
(token) 285 384.51 T
6 10 Q
(\336) 314.83 384.51 T
2 11 Q
0.48 (This error indicates that, during parsing, an expression that must evaluate to an integer evaluated) 111 371.19 P
0.5 (to a real or Boolean. It can also indicate that a strange token was found where an integer expres-) 111 358.19 P
(sion was expected.) 111 345.19 T
2 12 Q
(\245) 99 326.2 T
4 10 Q
(INTEGER EXPRESSION EXPECTED: ^) 111 326.2 T
6 F
(\336) 297 326.2 T
2 11 Q
0.48 (This error indicates that, during parsing, an expression that must evaluate to an integer evaluated) 111 312.88 P
0.57 (to a real or Boolean. It probably means that the value following the concatenation operation was) 111 299.88 P
(not an integer.) 111 286.88 T
2 12 Q
(\245) 99 267.9 T
4 10 Q
(INTEGER MODULO BY ZERO:) 111 267.9 T
266.62 266.84 255 266.84 2 L
V
N
5 11 Q
(int) 255 267.9 T
4 10 Q
( MOD) 266.62 267.9 T
308.23 266.84 296.62 266.84 2 L
V
N
5 11 Q
(int) 296.62 267.9 T
4 10 Q
(, \050expression on line#) 308.23 267.9 T
490.34 266.84 440.23 266.84 2 L
V
N
5 11 Q
(linenumber) 440.23 267.9 T
4 10 Q
(\051) 490.34 267.9 T
6 F
(\336) 502.34 267.9 T
2 11 Q
0.31 (This error indicates that, during rule generation, the user tried to divide by zero in order to obtain) 111 254.58 P
(the integer remainder. This is illegal; do not do it.) 111 241.58 T
2 12 Q
(\245) 99 222.59 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: \050unknown type for) 111 222.59 T
(value_to_memory\051) 111 210.59 T
6 F
(\336) 213 210.59 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 197.28 P
(errors first.) 111 184.28 T
2 12 Q
(\245) 99 165.29 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Already has a type) 111 165.29 T
(\050lookup_ident\051!!!) 111 153.29 T
6 F
(\336) 219 153.29 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 139.97 P
(errors first.) 111 126.97 T
2 12 Q
(\245) 99 107.99 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Attempt to evaluate an) 111 107.99 T
(expression in error.) 111 95.99 T
6 F
(\336) 237 95.99 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 82.67 P
(errors first.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "73" 78
%%Page: "74" 79
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(74) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
-0.6 (INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Attempt to evaluate the) 111 719.33 P
(empty expression.) 111 707.33 T
6 F
(\336) 219 707.33 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 693.84 P
(errors first.) 111 680.84 T
2 12 Q
(\245) 99 661.68 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: BAD BINARY OP) 111 661.68 T
6 F
(\336) 489 661.68 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 648.19 P
(errors first.) 111 635.19 T
2 12 Q
(\245) 99 616.03 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: BAD TERNARY OP) 111 616.03 T
6 F
(\336) 495 616.03 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 602.54 P
(errors first.) 111 589.54 T
2 12 Q
(\245) 99 570.38 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: BAD UNARY OP) 111 570.38 T
6 F
(\336) 483 570.38 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 556.88 P
(errors first.) 111 543.88 T
2 12 Q
(\245) 99 524.72 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: BAD VARIABLE ARGUMENT) 111 524.72 T
(LENGTH BUILT-IN OP) 111 512.72 T
6 F
(\336) 225 512.72 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 499.23 P
(errors first.) 111 486.23 T
2 12 Q
(\245) 99 467.07 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: BUFFER OVERFLOW WHEN) 111 467.07 T
(PARSING SPACE PICTURE. TRY USING 200 OR FEWER STATE-SPACE VARIABLES PER) 111 455.07 T
(NESTING LEVEL.) 111 443.07 T
6 F
(\336) 201 443.07 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 429.58 P
(errors first.) 111 416.58 T
2 12 Q
(\245) 99 397.42 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Expression evaluation) 111 397.42 T
-0.55 (stack overf) 111 385.42 P
-0.55 (low. Try simplifying expression via use of named constants or) 176.46 385.42 P
(rebuild ASSIST with a larger value for EVAL_STACK_DIM. \050expression on) 111 373.42 T
(line#) 111 361.42 T
159.94 360.36 141 360.36 2 L
V
0.53 H
0 Z
N
5 11 Q
(num) 141 361.42 T
4 10 Q
(\051) 159.94 361.42 T
6 F
(\336) 171.94 361.42 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 347.93 P
(errors first.) 111 334.93 T
2 12 Q
(\245) 99 315.77 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Not def) 111 315.77 T
(ined for SSV\325s/) 447 315.77 T
(FUNCTION\325s/INTERNAL\325s \050save_value_in_number_table\051) 111 303.77 T
6 F
(\336) 417 303.77 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 290.27 P
(errors first.) 111 277.28 T
2 12 Q
(\245) 99 258.12 T
4 10 Q
-0.63 (INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT: Number of bits \050) 111 258.12 P
514.26 257.06 495.32 257.06 2 L
V
N
5 11 Q
-0.29 (num) 495.32 258.12 P
4 10 Q
-0.63 (\051 in) 514.26 258.12 P
(state space exceeds limit \0508200\051) 111 246.12 T
6 F
(\336) 309 246.12 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 232.62 P
-0.2 (errors first. When the error message says, \322Number of bits ... in state space exceeds limit\323, try sim-) 111 219.62 P
(plifying the model by using fewer state-space variables.) 111 206.62 T
2 12 Q
(\245) 99 187.46 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT:) 111 187.46 T
413.56 186.41 405 186.41 2 L
V
N
5 11 Q
(id) 405 187.46 T
6 10 Q
(\336) 419.56 187.46 T
2 11 Q
0.5 (This error indicates a problem so serious that ASSIST could not deal with it. Try fixing all other) 111 173.97 P
(errors first.) 111 160.97 T
2 12 Q
(\245) 99 141.81 T
4 10 Q
(INVALID COMMAND LINE OPTION: \321) 111 141.81 T
305.06 140.76 291 140.76 2 L
V
N
5 11 Q
(opt) 291 141.81 T
6 10 Q
(\336) 311.06 141.81 T
2 11 Q
0.47 (This error indicates that the user specified an unrecognizable command-line option. The name of) 111 128.32 P
0.04 (the option was probably misspelled. Check the spelling against that listed for the desired option in) 111 115.32 P
(appendix E.) 111 102.32 T
2 12 Q
(\245) 99 83.16 T
4 10 Q
(INVALID COMMAND LINE OPTION: /) 111 83.16 T
305.06 82.1 291 82.1 2 L
V
N
5 11 Q
(opt) 291 83.16 T
6 10 Q
(\336) 311.06 83.16 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "74" 79
%%Page: "75" 80
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(75) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(INVALID NUMERIC VALUE:) 111 719.33 T
257.56 718.28 249 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 249 719.33 T
6 10 Q
(\336) 263.56 719.33 T
2 11 Q
0.21 (This error indicates that a value was specified that is not in the range of valid values for the state-) 111 705.51 P
1.59 (ment or construct in question. For example, in an option definition statement, only the values) 111 692.51 P
3 F
(\322=0\323) 111 679.51 T
2 F
(,) 133.77 679.51 T
3 F
(\322=1\323) 139.27 679.51 T
2 F
(, and) 162.04 679.51 T
3 F
(\322=2\323) 186.17 679.51 T
2 F
( are allowed, corresponding to \322) 208.94 679.51 T
4 F
(OFF) 350.07 679.51 T
2 F
(\323, \322) 369.87 679.51 T
4 F
(ON) 385.14 679.51 T
2 F
(\323, and \322) 398.34 679.51 T
4 F
(FULL) 432.24 679.51 T
2 F
(\323, respectively.) 458.64 679.51 T
2 12 Q
(\245) 99 660.02 T
4 10 Q
(INVALID PROMOTION OF: <boolean> TO <integer>) 111 660.02 T
6 F
(\336) 381 660.02 T
2 11 Q
0.52 (This error indicates that the user tried to mix Boolean and integer values in the same expression.) 111 646.19 P
1.22 (The built-in function) 111 633.19 P
4 F
2.93 (COUNT) 209.08 633.19 P
2 F
1.22 ( can be used to convert a Boolean to an integer and the relational) 242.08 633.19 P
0.61 (operators can be used to convert a number to a Boolean. For example, \3226 +) 111 620.19 P
4 F
1.48 (COUNT\050FLAG\051) 452.99 620.19 P
2 F
0.61 (\323 or) 525.59 620.19 P
(\322\050I <> 0\051\323, respectively.) 111 607.19 T
2 12 Q
(\245) 99 587.7 T
4 10 Q
(INVALID PROMOTION OF: <boolean> TO <real>) 111 587.7 T
6 F
(\336) 363 587.7 T
2 11 Q
1.39 (This error indicates that the user tried to mix Boolean and real values in the same expression.) 111 573.88 P
1.3 (The) 111 560.88 P
1.3 (built-in function) 130.85 560.88 P
4 F
3.13 (COUNT) 208.02 560.88 P
2 F
1.3 ( can be used to convert a Boolean to an integer and the relational) 241.02 560.88 P
0.61 (operators can be used to convert a number to a Boolean. For example, \3226 +) 111 547.88 P
4 F
1.48 (COUNT\050FLAG\051) 452.99 547.88 P
2 F
0.61 (\323 or) 525.59 547.88 P
(\322\050I <> 0\051\323, respectively.) 111 534.88 T
2 12 Q
(\245) 99 515.39 T
4 10 Q
(INVALID PROMOTION OF: <integer> TO <boolean>) 111 515.39 T
6 F
(\336) 381 515.39 T
2 11 Q
0.52 (This error indicates that the user tried to mix Boolean and integer values in the same expression.) 111 501.56 P
1.22 (The built-in function) 111 488.56 P
4 F
2.93 (COUNT) 209.08 488.56 P
2 F
1.22 ( can be used to convert a Boolean to an integer and the relational) 242.08 488.56 P
0.61 (operators can be used to convert a number to a Boolean. For example, \3226 +) 111 475.56 P
4 F
1.48 (COUNT\050FLAG\051) 452.99 475.56 P
2 F
0.61 (\323 or) 525.59 475.56 P
(\322\050I <> 0\051\323, respectively.) 111 462.56 T
2 12 Q
(\245) 99 443.07 T
4 10 Q
(INVALID PROMOTION OF: <real> TO <boolean>) 111 443.07 T
6 F
(\336) 363 443.07 T
2 11 Q
1.39 (This error indicates that the user tried to mix Boolean and real values in the same expression.) 111 429.25 P
1.3 (The) 111 416.25 P
1.3 (built-in function) 130.85 416.25 P
4 F
3.13 (COUNT) 208.02 416.25 P
2 F
1.3 ( can be used to convert a Boolean to an integer and the relational) 241.02 416.25 P
0.61 (operators can be used to convert a number to a Boolean. For example, \3226 +) 111 403.25 P
4 F
1.48 (COUNT\050FLAG\051) 452.99 403.25 P
2 F
0.61 (\323 or) 525.59 403.25 P
(\322\050I <> 0\051\323, respectively.) 111 390.25 T
2 12 Q
(\245) 99 370.75 T
4 10 Q
(INVALID PROMOTION OF: <real> TO <integer>) 111 370.75 T
6 F
(\336) 363 370.75 T
2 11 Q
0.63 (This error indicates that the user mixed real and integer numbers in an expression in such a way) 111 356.93 P
0 (that the real number had to be converted to an integer. This resulted in the loss of the decimal por-) 111 343.93 P
1.55 (tion of the real number. The user probably used real division \050\322/) 111 330.93 P
1.55 (\323\051 instead of integer division) 410.93 330.93 P
(\050\322) 111 317.93 T
4 F
(DIV) 119.55 317.93 T
2 F
(\323\051 somewhere in the expression.) 139.35 317.93 T
2 12 Q
(\245) 99 298.44 T
4 10 Q
(K CANNOT EXCEED N FOR COMB\050N,K\051 AND PERM\050N,K\051:) 111 298.44 T
404.62 297.38 393 297.38 2 L
V
N
5 11 Q
(int) 393 298.44 T
4 10 Q
( \050COMB\051 k < n =) 404.62 298.44 T
512.23 297.38 500.62 297.38 2 L
V
N
5 11 Q
(int) 500.62 298.44 T
4 10 Q
(,) 512.23 298.44 T
(\050expression on line#) 111 286.44 T
281.11 285.38 231 285.38 2 L
V
N
5 11 Q
(linenumber) 231 286.44 T
4 10 Q
(\051) 281.11 286.44 T
6 F
(\336) 293.11 286.44 T
2 11 Q
(This error indicates that an attempt was made to compute the combinations of) 111 272.61 T
5 F
(n) 455.92 272.61 T
2 F
( things taken more) 461.42 272.61 T
0.22 (at a time than there were things to take. The user probably specified the parameters to the built-in) 111 259.61 P
(function in the wrong sequence. Check the expression very carefully to make sure.) 111 246.61 T
2 12 Q
(\245) 99 227.12 T
4 10 Q
(K CANNOT EXCEED N FOR COMB\050N,K\051 AND PERM\050N,K\051:) 111 227.12 T
404.62 226.07 393 226.07 2 L
V
N
5 11 Q
(int) 393 227.12 T
4 10 Q
( \050PERM\051 k < n =) 404.62 227.12 T
512.23 226.07 500.62 226.07 2 L
V
N
5 11 Q
(int) 500.62 227.12 T
4 10 Q
(,) 512.23 227.12 T
(\050expression on line#) 111 215.12 T
281.11 214.07 231 214.07 2 L
V
N
5 11 Q
(linenumber) 231 215.12 T
4 10 Q
(\051) 281.11 215.12 T
6 F
(\336) 293.11 215.12 T
2 11 Q
0.12 (This error indicates that an attempt was made to compute the permutations of) 111 201.3 P
5 F
0.12 (n) 455.58 201.3 P
2 F
0.12 ( things taken more) 461.08 201.3 P
0.22 (at a time than there were things to take. The user probably specified the parameters to the built-in) 111 188.3 P
(function in the wrong sequence. Check the expression very carefully to make sure.) 111 175.3 T
2 12 Q
(\245) 99 155.81 T
4 10 Q
(KEYWORD \322BOOLEAN\323 MISSING FOR BOOLEAN CONSTANT INPUT OR DEFINITION.) 111 155.81 T
6 F
(\336) 519 155.81 T
2 11 Q
0.75 (This error indicates that the expression pointed to evaluated to a Boolean value when a numeric) 111 141.98 P
-0.2 (expression was expected in an) 111 128.98 P
4 F
-0.47 (INPUT) 245.95 128.98 P
2 F
-0.2 ( or constant definition statement. The user must tell ASSIST) 278.95 128.98 P
(if a Boolean constant is being defined. For example,) 111 115.98 T
4 F
(\322FLAG = BOOLEAN X > Y;\323) 343.5 115.98 T
2 12 Q
(\245) 99 96.49 T
4 10 Q
(KEYWORD \322IN\323 IS MISSING:) 111 96.49 T
269.56 95.43 261 95.43 2 L
V
N
5 11 Q
(id) 261 96.49 T
6 10 Q
(\336) 275.56 96.49 T
2 11 Q
-0.13 (This error indicates that the) 111 82.67 P
4 F
-0.31 (FOR) 234.09 82.67 P
2 F
-0.13 ( statement requires the word \322) 253.89 82.67 P
4 F
-0.31 (IN) 385.52 82.67 P
2 F
-0.13 (\323 before the set defining the) 398.72 82.67 P
4 F
-0.31 (FOR) 523.2 82.67 P
2 F
(range. The user must say something like:) 111 69.67 T
4 F
(\322FOR III IN [1..10]\323) 294.32 69.67 T
2 F
(.) 426.32 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "75" 80
%%Page: "76" 81
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(76) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(KEYWORD OR SEMICOLON EXPECTED:) 111 719.33 T
305.56 718.28 297 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 297 719.33 T
6 10 Q
(\336) 311.56 719.33 T
2 11 Q
0.06 (This error indicates that something other than a key word or semicolon was encountered when the) 111 706.52 P
0.14 (syntax for ASSIST requires a key word or semicolon. The token found instead of the key word or) 111 693.52 P
0.4 (semicolon is echoed. There might be some extraneous text at the end of a) 111 680.52 P
4 F
0.96 (DEBUG$) 441.95 680.52 P
2 F
0.4 (,) 481.55 680.52 P
4 F
0.96 (C_OPTION) 487.45 680.52 P
2 F
0.4 (,) 540.25 680.52 P
(or option definition statement.) 111 667.52 T
2 12 Q
(\245) 99 649.05 T
4 10 Q
(KEYWORD USED IN WRONG CONTEXT: DID YOU MEAN TO SAY \322IMPLICIT\323?) 111 649.05 T
6 F
(\336) 489 649.05 T
2 11 Q
0.22 (This error indicates that the user used a reserved word in the wrong place. The user probably said) 111 636.24 P
(\322) 111 623.24 T
4 F
(INTRINSIC) 115.88 623.24 T
2 F
(\323 instead of \322) 175.28 623.24 T
4 F
(IMPLICIT) 233.63 623.24 T
2 F
(\323.) 286.43 623.24 T
2 12 Q
(\245) 99 604.76 T
4 10 Q
(KEYWORD USED IN WRONG CONTEXT: WITH CLAUSE INVALID WHEN TRIM OFF.) 111 604.76 T
6 F
(\336) 507 604.76 T
2 11 Q
0.59 (This error indicates that the user used the reserved word \322) 111 591.95 P
4 F
1.41 (WITH) 371.02 591.95 P
2 F
0.59 (\323 in the wrong context. The user) 397.42 591.95 P
-0.23 (probably tried to specify a value for) 111 578.95 P
-0.23 ( when trimming was off. See section 4.2 for more details) 295.4 578.95 P
(on trimming.) 111 565.95 T
2 12 Q
(\245) 99 547.48 T
4 10 Q
(KEYWORD USED IN WRONG CONTEXT:) 111 547.48 T
305.56 546.42 297 546.42 2 L
V
N
5 11 Q
(id) 297 547.48 T
6 10 Q
(\336) 311.56 547.48 T
2 11 Q
(This error indicates that the user used a reserved word in the wrong place.) 111 534.67 T
2 12 Q
(\245) 99 516.19 T
4 10 Q
(LEFT \322\050\322 EXPECTED:) 111 516.19 T
248.83 515.13 225 515.13 2 L
V
N
5 11 Q
(token) 225 516.19 T
6 10 Q
(\336) 254.83 516.19 T
2 11 Q
0.26 (This error indicates that something other than a left parenthesis was encountered when the syntax) 111 503.38 P
(for ASSIST requires a left parenthesis. The token found instead of the left parenthesis is echoed.) 111 490.38 T
2 12 Q
(\245) 99 471.9 T
4 10 Q
(LEFT \322<\322 EXPECTED: NO MATCHING LEFT \322<\322 FOR THIS \322>\323) 111 471.9 T
6 F
(\336) 429 471.9 T
2 11 Q
2.1 (This error indicates that something other than a left-angle bracket was encountered in a rate) 111 459.1 P
0.42 (expression when the syntax for ASSIST requires a left-angle bracket. The token found instead of) 111 446.1 P
(the left-angle bracket is echoed.) 111 433.1 T
2 12 Q
(\245) 99 414.62 T
4 10 Q
(LEFT \322[\322 EXPECTED:) 111 414.62 T
248.83 413.56 225 413.56 2 L
V
N
5 11 Q
(token) 225 414.62 T
6 10 Q
(\336) 254.83 414.62 T
2 11 Q
0.47 (This error indicates that something other than a left bracket was encountered in a rate expression) 111 401.81 P
0.25 (when the syntax for ASSIST requires a left bracket. The token found instead of the left bracket is) 111 388.81 P
(echoed.) 111 375.81 T
2 12 Q
(\245) 99 357.33 T
4 10 Q
(LOWER BOUND TO LEFT OF \322..\323 RANGE MUST BE <= UPPER BOUND TO RIGHT:) 111 357.33 T
127.5 344.28 111 344.28 2 L
V
N
5 11 Q
(min) 111 345.33 T
4 10 Q
(..) 127.5 345.33 T
157.83 344.28 139.5 344.28 2 L
V
N
5 11 Q
(max) 139.5 345.33 T
6 10 Q
(\336) 163.83 345.33 T
2 11 Q
-0.01 (This error indicates that a backwards range was specified in a) 111 332.52 P
4 F
-0.04 (SPACE) 384.23 332.52 P
2 F
-0.01 ( statement, either as an array) 417.23 332.52 P
0 (subscript range or a state-space variable value range. The user must specify the minimum value of) 111 319.52 P
(the range before the maximum value for the range. For example, say \3226..10\323 and not \32210..6\323.) 111 306.52 T
2 12 Q
(\245) 99 288.05 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: \051) 111 288.05 T
6 F
(\336) 327 288.05 T
2 11 Q
-0.26 (This error indicates that something other than a closing parenthesis was encountered when the syn-) 111 275.24 P
0.28 (tax for ASSIST requires a closing parenthesis. The token found instead of the closing parenthesis) 111 262.24 P
1.18 (is echoed. The compiler was able to make an intelligent guess that the closing parenthesis was) 111 249.24 P
0.07 (probably missing and that insertion of the missing closing parenthesis would probably prevent the) 111 236.24 P
-0.23 (detection of more extraneous errors. The insertion was therefore made, but the user will have to fix) 111 223.24 P
(the problem before the model can be generated.) 111 210.24 T
2 12 Q
(\245) 99 191.76 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: ,) 111 191.76 T
6 F
(\336) 327 191.76 T
2 11 Q
1.62 (This error indicates that something other than a comma was encountered when the syntax for) 111 178.95 P
0.71 (ASSIST requires a comma. The token found instead of the comma is echoed. The compiler was) 111 165.95 P
0.72 (able to make an intelligent guess that the comma was probably missing and that insertion of the) 111 152.95 P
1.3 (missing comma would probably prevent the detection of more extraneous errors. The insertion) 111 139.95 P
(was therefore made, but the user will have to fix the problem before the model can be generated.) 111 126.95 T
2 12 Q
(\245) 99 108.48 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: ;) 111 108.48 T
6 F
(\336) 327 108.48 T
2 11 Q
0.7 (This error indicates that something other than a semicolon was encountered when the syntax for) 111 95.67 P
0.35 (ASSIST requires a semicolon. The token found instead of the semicolon is echoed. The compiler) 111 82.67 P
0.47 (was able to make an intelligent guess that the semicolon was probably missing and that insertion) 111 69.67 P
269.77 570.65 295.4 587.83 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
6 10.5 Q
0 X
0 0 0 1 0 0 0 K
(W) 270.77 578.95 T
2 8.5 Q
(t) 279.23 574.78 T
(r) 281.59 574.78 T
(i) 284.42 574.78 T
(m) 286.79 574.78 T
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "76" 81
%%Page: "77" 82
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(77) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
1.22 (of the missing semicolon would probably prevent the detection of more extraneous errors. The) 111 718.67 P
0.83 (insertion was therefore made, but the user will have to fix the problem before the model can be) 111 705.67 P
(generated.) 111 692.67 T
2 12 Q
(\245) 99 672.02 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: =) 111 672.02 T
6 F
(\336) 327 672.02 T
2 11 Q
0.02 (This error indicates that something other than an equals sign was encountered when the syntax for) 111 657.04 P
0.5 (ASSIST requires an equals sign. The token found instead of the equals sign is echoed. The com-) 111 644.04 P
1.34 (piler was able to make an intelligent guess that the equals sign was probably missing and that) 111 631.04 P
1.67 (insertion of the missing equals sign would probably prevent the detection of more extraneous) 111 618.04 P
1.53 (errors. The insertion was therefore made, but the user will have to fix the problem before the) 111 605.04 P
(model can be generated.) 111 592.04 T
2 12 Q
(\245) 99 571.4 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: OF) 111 571.4 T
6 F
(\336) 333 571.4 T
2 11 Q
-0.12 (This error indicates that something other than an \322) 111 556.42 P
4 F
-0.3 (OF) 331.2 556.42 P
2 F
-0.12 (\323 key word was encountered when the syntax) 344.39 556.42 P
0.12 (for ASSIST requires an \322) 111 543.42 P
4 F
0.29 (OF) 222.68 543.42 P
2 F
0.12 (\323 key word. The token found instead of the \322) 235.88 543.42 P
4 F
0.29 (OF) 433.7 543.42 P
2 F
0.12 (\323 key word is echoed.) 446.9 543.42 P
0.17 (The compiler was able to make an intelligent guess that the \322) 111 530.42 P
4 F
0.4 (OF) 381.39 530.42 P
2 F
0.17 (\323 key word was probably missing) 394.59 530.42 P
1.1 (and that insertion of the missing \322) 111 517.42 P
4 F
2.63 (OF) 266.68 517.42 P
2 F
1.1 (\323 key word would probably prevent the detection of more) 279.88 517.42 P
1.41 (extraneous errors. The insertion was therefore made, but the user will have to fix the problem) 111 504.42 P
(before the model can be generated.) 111 491.42 T
2 12 Q
(\245) 99 470.77 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: ]) 111 470.77 T
6 F
(\336) 327 470.77 T
2 11 Q
0.26 (This error indicates that something other than a closing bracket was encountered when the syntax) 111 455.79 P
0.51 (for ASSIST requires a closing bracket. The token found instead of the closing bracket is echoed.) 111 442.79 P
0.18 (The compiler was able to make an intelligent guess that the closing bracket was probably missing) 111 429.79 P
1.18 (and that insertion of the missing closing bracket would probably prevent the detection of more) 111 416.79 P
1.41 (extraneous errors. The insertion was therefore made, but the user will have to fix the problem) 111 403.79 P
(before the model can be generated.) 111 390.79 T
2 12 Q
(\245) 99 370.15 T
4 10 Q
(MUST REBUILD USING THE HUGE MEMORY MODEL: ASSIST) 111 370.15 T
6 F
(\336) 405 370.15 T
2 11 Q
1.28 (If ASSIST is compiled for use on a 386 or 387 IBM PC, then the huge memory model of the) 111 355.17 P
0.21 (Microsoft  C  compiler must be used. Since SURE will not run on an IBM PC, ASSIST is not yet) 111 342.17 P
-0.22 (supported on the PC. If a user site ports ASSIST to the PC, be sure to run the production version of) 111 329.17 P
0.33 (an ASSIST file through a tested SUN or VAX version before accepting the results. See your sys-) 111 316.17 P
(tem manager.) 111 303.17 T
2 12 Q
(\245) 99 282.52 T
4 10 Q
(MUST SPECIFY THE WHOLE ARRAY, NOT SCALAR ELEMENT:) 111 282.52 T
6 F
(\336) 411 282.52 T
2 11 Q
-0.12 (Certain built-in functions operate on all the array elements. When this is the case, the user may not) 111 267.54 P
(specify a subscript after the name of the array.) 111 254.54 T
2 12 Q
(\245) 99 233.9 T
4 10 Q
(NAME OF AN ARRAY EXPECTED:) 111 233.9 T
281.56 232.84 273 232.84 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 273 233.9 T
6 10 Q
(\336) 287.56 233.9 T
2 11 Q
0.08 (Certain built-in functions operate on expressions or arrays. An attempt to pass in an implicit func-) 111 218.92 P
(tion with parameters as if it were an array will cause an error.) 111 205.92 T
2 12 Q
(\245) 99 185.27 T
4 10 Q
(NAMED CONSTANT EXPECTED:) 111 185.27 T
284.83 184.22 261 184.22 2 L
V
N
5 11 Q
(token) 261 185.27 T
4 10 Q
( BEFORE CONCATENATION OPERATOR) 284.83 185.27 T
6 F
(\336) 470.83 185.27 T
2 11 Q
0 (This error indicates that something other than a named constant was encountered preceding a con-) 111 170.29 P
1.46 (catenation character when the syntax for ASSIST requires a named constant. The token found) 111 157.29 P
0.09 (instead of the named constant is echoed. State-space variable names are not allowed before a con-) 111 144.29 P
0.15 (catenation operator. If a state-space array element must be referenced in a rate expression, use the) 111 131.29 P
(array syntax with the index in square brackets.) 111 118.29 T
2 12 Q
(\245) 99 97.65 T
4 10 Q
(NEGATIVE VALUES NOT ALLOWED. USE A WHOLE NUMBER:) 111 97.65 T
416.62 96.59 405 96.59 2 L
V
N
5 11 Q
(int) 405 97.65 T
4 10 Q
( COMPUTED) 416.62 97.65 T
6 F
(\336) 476.62 97.65 T
2 11 Q
0.88 (This error indicates that a negative number was found where a whole number \050zero or positive\051) 111 82.67 P
(was expected. Negative integers are not allowed in the rule section except in rate expressions.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "77" 82
%%Page: "78" 83
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(78) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(NEGATIVE VALUES NOT ALLOWED. USE A WHOLE NUMBER:) 111 719.33 T
416.62 718.28 405 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(int) 405 719.33 T
4 10 Q
( IS THE COMPUTED) 416.62 719.33 T
(VALUE.) 111 707.33 T
6 F
(\336) 153 707.33 T
2 11 Q
-0.14 (This error indicates that a negative number was computed for a constant expression where a whole) 111 694.31 P
0.06 (number is required. This error usually indicates that one of the bounds on a state-space variable in) 111 681.31 P
-0.11 (the) 111 668.31 P
4 F
-0.27 (SPACE) 127.08 668.31 P
2 F
-0.11 ( statement is negative or the repetition count to the left of the) 160.08 668.31 P
3 F
-0.11 (OF) 429.61 668.31 P
2 F
-0.11 ( key word in a) 444.88 668.31 P
4 F
-0.27 (START) 510 668.31 P
2 F
(statement is negative.) 111 655.31 T
2 12 Q
(\245) 99 636.63 T
4 10 Q
(NEGATIVE VALUES NOT ALLOWED. USE A WHOLE NUMBER:) 111 636.63 T
416.62 635.57 405 635.57 2 L
V
N
5 11 Q
(int) 405 636.63 T
4 10 Q
( \050COMB\051 n < 0,) 416.62 636.63 T
(\050expression on line#) 111 624.63 T
281.11 623.57 231 623.57 2 L
V
N
5 11 Q
(linenumber) 231 624.63 T
4 10 Q
(\051) 281.11 624.63 T
6 F
(\336) 293.11 624.63 T
2 11 Q
0.66 (This error indicates that, during rule generation, a negative number was computed and passed to) 111 611.61 P
0.2 (the built-in function) 111 598.61 P
8 F
0.49 (COMB) 202.36 598.61 P
2 F
0.2 (. The user needs to check the input file for an incorrect specification of) 228.76 598.61 P
0.25 (the model. The expression that caused the problem can be most quickly located by examining the) 111 585.61 P
(log file.) 111 572.61 T
2 12 Q
(\245) 99 553.92 T
4 10 Q
(NEGATIVE VALUES NOT ALLOWED. USE A WHOLE NUMBER:) 111 553.92 T
416.62 552.87 405 552.87 2 L
V
N
5 11 Q
(int) 405 553.92 T
4 10 Q
( \050FACT\051 n < 0,) 416.62 553.92 T
(\050expression on line#) 111 541.92 T
281.11 540.87 231 540.87 2 L
V
N
5 11 Q
(linenumber) 231 541.92 T
4 10 Q
(\051) 281.11 541.92 T
6 F
(\336) 293.11 541.92 T
2 11 Q
0.66 (This error indicates that, during rule generation, a negative number was computed and passed to) 111 528.9 P
0.2 (the built-in function) 111 515.9 P
8 F
0.49 (FACT) 202.36 515.9 P
2 F
0.2 (. The user needs to check the input file for an incorrect specification of) 228.76 515.9 P
0.25 (the model. The expression that caused the problem can be most quickly located by examining the) 111 502.9 P
(log file.) 111 489.9 T
2 12 Q
(\245) 99 471.22 T
4 10 Q
(NEGATIVE VALUES NOT ALLOWED. USE A WHOLE NUMBER:) 111 471.22 T
416.62 470.16 405 470.16 2 L
V
N
5 11 Q
(int) 405 471.22 T
4 10 Q
( \050PERM\051 n < 0,) 416.62 471.22 T
(\050expression on line#) 111 459.22 T
281.11 458.16 231 458.16 2 L
V
N
5 11 Q
(linenumber) 231 459.22 T
4 10 Q
(\051) 281.11 459.22 T
6 F
(\336) 293.11 459.22 T
2 11 Q
0.66 (This error indicates that, during rule generation, a negative number was computed and passed to) 111 446.2 P
0.2 (the built-in function) 111 433.2 P
8 F
0.49 (PERM) 202.36 433.2 P
2 F
0.2 (. The user needs to check the input file for an incorrect specification of) 228.76 433.2 P
0.25 (the model. The expression that caused the problem can be most quickly located by examining the) 111 420.2 P
(log file.) 111 407.2 T
2 12 Q
(\245) 99 388.51 T
4 10 Q
(NOT ALLOWED IN IMPLICIT DEFINITION BODY.) 111 388.51 T
(ONLY STATE-SPACE VARIABLES, NAMED-CONSTANTS, OR LITERALS MAY BE) 111 376.51 T
(INHERITED:) 111 364.51 T
185.56 363.45 177 363.45 2 L
V
N
5 11 Q
(id) 177 364.51 T
6 10 Q
(\336) 191.56 364.51 T
2 11 Q
-0.09 (This error indicates that the indicated identifier could not be used in the body of an implicit defini-) 111 351.49 P
0.46 (tion. It was probably used as a parameter in a previous) 111 338.49 P
4 F
1.1 (FUNCTION) 358.58 338.49 P
2 F
0.46 ( or) 411.38 338.49 P
4 F
1.1 (IMPLICIT) 426.96 338.49 P
2 F
0.46 (. It might be a) 479.76 338.49 P
(state-space variable that was used in the body but not listed in the state-space variable list.) 111 325.49 T
2 12 Q
(\245) 99 306.8 T
4 10 Q
(NOT YET IMPLEMENTED.) 111 306.8 T
6 F
(\336) 237 306.8 T
2 11 Q
-0.14 (This error indicates that the user tried to use a future option of a pending version of ASSIST that is) 111 293.78 P
-0.09 (still under development and not yet supported. At release 7.0 of ASSIST, there are no features that) 111 280.78 P
(generate this error.) 111 267.78 T
2 12 Q
(\245) 99 249.1 T
4 10 Q
(NUMBER OF ELEMENTS DOES NOT MATCH NUMBER OF ELEMENTS IN PREVIOUS ROW OF) 111 249.1 T
(DOUBLY SUBSCRIPTED ARRAY CONSTANT:) 111 237.1 T
329.56 236.04 321 236.04 2 L
V
N
5 11 Q
(id) 321 237.1 T
6 10 Q
(\336) 335.56 237.1 T
2 11 Q
0.21 (This error indicates that a doubly subscripted array constant is being declared, but the rows of the) 111 224.08 P
1.33 (table do not all have the same number of elements. If the rows are supposed to have different) 111 211.08 P
(lengths, then pad the shorter rows with trailing zeros so that all rows have the same length.) 111 198.08 T
2 12 Q
(\245) 99 179.39 T
4 10 Q
(NUMBER OF ERRORS EXCEEDS LIMIT OF:) 111 179.39 T
332 178.34 321 178.34 2 L
V
N
5 11 Q
(40) 321 179.39 T
6 10 Q
(\336) 338 179.39 T
2 11 Q
-0.13 (This error indicates that the maximum number of errors per input file has been exceeded.  ASSIST) 111 166.37 P
0.99 (will therefore no longer continue parsing the input file for additional errors/warnings. The limit) 111 153.37 P
0.79 (can be increased with the) 111 140.37 P
3 F
0.79 (\320el) 232.42 140.37 P
2 F
0.79 (  command line option as in) 245.86 140.37 P
3 F
0.79 (\322\320el=50\323) 379.89 140.37 P
2 F
0.79 (. The errors will ultimately) 421.61 140.37 P
0.68 (have to be fixed anyway, so it is good practice to start correcting them even if the limit is being) 111 127.37 P
(increased.) 111 114.37 T
2 12 Q
(\245) 99 95.69 T
4 10 Q
(NUMBER OF ERRORS/LINE EXCEEDS LIMIT OF:) 111 95.69 T
356.5 94.63 351 94.63 2 L
V
N
5 11 Q
(5) 351 95.69 T
6 10 Q
(\336) 362.5 95.69 T
2 11 Q
0.1 (This error indicates that the maximum number of errors per line has been exceeded.  ASSIST will) 111 82.67 P
0.11 (therefore no longer continue parsing the input file for additional errors/warnings. The limit can be) 111 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "78" 83
%%Page: "79" 84
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(79) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.21 (increased with the) 111 718.67 P
3 F
0.21 (\320lel) 197.36 718.67 P
2 F
0.21 (  command-line option as in) 213.86 718.67 P
3 F
0.21 (\322\320lel=10\323) 343.93 718.67 P
2 F
0.21 (. The errors will ultimately have to) 388.7 718.67 P
(be fixed anyway, so it is good practice to start correcting them even if the limit is being increased.) 111 705.67 T
2 12 Q
(\245) 99 686.58 T
4 10 Q
(NUMBER OF WARNINGS EXCEEDS LIMIT OF:) 111 686.58 T
344 685.53 333 685.53 2 L
V
0.53 H
0 Z
N
5 11 Q
(40) 333 686.58 T
6 10 Q
(\336) 350 686.58 T
2 11 Q
1.81 (This error indicates that the maximum number of warnings per input file has been exceeded.) 111 673.17 P
-0.23 (ASSIST will therefore no longer continue parsing the input file for additional errors/warnings. The) 111 660.17 P
-0.26 (limit can be increased with the) 111 647.17 P
3 F
-0.26 (\320wl) 249.37 647.17 P
2 F
-0.26 ( command-line option as in) 268.36 647.17 P
3 F
-0.26 (\322\320wl=50\323) 392.65 647.17 P
2 F
-0.26 (. The warnings will ulti-) 437.42 647.17 P
0.24 (mately have to be fixed anyway, so it is good practice to start correcting them, even if the limit is) 111 634.17 P
(being increased.) 111 621.17 T
2 12 Q
(\245) 99 602.08 T
4 10 Q
(NUMBER OF WARNINGS/LINE EXCEEDS LIMIT OF:) 111 602.08 T
368.5 601.03 363 601.03 2 L
V
N
5 11 Q
(5) 363 602.08 T
6 10 Q
(\336) 374.5 602.08 T
2 11 Q
0.45 (This error indicates that the maximum number of warnings per line has been exceeded.  ASSIST) 111 588.67 P
0.99 (will therefore no longer continue parsing the input file for additional errors/warnings. The limit) 111 575.67 P
0.75 (can be increased with the) 111 562.67 P
3 F
0.75 (\320lwl) 232.15 562.67 P
2 F
0.75 (  command-line option as in) 251.71 562.67 P
3 F
0.75 (\322\320lwl=10\323) 385.56 562.67 P
2 F
0.75 (. The warnings will ulti-) 433.39 562.67 P
0.24 (mately have to be fixed anyway, so it is good practice to start correcting them, even if the limit is) 111 549.67 P
(being increased.) 111 536.67 T
2 12 Q
(\245) 99 517.58 T
4 10 Q
(NUMBER TOO LONG OR VALUE TOO BIG:) 111 517.58 T
326.62 516.53 315 516.53 2 L
V
N
5 11 Q
(int) 315 517.58 T
4 10 Q
( IS THE COMPUTED VALUE.) 326.62 517.58 T
6 F
(\336) 470.62 517.58 T
2 11 Q
0.46 (This error indicates that a number was computed for a constant expression and it was larger than) 111 504.17 P
0.06 (allowed in its context. This error usually indicates that one of the bounds on a state-space variable) 111 491.17 P
0.16 (in the) 111 478.17 P
4 F
0.38 (SPACE) 138.82 478.17 P
2 F
0.16 ( statement is larger than 32767 or the repetition count to the left of the) 171.82 478.17 P
4 F
0.38 (OF) 485.5 478.17 P
2 F
0.16 ( key word) 498.7 478.17 P
1.71 (in a) 111 465.17 P
4 F
4.11 (START) 133.37 465.17 P
2 F
1.71 ( statement is larger than 32767. State-space variables can have values as large as) 166.37 465.17 P
-0.24 (32767, but the difference between the upper and lower bound on the range of values cannot exceed) 111 452.17 P
(255.) 111 439.17 T
2 12 Q
(\245) 99 420.08 T
4 10 Q
(NUMERIC ITEM EXPECTED:) 111 420.08 T
257.56 419.03 249 419.03 2 L
V
N
5 11 Q
(id) 249 420.08 T
4 10 Q
( \050BUILT-IN FUNCTION) 257.56 420.08 T
396.5 419.03 377.56 419.03 2 L
V
N
5 11 Q
(func) 377.56 420.08 T
4 10 Q
(\051) 396.5 420.08 T
6 F
(\336) 408.5 420.08 T
2 11 Q
-0.26 (This error indicates that something other than a numeric item was encountered in the parameter list) 111 406.67 P
1.3 (for a built-in function such as) 111 393.67 P
4 F
3.13 (SUM) 251.41 393.67 P
2 F
1.3 ( when the syntax for ASSIST requires a numeric item. The) 271.21 393.67 P
(token found instead of the numeric item is echoed.) 111 380.67 T
2 12 Q
(\245) 99 361.58 T
4 10 Q
(ONLY ONE WILD SUBSCRIPT ALLOWED PER ARRAY REFERENCE:) 111 361.58 T
437.56 360.53 429 360.53 2 L
V
N
5 11 Q
(id) 429 361.58 T
6 10 Q
(\336) 443.56 361.58 T
2 11 Q
2.95 (This error indicates that a doubly wildcarded subarray was passed to a list function as in) 111 348.17 P
4 F
-0.34 (\322SUM\050FOO[*,*]\051\323) 111 335.17 P
2 F
-0.14 (. The syntax allows only for operation on a single row or a single column. If) 210 335.17 P
(the whole table must be summed in both directions, then the correct syntax is) 111 322.17 T
4 F
(\322SUM\050FOO\051\323) 453.5 322.17 T
2 F
(.) 519.5 322.17 T
2 12 Q
(\245) 99 303.08 T
4 10 Q
(ONLY READ PERMISSION CAN BE GRANTED:) 111 303.08 T
362.64 302.03 333 302.03 2 L
V
N
5 11 Q
(foo.ast) 333 303.08 T
6 10 Q
(\336) 368.64 303.08 T
2 11 Q
-0.13 (This error indicates that the user does not have write permission to the directory in which the input) 111 289.67 P
0.1 (file resides. The user should copy the input file to his own directory and run ASSIST there. If that) 111 276.67 P
(does not work, contact the local system manager for help.) 111 263.67 T
2 12 Q
(\245) 99 244.58 T
4 10 Q
(ONLY STATE-SPACE VARIABLES MAY BE LISTED IN THE STATE-SPACE VARIABLE) 111 244.58 T
(LIST:) 111 232.58 T
155.56 231.53 147 231.53 2 L
V
N
5 11 Q
(id) 147 232.58 T
6 10 Q
(\336) 161.56 232.58 T
2 11 Q
-0.18 (This error indicates that the user attempted to list something other than a state-space variable name) 111 219.17 P
1.14 (between the square brackets in an) 111 206.17 P
4 F
2.74 (IMPLICIT) 268.74 206.17 P
2 F
1.14 ( definition statement. If the identifier is a named) 321.54 206.17 P
0.36 (constant, it can be used without being listed. If the identifier is a function parameter, then it must) 111 193.17 P
(be listed in the parameter list between the parentheses.) 111 180.17 T
2 12 Q
(\245) 99 161.08 T
4 10 Q
(PARAMETER COUNT OVERFLOW. SPECIFY -P OPTION:) 111 161.08 T
389.56 160.03 381 160.03 2 L
V
N
5 11 Q
(id) 381 161.08 T
6 10 Q
(\336) 395.56 161.08 T
2 11 Q
-0.02 (This error indicates that the parameter \050or state-space variable\051 list contained more than the  maxi-) 111 147.67 P
0.15 (mum number of identifiers allowed. Since the default is fairly large, a function that exceeds it has) 111 134.67 P
0.36 (so many parameters that it would probably be difficult to keep them straight. The best solution is) 111 121.67 P
0.56 (to try to have a larger number of smaller functions with fewer parameters. The user can increase) 111 108.67 P
1.46 (the parameter limit if necessary with the  \320p=) 111 95.67 P
341.55 94.61 322.61 94.61 2 L
V
N
5 F
1.46 (num) 322.61 95.67 P
2 F
1.46 (  command-line option or in a \322) 341.55 95.67 P
4 F
3.51 (C_OPTION) 490.2 95.67 P
-0.49 (P) 111 82.67 P
2 F
-0.2 (=) 117.6 82.67 P
142.75 81.61 123.8 81.61 2 L
V
N
5 F
-0.2 (num) 123.8 82.67 P
2 F
-0.2 (;\323  statement) 142.75 82.67 P
-0.2 (as) 201.4 82.67 P
-0.2 (the) 214.02 82.67 P
-0.2 (first) 230.93 82.67 P
-0.2 ( line) 249.56 82.67 P
-0.2 (of) 272.07 82.67 P
-0.2 ( the) 282.14 82.67 P
-0.2 ( input) 299.04 82.67 P
-0.2 ( file.  The) 325.12 82.67 P
-0.2 (default) 370.73 82.67 P
-0.2 ( is) 402.2 82.67 P
3 F
-0.2 (\320p=64) 417.17 82.67 P
2 F
-0.2 (  for) 446.06 82.67 P
-0.2 (workstations) 467.43 82.67 P
-0.2 (and) 527.12 82.67 P
3 F
(\320p=32) 111 69.67 T
2 F
(  for the IBM PC.) 139.89 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "79" 84
%%Page: "80" 85
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(80) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(PARAMETER COUNT OVERFLOW. SPECIFY /P OPTION:) 111 719.33 T
389.56 718.28 381 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 381 719.33 T
6 10 Q
(\336) 395.56 719.33 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 703.84 T
2 12 Q
(\245) 99 682.68 T
4 10 Q
(PERMISSION DENIED. NO ACCESS GRANTED. PLEASE CONTACT SYSTEM MANAGER:) 111 682.68 T
140.65 669.62 111 669.62 2 L
V
N
5 11 Q
(foo.ast) 111 670.68 T
6 10 Q
(\336) 146.65 670.68 T
2 11 Q
0.47 (This error indicates that the user does not have permission to read the input file. The user should) 111 655.19 P
-0.14 (talk to the owner of the file about gaining permission or contact the local system manager for help.) 111 642.19 P
2 12 Q
(\245) 99 621.03 T
4 10 Q
(POSTFIX EXPRESSION STACK OVERFLOW. SPECIFY -O OPTION: COMMAND LINE) 111 621.03 T
(OPTIONS TOO BIG.) 111 609.03 T
6 F
(\336) 213 609.03 T
2 11 Q
0.86 (This error indicates that the user asked for more memory for the expression stack than allowed.) 111 593.54 P
(Try asking for less. The default is) 111 580.54 T
3 F
(\320o=100) 264.67 580.54 T
2 F
(  for workstations and) 298.44 580.54 T
3 F
(\320o=50) 399.87 580.54 T
2 F
(  for the IBM PC.) 428.14 580.54 T
2 12 Q
(\245) 99 559.38 T
4 10 Q
(POSTFIX EXPRESSION STACK OVERFLOW. SPECIFY /O OPTION: COMMAND LINE) 111 559.38 T
(OPTIONS TOO BIG.) 111 547.38 T
6 F
(\336) 213 547.38 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 531.88 T
2 12 Q
(\245) 99 510.73 T
4 10 Q
(POSTFIX EXPRESSION STACK OVERFLOW. SPECIFY -O OPTION:) 111 510.73 T
443.56 509.67 435 509.67 2 L
V
N
5 11 Q
(id) 435 510.73 T
6 10 Q
(\336) 449.56 510.73 T
2 11 Q
1.68 (This error indicates that a very long expression was being parsed. The expression was longer) 111 495.23 P
0.14 (than) 111 482.23 P
0.14 (ever anticipated. If the expression cannot be simplified, then increase the allowable size with) 132.69 482.23 P
0.08 (the \320o=) 111 469.23 P
163.41 468.18 144.47 468.18 2 L
V
N
5 F
0.08 (num) 144.47 469.23 P
2 F
0.08 ( command-line option or in a \322) 163.41 469.23 P
4 F
0.18 (C_OPTION 0) 299.52 469.23 P
2 F
0.08 (=) 365.71 469.23 P
390.85 468.18 371.91 468.18 2 L
V
N
5 F
0.08 (num) 371.91 469.23 P
2 F
0.08 ( ;\323 statement as the first line of the) 390.85 469.23 P
(input file. The default is) 111 456.23 T
3 F
(\320o=100) 222.52 456.23 T
2 F
( for workstations and) 259.04 456.23 T
3 F
(\320o=50) 357.72 456.23 T
2 F
(  for the IBM PC.) 385.99 456.23 T
2 12 Q
(\245) 99 435.07 T
4 10 Q
(POSTFIX EXPRESSION STACK OVERFLOW. SPECIFY /O OPTION:) 111 435.07 T
443.56 434.02 435 434.02 2 L
V
N
5 11 Q
(id) 435 435.07 T
6 10 Q
(\336) 449.56 435.07 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 419.58 T
2 12 Q
(\245) 99 398.42 T
4 10 Q
(PRODUCT OF DIMENSION RANGES IS GREATER THAN 256:) 111 398.42 T
413.56 397.36 405 397.36 2 L
V
N
5 11 Q
(id) 405 398.42 T
6 10 Q
(\336) 419.56 398.42 T
2 11 Q
-0.27 (This error indicates that the user declared a doubly subscripted array table with more than 256 total) 111 382.93 P
(elements in it. Try using a smaller table size.) 111 369.93 T
2 12 Q
(\245) 99 348.77 T
4 10 Q
(PROGRAM MUST CONTAIN AT LEAST ONE TRANSITION:) 111 348.77 T
395.56 347.71 387 347.71 2 L
V
N
5 11 Q
(id) 387 348.77 T
6 10 Q
(\336) 401.56 348.77 T
2 11 Q
1.38 (This error indicates that the program did not contain any) 111 333.27 P
4 F
3.32 (TRANTO) 375.95 333.27 P
2 F
1.38 ( statements. Every) 415.55 333.27 P
4 F
3.32 (ASSIST) 503.4 333.27 P
2 F
(input file must contain at least one transition.) 111 320.27 T
2 12 Q
(\245) 99 299.12 T
4 10 Q
(PROMPT MESSAGE IS TOO LONG. MESSAGE TRUNCATED:) 111 299.12 T
430.27 298.06 393 298.06 2 L
V
N
5 11 Q
(message) 393 299.12 T
6 10 Q
(\336) 436.27 299.12 T
2 11 Q
1.18 (This error indicates that the prompt message specified in an) 111 283.62 P
4 F
2.83 (INPUT) 387.97 283.62 P
2 F
1.18 ( statement was longer than) 420.97 283.62 P
0.41 (allowed. Prompt messages should be brief, yet clear. A prompt message may not have more than) 111 270.62 P
(90 characters.) 111 257.62 T
2 12 Q
(\245) 99 236.46 T
4 10 Q
(PROMPT STRING OR IDENTIFIER EXPECTED:) 111 236.46 T
362.83 235.41 339 235.41 2 L
V
N
5 11 Q
(token) 339 236.46 T
6 10 Q
(\336) 368.83 236.46 T
2 11 Q
0.39 (This error indicates that something other than a prompt string or identifier was encountered in an) 111 220.97 P
4 F
2.04 (INPUT) 111 207.97 P
2 F
0.85 ( statement when the syntax for ASSIST requires a prompt string or identifier. The token) 144 207.97 P
(found instead of the prompt string or identifier is echoed.) 111 194.97 T
2 12 Q
(\245) 99 173.81 T
4 10 Q
(QUITTING COMPILATION !!!) 111 173.81 T
6 F
(\336) 261 173.81 T
2 11 Q
1.83 (This error indicates that ASSIST was unable to continue processing the input file because of) 111 158.32 P
0.38 (an) 111 145.32 P
0.38 (inability to correct for previous errors. The user should fix all known errors and this error will) 124.13 145.32 P
(disappear.) 111 132.32 T
2 12 Q
(\245) 99 111.16 T
4 10 Q
-0.27 (RANGE IS TOO WIDE. DIFFERENCE \322UPPER-LOWER\323 LIMITED BY: 255 \050) 111 111.16 P
491.07 110.1 474.57 110.1 2 L
V
N
5 11 Q
-0.12 (min) 474.57 111.16 P
4 10 Q
-0.27 (..) 491.07 111.16 P
521.4 110.1 503.07 110.1 2 L
V
N
5 11 Q
-0.12 (max) 503.07 111.16 P
4 10 Q
-0.27 (\051) 521.4 111.16 P
6 F
-0.11 (\336) 533.13 111.16 P
2 11 Q
0.29 (This error indicates that the range specified by the user is too wide. Only 256 dimension slots are) 111 95.67 P
1.99 (allowed, inclusive of both end points of the range. The user must make) 111 82.67 P
468.31 81.61 451.81 81.61 2 L
V
N
5 F
1.99 (min) 451.81 82.67 P
2 F
1.99 ( and) 468.31 82.67 P
511.99 81.61 493.67 81.61 2 L
V
N
5 F
1.99 (max) 493.67 82.67 P
2 F
1.99 ( closer) 511.99 82.67 P
(together.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "80" 85
%%Page: "81" 86
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(81) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(RANGE IS TOO WIDE. DIFFERENCE \322UPPER-LOWER\323 LIMITED BY: 32767) 111 719.33 T
(\050) 111 707.33 T
133.5 706.28 117 706.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(min) 117 707.33 T
4 10 Q
(..) 133.5 707.33 T
163.83 706.28 145.5 706.28 2 L
V
N
5 11 Q
(max) 145.5 707.33 T
4 10 Q
(\051) 163.83 707.33 T
6 F
(\336) 175.83 707.33 T
2 11 Q
2.16 (This error indicates that the range specified by the user is too wide. Only 32767 values are) 111 693.86 P
1.99 (allowed, inclusive of both end points of the range. The user must make) 111 680.86 P
468.31 679.8 451.81 679.8 2 L
V
N
5 F
1.99 (min) 451.81 680.86 P
2 F
1.99 ( and) 468.31 680.86 P
511.99 679.8 493.67 679.8 2 L
V
N
5 F
1.99 (max) 493.67 680.86 P
2 F
1.99 ( closer) 511.99 680.86 P
(together.) 111 667.86 T
2 12 Q
(\245) 99 648.71 T
4 10 Q
(RATE EXPRESSION MUST BEGIN WITH KEYWORD \322BY\323:) 111 648.71 T
410.83 647.66 387 647.66 2 L
V
N
5 11 Q
(token) 387 648.71 T
6 10 Q
(\336) 416.83 648.71 T
2 11 Q
0.57 (This error indicates that the destination clause of a) 111 635.24 P
4 F
1.38 (TRANTO) 340.71 635.24 P
2 F
0.57 ( statement was finished but no \322) 380.32 635.24 P
4 F
1.38 (BY) 524.92 635.24 P
2 F
0.57 (\323) 538.12 635.24 P
0.2 (followed the clause. This problem can be caused when one of the destination expressions is miss-) 111 622.24 P
1.2 (ing an operator, causing ASSIST to think that the destination clause is finished when in fact it) 111 609.24 P
0.53 (really is not. The user should check the expression immediately prior to the designated token for) 111 596.24 P
(validity.) 111 583.24 T
2 12 Q
(\245) 99 564.09 T
4 10 Q
(REAL DIVIDE BY ZERO:) 111 564.09 T
241.28 563.04 237 563.04 2 L
V
N
5 11 Q
(r) 237 564.09 T
254.31 563.04 240.87 563.04 2 L
V
N
(eal) 240.87 564.09 T
4 10 Q
(/) 254.31 564.09 T
264.59 563.04 260.31 563.04 2 L
V
N
5 11 Q
(r) 260.31 564.09 T
277.63 563.04 264.19 563.04 2 L
V
N
(eal) 264.19 564.09 T
4 10 Q
(, \050expression on line#) 277.63 564.09 T
459.73 563.04 409.63 563.04 2 L
V
N
5 11 Q
(linenumber) 409.63 564.09 T
4 10 Q
(\051) 459.73 564.09 T
6 F
(\336) 471.73 564.09 T
2 11 Q
-0.25 (This error indicates that, during rule generation, an illegal attempt was made to divide by zero. The) 111 550.62 P
0.1 (user should check the rule section for validity, especially in the vicinity of the flagged expression.) 111 537.62 P
(Lines are numbered in the log file.) 111 524.62 T
2 12 Q
(\245) 99 505.48 T
4 10 Q
(REAL EXPRESSION EXPECTED: \050expression on line#) 111 505.48 T
437.11 504.42 387 504.42 2 L
V
N
5 11 Q
(linenumber) 387 505.48 T
4 10 Q
(\051) 437.11 505.48 T
6 F
(\336) 449.11 505.48 T
2 11 Q
0.63 (This error indicates that, during rule generation, an expression was evaluated and it resulted in a) 111 492 P
0.32 (nonreal value. This error is fairly uncommon since ASSIST does a pretty thorough job of finding) 111 479 P
(type mismatches during parsing.) 111 466 T
2 12 Q
(\245) 99 446.86 T
4 10 Q
(REAL EXPRESSION EXPECTED:) 111 446.86 T
290.83 445.8 267 445.8 2 L
V
N
5 11 Q
(token) 267 446.86 T
6 10 Q
(\336) 296.83 446.86 T
2 11 Q
0.38 (This error indicates that, during parsing, the echoed token was found in a real expression when it) 111 433.38 P
0.9 (does not belong there. Usually, the token is some kind of a relational operator, which would be) 111 420.38 P
-0.22 (valid only in Boolean expressions. If necessary, a Boolean expression can be changed to a numeric) 111 407.38 P
(expression by counting it with the) 111 394.38 T
4 F
(COUNT) 263.16 394.38 T
2 F
( function.) 296.16 394.38 T
2 12 Q
(\245) 99 375.24 T
4 10 Q
(REAL NUMBERS NOT ALLOWED EXCEPT IN RATE EXPRESSIONS:) 111 375.24 T
447.94 374.18 429 374.18 2 L
V
N
5 11 Q
(func) 429 375.24 T
6 10 Q
(\336) 453.94 375.24 T
2 11 Q
-0.17 (This error indicates that a real-valued built-in function, such as GAM, was found somewhere other) 111 361.76 P
(than in a rate expression or constant definition.) 111 348.76 T
2 12 Q
(\245) 99 329.62 T
4 10 Q
(REAL NUMBERS NOT ALLOWED EXCEPT IN RATE EXPRESSIONS:) 111 329.62 T
437.56 328.56 429 328.56 2 L
V
N
5 11 Q
(id) 429 329.62 T
6 10 Q
(\336) 443.56 329.62 T
2 11 Q
1 (This error indicates that a real number was found somewhere other than in a rate expression or) 111 316.14 P
(constant definition.) 111 303.14 T
2 12 Q
(\245) 99 284 T
4 10 Q
(REAL VALUE EXPECTED.) 111 284 T
6 F
(\336) 237 284 T
2 11 Q
-0.19 (This error indicates that the resulting type of an expression was not a real number. The token at the) 111 270.52 P
(end of the erroneous expression is echoed.) 111 257.52 T
2 12 Q
(\245) 99 238.38 T
4 10 Q
(RELATIONAL OPERATOR MUST FOLLOW NUMERIC QUANTITY IN BOOLEAN EXPRESSION:) 111 238.38 T
119.56 225.33 111 225.33 2 L
V
N
5 11 Q
(id) 111 226.38 T
6 10 Q
(\336) 125.56 226.38 T
2 11 Q
-0.14 (This error indicates that, when parsing a Boolean expression, a numeric expression came to an end) 111 212.91 P
-0.02 (but was not followed by a relational operator to compare it with some other numeric quantity. The) 111 199.91 P
(user should fix the expression and rerun.) 111 186.91 T
2 12 Q
(\245) 99 167.76 T
4 10 Q
(RELATIONAL OPERATOR NOT ALLOWED IN A NUMERIC EXPRESSION:) 111 167.76 T
461.56 166.71 453 166.71 2 L
V
N
5 11 Q
(id) 453 167.76 T
6 10 Q
(\336) 467.56 167.76 T
2 11 Q
1.11 (This error indicates that, when parsing a numeric expression, a relational operator was encoun-) 111 154.29 P
(tered. The user should fix the expression and rerun.) 111 141.29 T
2 12 Q
(\245) 99 122.14 T
4 10 Q
(RIGHT \322\051\323 EXPECTED:) 111 122.14 T
249.94 121.09 231 121.09 2 L
V
N
5 11 Q
(func) 231 122.14 T
4 10 Q
( REQUIRES 1-) 249.94 122.14 T
340.88 121.09 321.94 121.09 2 L
V
N
5 11 Q
(num) 321.94 122.14 T
4 10 Q
( PARAMETERS AND NO MORE.) 340.88 122.14 T
6 F
(\336) 490.88 122.14 T
2 11 Q
-0.17 (This error indicates that something other than a right parenthesis was encountered in the parameter) 111 108.67 P
1.34 (list for a built-in function when the syntax for ASSIST requires a right parenthesis. The token) 111 95.67 P
0.46 (found instead of the right parenthesis is echoed. This error usually occurs when more parameters) 111 82.67 P
(are passed to a built-in function than it is defined to handle.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "81" 86
%%Page: "82" 87
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(82) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(RIGHT \322\051\323 EXPECTED:) 111 719.33 T
249.94 718.28 231 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(func) 231 719.33 T
4 10 Q
( REQUIRES EXACTLY) 249.94 719.33 T
376.88 718.28 357.94 718.28 2 L
V
N
5 11 Q
(num) 357.94 719.33 T
4 10 Q
( PARAMETERS AND NO MORE.) 376.88 719.33 T
6 F
(\336) 526.88 719.33 T
2 11 Q
-0.17 (This error indicates that something other than a right parenthesis was encountered in the parameter) 111 704.93 P
1.34 (list for a built-in function when the syntax for ASSIST requires a right parenthesis. The token) 111 691.93 P
0.46 (found instead of the right parenthesis is echoed. This error usually occurs when more parameters) 111 678.93 P
(are passed to a built-in function than it is defined to handle.) 111 665.93 T
2 12 Q
(\245) 99 645.86 T
4 10 Q
(RIGHT \322\051\323 EXPECTED:) 111 645.86 T
239.56 644.8 231 644.8 2 L
V
N
5 11 Q
(id) 231 645.86 T
6 10 Q
(\336) 245.56 645.86 T
2 11 Q
-0.17 (This error indicates that something other than a right parenthesis was encountered when the syntax) 111 631.46 P
2.29 (for ASSIST requires a right parenthesis. The token found instead of the right parenthesis is) 111 618.46 P
(echoed.) 111 605.46 T
2 12 Q
(\245) 99 585.39 T
4 10 Q
(RIGHT \322>\323 EXPECTED:) 111 585.39 T
239.56 584.33 231 584.33 2 L
V
N
5 11 Q
(id) 231 585.39 T
6 10 Q
(\336) 245.56 585.39 T
2 11 Q
-0.22 (This error indicates that something other than a right-angle bracket was encountered when the syn-) 111 570.98 P
0.37 (tax for ASSIST requires a right-angle bracket. The token found instead of the right-angle bracket) 111 557.98 P
1.99 (is echoed. This usually indicates that the user is missing a right-angle bracket when White\325s) 111 544.98 P
(Method is used to specify the transition rate expression in a) 111 531.98 T
4 F
(TRANTO) 375.27 531.98 T
2 F
( statement.) 414.88 531.98 T
2 12 Q
(\245) 99 511.91 T
4 10 Q
(RIGHT \322]\323 EXPECTED:) 111 511.91 T
239.56 510.86 231 510.86 2 L
V
N
5 11 Q
(id) 231 511.91 T
6 10 Q
(\336) 245.56 511.91 T
2 11 Q
-0.06 (This error indicates that something other than a right bracket was encountered when the syntax for) 111 497.51 P
(ASSIST requires a right bracket. The token found instead of the right bracket is echoed.) 111 484.51 T
2 12 Q
(\245) 99 464.44 T
4 10 Q
(RULE SCRATCH STORAGE OVERFLOW. SPECIFY -RULE OPTION:) 111 464.44 T
437.56 463.38 429 463.38 2 L
V
N
5 11 Q
(id) 429 464.44 T
6 10 Q
(\336) 443.56 464.44 T
2 11 Q
0.16 (This error indicates that the user has more rule statements in series than allowed for at the nesting) 111 450.04 P
0.53 (level where the error occurred. There may be too many rules in the rule section or just too many) 111 437.04 P
2.03 (rules between an) 111 424.04 P
4 F
4.88 (IF) 193.77 424.04 P
2 F
2.03 ( and an) 206.97 424.04 P
4 F
4.88 (ELSE) 247.59 424.04 P
2 F
2.03 (, or between a) 273.99 424.04 P
4 F
4.88 (FOR) 346.57 424.04 P
2 F
2.03 ( and an) 366.37 424.04 P
4 F
4.88 (ENDFOR) 406.99 424.04 P
2 F
2.03 (. The storage can be) 446.59 424.04 P
0.12 (increased with the) 111 411.04 P
3 F
0.12 (\320rule) 197.03 411.04 P
2 F
0.12 (  command-line option. The default is) 221.47 411.04 P
3 F
0.12 (\320rule=4096) 393.86 411.04 P
2 F
0.12 ( for workstations and) 449.45 411.04 P
3 F
(\320rule=1024) 111 398.04 T
2 F
(  for the IBM PC.) 163.71 398.04 T
2 12 Q
(\245) 99 377.96 T
4 10 Q
(SCALAR EXPECTED:) 111 377.96 T
261.27 376.91 213 376.91 2 L
V
N
5 11 Q
(arrayname) 213 377.96 T
278.27 376.91 267.27 376.91 2 L
V
N
(op) 267.27 377.96 T
6 10 Q
(\336) 284.27 377.96 T
2 11 Q
0.18 (This error indicates that an array was found when a scalar was expected. The user was attempting) 111 363.56 P
-0.08 (to perform arithmetic on a whole array instead of just on one element of the array. The user proba-) 111 350.56 P
(bly forgot to specify a subscript in square brackets following the name of the array.) 111 337.56 T
2 12 Q
(\245) 99 317.49 T
4 10 Q
(SCALAR EXPECTED:) 111 317.49 T
261.27 316.43 213 316.43 2 L
V
N
5 11 Q
(arrayname) 213 317.49 T
6 10 Q
(\336) 267.27 317.49 T
2 11 Q
0.06 (This error indicates that an array was found when a scalar was expected. The user probably forgot) 111 303.09 P
(to specify a subscript in square brackets following the name of the array.) 111 290.09 T
2 12 Q
(\245) 99 270.02 T
4 10 Q
(SCOPE OF IDENTIFIER IS INACTIVE:) 111 270.02 T
317.56 268.96 309 268.96 2 L
V
N
5 11 Q
(id) 309 270.02 T
6 10 Q
(\336) 323.56 270.02 T
2 11 Q
-0.18 (This error indicates that an identifier was referenced but its use is no longer valid. It usually occurs) 111 255.61 P
-0.15 (when a) 111 242.61 P
4 F
-0.35 (FOR) 144.91 242.61 P
2 F
-0.15 ( index is referenced after the matching) 164.71 242.61 P
4 F
-0.35 (ENDFOR) 335.65 242.61 P
2 F
-0.15 (. This error can also occur if an identi-) 375.25 242.61 P
0.23 (fier name is referenced without redefinition after it has already been used in the parameter list for) 111 229.61 P
(the definition of a prior) 111 216.61 T
4 F
(FUNCTION) 216.4 216.61 T
2 F
( or) 269.2 216.61 T
4 F
(IMPLICIT) 283.86 216.61 T
2 F
(.) 336.67 216.61 T
2 12 Q
(\245) 99 196.54 T
4 10 Q
(SCOPE OF IDENTIFIER IS INACTIVE:) 111 196.54 T
317.56 195.49 309 195.49 2 L
V
N
5 11 Q
(id) 309 196.54 T
4 10 Q
( \050BUILT-IN FUNCTION) 317.56 196.54 T
456.5 195.49 437.56 195.49 2 L
V
N
5 11 Q
(func) 437.56 196.54 T
4 10 Q
(\051) 456.5 196.54 T
6 F
(\336) 468.5 196.54 T
2 11 Q
-0.18 (This error indicates that an identifier was referenced but its use is no longer valid. It usually occurs) 111 182.14 P
1.08 (when a) 111 169.14 P
4 F
2.58 (FOR) 147.36 169.14 P
2 F
1.08 ( index is referenced after the matching) 167.16 169.14 P
4 F
2.58 (ENDFOR) 346.65 169.14 P
2 F
1.08 (, but the error can also occur if an) 386.26 169.14 P
0.75 (identifier name is referenced without redefinition after it has already been used in the parameter) 111 156.14 P
0.64 (list for the definition of a prior) 111 143.14 P
4 F
1.53 (FUNCTION) 252.65 143.14 P
2 F
0.64 ( or) 305.45 143.14 P
4 F
1.53 (IMPLICIT) 321.38 143.14 P
2 F
0.64 (. The identifier in error was passed to) 374.18 143.14 P
(the named built-in function.) 111 130.14 T
2 12 Q
(\245) 99 110.07 T
4 10 Q
(SCOPE OF IDENTIFIER IS STILL ACTIVE.) 111 110.07 T
6 F
(\336) 333 110.07 T
2 11 Q
1.21 (This error indicates that the user tried to redefine an identifier when it was still being used for) 111 95.67 P
-0.26 (another purpose. This error usually means that two nested) 111 82.67 P
4 F
-0.62 (FOR) 365.9 82.67 P
2 F
-0.26 ( constructs are using the same index) 385.7 82.67 P
(variable name. The user should change the name of one index variable.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "82" 87
%%Page: "83" 88
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(83) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(SCRATCH EXPRESSION STORAGE OVERFLOW. SPECIFY -E OPTION: COMMAND LINE) 111 719.33 T
(OPTIONS TOO BIG.) 111 707.33 T
6 F
(\336) 213 707.33 T
2 11 Q
0.25 (This error indicates that the user asked for more memory for the expression storage than allowed.) 111 692.45 P
(Try asking for less. The default is) 111 679.45 T
3 F
(\320e=100) 264.67 679.45 T
2 F
( for workstations and) 300.57 679.45 T
3 F
(\320e=50) 399.26 679.45 T
2 F
(  for the IBM PC.) 426.91 679.45 T
2 12 Q
(\245) 99 658.9 T
4 10 Q
(SCRATCH EXPRESSION STORAGE OVERFLOW. SPECIFY -E OPTION:) 111 658.9 T
455.56 657.84 447 657.84 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 447 658.9 T
6 10 Q
(\336) 461.56 658.9 T
2 11 Q
0.63 (This error indicates that the ASSIST program cannot hold all the expressions it needs at once. It) 111 644.01 P
0.25 (usually indicates use of very many state-space variables at a single level in the) 111 631.02 P
4 F
0.59 (SPACE) 462.09 631.02 P
2 F
0.25 ( statement,) 495.09 631.02 P
1.26 (or it can indicate use of very many expressions in the rules nested between) 111 618.02 P
4 F
3.01 (IF) 459.74 618.02 P
2 F
1.26 ( and) 472.94 618.02 P
4 F
3.01 (ENDIF) 496.83 618.02 P
2 F
1.26 ( or) 529.83 618.02 P
0.52 (between) 111 605.02 P
4 F
1.24 (FOR) 150.92 605.02 P
2 F
0.52 ( and) 170.72 605.02 P
4 F
1.24 (ENDFOR) 193.14 605.02 P
2 F
0.52 (. The limit can be increased. The default is) 232.74 605.02 P
3 F
0.52 (\320e=100) 430.99 605.02 P
2 F
0.52 (  for workstations) 464.15 605.02 P
(and) 111 592.02 T
3 F
(\320e=50) 132.38 592.02 T
2 F
(  for the IBM PC.) 160.04 592.02 T
2 12 Q
(\245) 99 571.46 T
4 10 Q
(SCRATCH EXPRESSION STORAGE OVERFLOW. SPECIFY /E OPTION:) 111 571.46 T
455.56 570.41 447 570.41 2 L
V
N
5 11 Q
(id) 447 571.46 T
6 10 Q
(\336) 461.56 571.46 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 556.58 T
2 12 Q
(\245) 99 536.03 T
4 10 Q
(SEMICOLON \322;\323 CHANGED TO COMMA \322,\323 BY PARSER.) 111 536.03 T
6 F
(\336) 387 536.03 T
2 11 Q
0.59 (This error indicates that ASSIST found a semicolon but was able to guess that the user meant to) 111 521.15 P
-0.03 (use a comma instead. The change was made in an attempt to limit the number of extraneous errors) 111 508.14 P
(during continued parsing of the statement in error.) 111 495.14 T
2 12 Q
(\245) 99 474.59 T
4 10 Q
(SEMICOLON EXPECTED:) 111 474.59 T
239.56 473.54 231 473.54 2 L
V
N
5 11 Q
(id) 231 474.59 T
6 10 Q
(\336) 245.56 474.59 T
2 11 Q
0.7 (This error indicates that something other than a semicolon was encountered when the syntax for) 111 459.71 P
0.88 (ASSIST requires a semicolon. The token found instead of the semicolon is echoed. If the semi-) 111 446.71 P
-0.14 (colon was missing before the end of the file, then the message \322\050end-of-file\051\323 will be printed to the) 111 433.71 P
(right of the colon.) 111 420.71 T
2 12 Q
(\245) 99 400.16 T
4 10 Q
(SKIPPING EXTRANEOUS TOKENS:) 111 400.16 T
287.56 399.1 279 399.1 2 L
V
N
5 11 Q
(id) 279 400.16 T
6 10 Q
(\336) 293.56 400.16 T
2 11 Q
0.76 (This error indicates that previous errors prevented continued parsing of part or all of the current) 111 385.27 P
(statement. Fix the other errors in this statement and this error should disappear.) 111 372.27 T
2 12 Q
(\245) 99 351.73 T
4 10 Q
(SPACE STATEMENT IS MISSING.) 111 351.73 T
6 F
(\336) 279 351.73 T
2 11 Q
1.38 (This error indicates that the first rule was encountered, yet the required) 111 336.84 P
4 F
3.31 (SPACE) 442.48 336.84 P
2 F
1.38 ( statement was) 475.48 336.84 P
(absent.) 111 323.84 T
2 12 Q
(\245) 99 303.29 T
4 10 Q
(SPACE STATEMENT OVERFLOW. SPECIFY -PIC OPTION:) 111 303.29 T
401.56 302.23 393 302.23 2 L
V
N
5 11 Q
(id) 393 303.29 T
6 10 Q
(\336) 407.56 303.29 T
2 11 Q
-0.11 (This error indicates that there were more state-space variables at a single level in the) 111 288.41 P
4 F
-0.27 (SPACE) 483.54 288.41 P
2 F
-0.11 ( state-) 516.53 288.41 P
0.04 (ment than anticipated by ASSIST. The user should try to limit the number of state-space variables) 111 275.41 P
0.45 (as much as is feasible. Unpruned models with a huge state space will seem like they run forever.) 111 262.41 P
(The limit can be raised. The default is) 111 249.41 T
3 F
(\320pic=100) 280.55 249.41 T
2 F
( for workstations and) 322.88 249.41 T
3 F
(\320pic=100) 418.81 249.41 T
2 F
( for the IBM PC.) 461.14 249.41 T
2 12 Q
(\245) 99 228.85 T
4 10 Q
(SPACE STATEMENT OVERFLOW. SPECIFY /PIC OPTION:) 111 228.85 T
401.56 227.8 393 227.8 2 L
V
N
5 11 Q
(id) 393 228.85 T
6 10 Q
(\336) 407.56 228.85 T
2 11 Q
(This error is the VMS equivalent of the previous error.) 111 213.97 T
2 12 Q
(\245) 99 193.42 T
4 10 Q
(SPECIAL VMS ERROR NUMBER:) 111 193.42 T
280.44 192.36 267 192.36 2 L
V
N
5 11 Q
(err) 267 193.42 T
323.42 192.36 280.04 192.36 2 L
V
N
(ornumber) 280.04 193.42 T
6 10 Q
(\336) 329.42 193.42 T
2 11 Q
(This error indicates that an error specific to the VMS operating system was encountered.) 111 178.54 T
2 12 Q
(\245) 99 157.99 T
4 10 Q
(START STATEMENT IS MISSING.) 111 157.99 T
6 F
(\336) 279 157.99 T
2 11 Q
1.57 (This error indicates that the first rule was encountered yet the required) 111 143.1 P
4 F
3.78 (START) 442.08 143.1 P
2 F
1.57 ( statement was) 475.08 143.1 P
(absent.) 111 130.1 T
2 12 Q
(\245) 99 109.55 T
4 10 Q
-0.55 (STATE SPACE CANNOT BE EMPTY. AT LEAST ONE STATE-SPACE VARIABLE REQUIRED:) 111 109.55 P
119.56 96.49 111 96.49 2 L
V
N
5 11 Q
(id) 111 97.55 T
6 10 Q
(\336) 125.56 97.55 T
2 11 Q
0.71 (This error indicates that a) 111 82.67 P
4 F
1.7 (SPACE) 229.71 82.67 P
2 F
0.71 ( statement was declared without any state-space variables. See) 262.71 82.67 P
(section 3.2.1.6 for the correct syntax for the) 111 69.67 T
4 F
(SPACE) 306.21 69.67 T
2 F
( statement.) 339.21 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "83" 88
%%Page: "84" 89
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(84) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(STATE-SPACE VARIABLE DOES NOT HAVE A VALUE UNTIL AFTER PARSING IS COM-) 111 719.33 T
(PLETE AND RULE GENERATION HAS STARTED.) 111 707.33 T
6 F
(\336) 345 707.33 T
2 11 Q
0.72 (This error indicates that a state-space variable was referenced in a context where a constant was) 111 694.19 P
1.55 (required. It can occur in a constant definition statement, an) 111 681.19 P
4 F
3.72 (INPUT) 387.99 681.19 P
2 F
1.55 ( statement, or in a) 420.99 681.19 P
4 F
3.72 (START) 510 681.19 P
2 F
(statement.) 111 668.19 T
2 12 Q
(\245) 99 649.39 T
4 10 Q
(STATE-SPACE VARIABLE EXPECTED:) 111 649.39 T
320.83 648.33 297 648.33 2 L
V
0.53 H
0 Z
N
5 11 Q
(token) 297 649.39 T
6 10 Q
(\336) 326.83 649.39 T
2 11 Q
1.2 (This error indicates that something other than a state-space variable was encountered when the) 111 636.25 P
-0.1 (syntax for ASSIST requires a state-space variable. The token found instead of the state-space vari-) 111 623.25 P
-0.06 (able is echoed. It usually occurs in the destination clause of a) 111 610.25 P
4 F
-0.16 (TRANTO) 381.81 610.25 P
2 F
-0.06 ( during an illegal attempt to) 421.41 610.25 P
(change the value of an identifier other than a state-space variable.) 111 597.25 T
2 12 Q
(\245) 99 578.44 T
4 10 Q
(STATE-SPACE VARIABLE VALUE IS OUT OF RANGE:) 111 578.44 T
393.94 577.38 375 577.38 2 L
V
N
5 11 Q
(num) 375 578.44 T
4 10 Q
( \050) 393.94 578.44 T
422.44 577.38 405.94 577.38 2 L
V
N
5 11 Q
(min) 405.94 578.44 T
4 10 Q
( to) 422.44 578.44 T
464.77 577.38 446.44 577.38 2 L
V
N
5 11 Q
(max) 446.44 578.44 T
4 10 Q
(\051) 464.77 578.44 T
6 F
(\336) 476.77 578.44 T
2 11 Q
1.24 (This error indicates that, during rule generation or during the parsing of a) 111 565.3 P
4 F
2.98 (START) 452.22 565.3 P
2 F
1.24 ( statement, a) 485.22 565.3 P
-0.13 (state-space variable took on a value outside the range declared to be legal in the) 111 552.3 P
4 F
-0.32 (SPACE) 462.47 552.3 P
2 F
-0.13 ( statement.) 495.47 552.3 P
0.82 (Be sure to check for consistency between the) 111 539.3 P
4 F
1.96 (SPACE) 318.54 539.3 P
2 F
0.82 (,) 351.54 539.3 P
4 F
1.96 (START) 357.86 539.3 P
2 F
0.82 (, and all) 390.86 539.3 P
4 F
1.96 (TRANTO) 431.19 539.3 P
2 F
0.82 ( statements. See) 470.79 539.3 P
(sections 3.2.1.6, 3.2.6, and 3.2.7.1 for further details.) 111 526.3 T
2 12 Q
(\245) 99 507.49 T
4 10 Q
(STATEMENT EXPECTED:) 111 507.49 T
254.83 506.43 231 506.43 2 L
V
N
5 11 Q
(token) 231 507.49 T
6 10 Q
(\336) 260.83 507.49 T
2 11 Q
-0 (This error indicates that ASSIST was looking for the beginning of a statement but found the token) 111 494.35 P
0.94 (echoed to the right of the colon. All statements must begin with a reserved word except for the) 111 481.35 P
0.51 (SURE statement, which begins with a quote, and the constant definition statement, which begins) 111 468.35 P
(with an identifier followed by an equals sign.) 111 455.35 T
2 12 Q
(\245) 99 436.54 T
4 10 Q
(STATEMENT NOT VALID IN THIS SECTION: \050constant def) 111 436.54 T
(inition of) 411 436.54 T
119.56 423.49 111 423.49 2 L
V
N
5 11 Q
(id) 111 424.54 T
4 10 Q
( = <expr>\051) 119.56 424.54 T
6 F
(\336) 185.56 424.54 T
2 11 Q
0.33 (Once the rule section begins, the user may no longer define any more constants because the rules) 111 411.4 P
-0.13 (are applied iteratively to all model states and are, by definition, nonconstant. If the definition is for) 111 398.4 P
0.44 (a variable, then the user should consider the use of an) 111 385.4 P
4 F
1.05 (IMPLICIT) 354.08 385.4 P
2 F
0.44 ( or) 406.88 385.4 P
4 F
1.05 (FUNCTION) 422.42 385.4 P
2 F
0.44 ( definition. See) 475.21 385.4 P
2.1 (section 3.2.7 for a description of the rule section and sections 3.2.3 and 3.2.4 for details on) 111 372.4 P
4 F
(IMPLICIT) 111 359.4 T
2 F
( and) 163.8 359.4 T
4 F
(FUNCTION) 185.18 359.4 T
2 F
( definitions, respectively.) 237.98 359.4 T
2 12 Q
(\245) 99 340.6 T
4 10 Q
(STATEMENT NOT VALID IN THIS SECTION:) 111 340.6 T
341.56 339.54 333 339.54 2 L
V
N
5 11 Q
(id) 333 340.6 T
6 10 Q
(\336) 347.56 340.6 T
2 11 Q
0.4 (This error indicates that a statement is out of sequence. Move the statement to its proper location) 111 327.46 P
(and the error will disappear.) 111 314.46 T
2 12 Q
(\245) 99 295.65 T
4 10 Q
(STATEMENT OUT OF SEQUENCE ... NOT ALLOWED IN RULE SECTION.) 111 295.65 T
6 F
(\336) 465 295.65 T
2 11 Q
0.4 (This error indicates that a statement is out of sequence. Move the statement to its proper location) 111 282.51 P
1.37 (and the error will disappear. The setup, start, and rule sections are described in sections 3.2.1,) 111 269.51 P
(3.2.2, and 3.2.7, respectively. They are listed in the BNF description in appendix B.) 111 256.51 T
2 12 Q
(\245) 99 237.7 T
4 10 Q
(STATEMENT OUT OF SEQUENCE ... NOT ALLOWED IN SETUP SECTION.) 111 237.7 T
6 F
(\336) 471 237.7 T
2 11 Q
0.4 (This error indicates that a statement is out of sequence. Move the statement to its proper location) 111 224.56 P
1.11 (and the error will disappear.  The setup, start, and rule sections are described in sections 3.2.1,) 111 211.56 P
(3.2.2, and 3.2.7, respectively. They are listed in the BNF description in appendix B.) 111 198.56 T
2 12 Q
(\245) 99 179.76 T
4 10 Q
(STATEMENT OUT OF SEQUENCE ... NOT ALLOWED IN START SECTION.) 111 179.76 T
6 F
(\336) 471 179.76 T
2 11 Q
0.4 (This error indicates that a statement is out of sequence. Move the statement to its proper location) 111 166.61 P
1.11 (and the error will disappear.  The setup, start, and rule sections are described in sections 3.2.1,) 111 153.61 P
(3.2.2, and 3.2.7, respectively. They are listed in the BNF description in appendix B.) 111 140.61 T
2 12 Q
(\245) 99 121.81 T
4 10 Q
(SUBSCRIPT NOT ALLOWED ON SCALAR:) 111 121.81 T
317.56 120.75 309 120.75 2 L
V
N
5 11 Q
(id) 309 121.81 T
6 10 Q
(\336) 323.56 121.81 T
2 11 Q
0.81 (This error indicates that the identifier in question is being referenced as if it were an array even) 111 108.67 P
0 (though it was not declared to be an array. Square brackets must be used to declare arrays. See sec-) 111 95.67 P
1.12 (tion 3.1.5 for details on how to declare constant arrays. See section 3.2.1 for details on how to) 111 82.67 P
(declare state-space variable arrays.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "84" 89
%%Page: "85" 90
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(85) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(THE REPETITION COUNT PRECEDING THIS \322OF\323 IS TOO LARGE:) 111 719.33 T
452.62 718.28 441 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(int) 441 719.33 T
4 10 Q
( REPETITIONS) 452.62 719.33 T
(IGNORED) 111 707.33 T
6 F
(\336) 159 707.33 T
2 11 Q
-0.27 (This error indicates that the repetition count before an \322) 111 694.48 P
4 F
-0.65 (OF) 353.25 694.48 P
2 F
-0.27 (\323 clause is too large. It is probably either) 366.45 694.48 P
(a typographical error or an erroneous expression.) 111 681.48 T
2 12 Q
(\245) 99 662.95 T
4 10 Q
(\322THEN\323 OR \322TRANTO\323 CLAUSE MISSING FOR THIS \322IF\323:) 111 662.95 T
413.56 661.9 405 661.9 2 L
V
N
5 11 Q
(id) 405 662.95 T
6 10 Q
(\336) 419.56 662.95 T
2 11 Q
1.61 (This error indicates that an) 111 650.09 P
4 F
3.87 (IF) 239.73 650.09 P
2 F
1.61 ( statement contained neither the) 252.93 650.09 P
4 F
3.87 (THEN) 403.65 650.09 P
2 F
1.61 ( nor) 430.05 650.09 P
4 F
3.87 (TRANTO) 453.44 650.09 P
2 F
1.61 ( key word.) 493.04 650.09 P
0.53 (There are only two kinds of statements that begin with the key word \322) 111 637.09 P
4 F
1.28 (IF) 425.57 637.09 P
2 F
0.53 (\323, namely the block) 438.77 637.09 P
4 F
1.28 (IF) 529.8 637.09 P
2 F
(and) 111 624.09 T
4 F
(TRANTO) 129.63 624.09 T
2 F
( statements. See sections 12.2.7.1 and 12.2.7.2 for details.) 169.23 624.09 T
2 12 Q
(\245) 99 605.57 T
4 10 Q
-0.92 (THERE MUST BE EITHER TWO OR THREE EXPRESSIONS BETWEEN ANGLE BRACKETS IN A) 111 605.57 P
(RATE EXPRESSION:) 111 593.57 T
221.56 592.52 213 592.52 2 L
V
N
5 11 Q
(id) 213 593.57 T
6 10 Q
(\336) 227.56 593.57 T
2 11 Q
2.19 (This error indicates that an incorrect number of expressions were listed when using White\325s) 111 580.71 P
0.88 (Method to specify the transition rate expression in a) 111 567.71 P
4 F
2.12 (TRANTO) 350.21 567.71 P
2 F
0.88 ( statement. See section 3.2.7.1 for) 389.81 567.71 P
(more details.) 111 554.71 T
2 12 Q
(\245) 99 536.19 T
4 10 Q
(THERE MUST BE EXACTLY ONE EXPRESSION FOR A SLOW TRANSITION RATE:) 111 536.19 T
509.56 535.14 501 535.14 2 L
V
N
5 11 Q
(id) 501 536.19 T
6 10 Q
(\336) 515.56 536.19 T
2 11 Q
0.92 (This error indicates that an incorrect number of expressions were listed when specifying a slow) 111 523.33 P
-0.08 (transition rate in the rate expression for a) 111 510.33 P
4 F
-0.18 (TRANTO) 293.68 510.33 P
2 F
-0.08 ( statement. If the user meant to give a mean and) 333.28 510.33 P
1 (standard deviation, then angle brackets are required. If the user meant to have a slow transition) 111 497.33 P
1.63 (rate, then an operator is probably missing from the expression or there may be an extraneous) 111 484.33 P
(comma. See section 3.2.7.1 for more details.) 111 471.33 T
2 12 Q
(\245) 99 452.81 T
4 10 Q
(THIS FORM INVALID WITH \322FAST\323 KEYWORD:) 111 452.81 T
368.83 451.75 345 451.75 2 L
V
N
5 11 Q
(token) 345 452.81 T
6 10 Q
(\336) 374.83 452.81 T
2 11 Q
-0.04 (This error indicates that the user tried to mix the) 111 439.95 P
4 F
-0.1 (FAST) 325.67 439.95 P
2 F
-0.04 ( key word with an incompatible form in the) 352.07 439.95 P
2.38 (transition rate for a) 111 426.95 P
4 F
5.71 (TRANTO) 207.27 426.95 P
2 F
2.38 ( statement. The user probably mixed the) 246.87 426.95 P
4 F
5.71 (FAST) 443.17 426.95 P
2 F
2.38 ( key word with) 469.57 426.95 P
-0.17 (White\325s Method as in \322) 111 413.95 P
4 F
-0.42 (BY FAST) 212.95 413.95 P
2 F
-0.17 ( <) 258.73 413.95 P
293.91 412.9 270.08 412.9 2 L
V
N
5 F
-0.17 (mean) 270.08 413.95 P
2 F
-0.17 ( ,) 293.91 413.95 P
328.09 412.9 301.81 412.9 2 L
V
N
5 F
-0.17 (sigma) 301.81 413.95 P
2 F
-0.17 ( >\323. Use the) 328.09 413.95 P
4 F
-0.42 (FAST) 382.77 413.95 P
2 F
-0.17 ( key word or the angle-bracket) 409.17 413.95 P
(syntax, but not both. See section 3.2.7 for more details.) 111 400.95 T
2 12 Q
(\245) 99 382.43 T
4 10 Q
(TOO FEW CALLING PARAMETERS. MORE EXPECTED:) 111 382.43 T
392.83 381.37 369 381.37 2 L
V
N
5 11 Q
(token) 369 382.43 T
4 10 Q
( \050FUNCTION) 392.83 382.43 T
477.77 381.37 458.83 381.37 2 L
V
N
5 11 Q
(func) 458.83 382.43 T
4 10 Q
(\051) 477.77 382.43 T
6 F
(\336) 489.77 382.43 T
2 11 Q
3.04 (This error indicates that the) 111 369.57 P
4 F
7.3 (FUNCTION) 249.93 369.57 P
2 F
3.04 ( reference had fewer parameters passed than were) 302.73 369.57 P
0.38 (expected. Check for consistency between the reference on the line in error and the corresponding) 111 356.57 P
4 F
(FUNCTION) 111 343.57 T
2 F
( statement.) 163.8 343.57 T
2 12 Q
(\245) 99 325.05 T
4 10 Q
(TOO FEW CALLING PARAMETERS. MORE EXPECTED:) 111 325.05 T
392.83 323.99 369 323.99 2 L
V
N
5 11 Q
(token) 369 325.05 T
4 10 Q
( \050IMPLICIT) 392.83 325.05 T
478.38 323.99 458.83 323.99 2 L
V
N
5 11 Q
(impl) 458.83 325.05 T
4 10 Q
(\051) 478.38 325.05 T
6 F
(\336) 490.38 325.05 T
2 11 Q
3.04 (This error indicates that the) 111 312.19 P
4 F
7.3 (IMPLICIT) 249.93 312.19 P
2 F
3.04 ( reference had fewer parameters passed than were) 302.73 312.19 P
0.38 (expected. Check for consistency between the reference on the line in error and the corresponding) 111 299.19 P
4 F
(IMPLICIT) 111 286.19 T
2 F
( statement.) 163.8 286.19 T
2 12 Q
(\245) 99 267.67 T
4 10 Q
(TOO FEW CALLING PARAMETERS. MORE EXPECTED:) 111 267.67 T
392.83 266.61 369 266.61 2 L
V
N
5 11 Q
(token) 369 267.67 T
6 10 Q
(\336) 398.83 267.67 T
2 11 Q
2 (This error indicates that a built-in function reference had fewer parameters passed than were) 111 254.81 P
-0.17 (expected. Check for consistency between the reference on the line in error and the definition of the) 111 241.81 P
(built-in function being used. Section 3.1.8 details the different built-in functions.) 111 228.81 T
2 12 Q
(\245) 99 210.29 T
4 10 Q
(TOO FEW SUBSCRIPTS. THIS IS A DOUBLY SUBSCRIPTED ARRAY:) 111 210.29 T
495.27 209.23 447 209.23 2 L
V
N
5 11 Q
(arrayname) 447 210.29 T
6 10 Q
(\336) 501.27 210.29 T
2 11 Q
-0.1 (This error indicates that a doubly subscripted array was referenced with fewer than two subscripts.) 111 197.43 P
(Check for consistency with the declaration of the array.) 111 184.43 T
2 12 Q
(\245) 99 165.91 T
4 10 Q
(TOO MANY CALLING PARAMETERS. REMAINING IGNORED:) 111 165.91 T
422.83 164.85 399 164.85 2 L
V
N
5 11 Q
(token) 399 165.91 T
4 10 Q
( \050FUNCTION) 422.83 165.91 T
507.77 164.85 488.83 164.85 2 L
V
N
5 11 Q
(func) 488.83 165.91 T
4 10 Q
(\051) 507.77 165.91 T
6 F
(\336) 519.77 165.91 T
2 11 Q
3.24 (This error indicates that the) 111 153.05 P
4 F
7.78 (FUNCTION) 250.95 153.05 P
2 F
3.24 ( reference had more parameters passed than were) 303.75 153.05 P
0.38 (expected. Check for consistency between the reference on the line in error and the corresponding) 111 140.05 P
4 F
(FUNCTION) 111 127.05 T
2 F
( statement.) 163.8 127.05 T
2 12 Q
(\245) 99 108.52 T
4 10 Q
(TOO MANY CALLING PARAMETERS. REMAINING IGNORED:) 111 108.52 T
422.83 107.47 399 107.47 2 L
V
N
5 11 Q
(token) 399 108.52 T
4 10 Q
( \050IMPLICIT) 422.83 108.52 T
508.38 107.47 488.83 107.47 2 L
V
N
5 11 Q
(impl) 488.83 108.52 T
4 10 Q
(\051) 508.38 108.52 T
6 F
(\336) 520.38 108.52 T
2 11 Q
3.24 (This error indicates that the) 111 95.67 P
4 F
7.78 (IMPLICIT) 250.95 95.67 P
2 F
3.24 ( reference had more parameters passed than were) 303.75 95.67 P
0.38 (expected. Check for consistency between the reference on the line in error and the corresponding) 111 82.67 P
4 F
(IMPLICIT) 111 69.67 T
2 F
( statement.) 163.8 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "85" 90
%%Page: "86" 91
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(86) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(TOO MANY CALLING PARAMETERS. REMAINING IGNORED:) 111 719.33 T
417.94 718.28 399 718.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(num) 399 719.33 T
6 10 Q
(\336) 423.94 719.33 T
2 11 Q
1.53 (This error indicates that the built-in function reference had more parameters passed than were) 111 705.45 P
(expected. See section 3.1.8 for details on the built-in functions.) 111 692.45 T
2 12 Q
(\245) 99 672.9 T
4 10 Q
-0.12 (TOO MANY OPEN FILES. CANNOT OPEN. PLEASE CONTACT SYSTEM MANAGER:) 111 672.9 P
537.11 671.84 499.85 671.84 2 L
V
N
5 11 Q
-0.05 (\336lename) 499.85 672.9 P
6 10 Q
(\336) 111 660.9 T
2 11 Q
1.24 (This error indicates that an attempt was made to open the file but too many files were already) 111 647.01 P
0.35 (open. The user may have files open from suspended or background processes. Try logging out of) 111 634.02 P
-0.01 (all your processes and logging back in. If that does not work, or you get this error repeatedly, con-) 111 621.02 P
(tact your system manager about having your limits increased.) 111 608.02 T
2 12 Q
(\245) 99 588.46 T
4 10 Q
(TOO MANY SUBSCRIPTS. ONLY SINGLY OR DOUBLY SUBSCRIPTED ARRAYS ARE) 111 588.46 T
(ALLOWED:) 111 576.46 T
173.56 575.41 165 575.41 2 L
V
N
5 11 Q
(id) 165 576.46 T
6 10 Q
(\336) 179.56 576.46 T
2 11 Q
1.8 (This error indicates that an illegal attempt was made to declare an array with more than two) 111 562.58 P
(dimensions. Triply subscripted arrays are not allowed by ASSIST.) 111 549.58 T
2 12 Q
(\245) 99 530.03 T
4 10 Q
(TOO MANY SUBSCRIPTS. THIS IS A SINGLY SUBSCRIPTED ARRAY:) 111 530.03 T
501.27 528.97 453 528.97 2 L
V
N
5 11 Q
(arrayname) 453 530.03 T
6 10 Q
(\336) 507.27 530.03 T
2 11 Q
0.68 (This error indicates that a singly subscripted array was referenced with more than one subscript.) 111 516.15 P
(Check for consistency with the declaration of the array.) 111 503.14 T
2 12 Q
(\245) 99 483.59 T
4 10 Q
(TRIPLE BOOLEAN EQUALITY NOT SUPPORTED. USE \322A==B AND B==C\323 INSTEAD OF) 111 483.59 T
(\322A==B==C\323, ETC:) 111 471.59 T
230.83 470.54 207 470.54 2 L
V
N
5 11 Q
(token) 207 471.59 T
6 10 Q
(\336) 236.83 471.59 T
2 11 Q
1.06 (This error indicates that the user tried to use triple Boolean equality without the use of the key) 111 457.71 P
(word) 111 444.71 T
4 F
(AND) 136.35 444.71 T
2 F
(. The fix should be clear from the message.) 156.15 444.71 T
2 12 Q
(\245) 99 425.16 T
4 10 Q
-1 (TRIPLE EQUALITY NOT SUPPORTED. USE \322A=B AND B=C\323 INSTEAD OF \322A=B=C\323, ETC:) 111 425.16 P
134.83 412.1 111 412.1 2 L
V
N
5 11 Q
(token) 111 413.16 T
6 10 Q
(\336) 140.83 413.16 T
2 11 Q
0.38 (This error indicates that the user tried to use triple equality without the use of the key word) 111 399.27 P
4 F
0.9 (AND) 520.45 399.27 P
2 F
0.38 (.) 540.25 399.27 P
(The fix should be clear from the message.) 111 386.27 T
2 12 Q
(\245) 99 366.73 T
4 10 Q
(TRIPLE INEQUALITY NOT SUPPORTED. USE \322A<B AND B<C\323 INSTEAD OF \322A<B<C\323,) 111 366.73 T
(ETC:) 111 354.73 T
164.83 353.67 141 353.67 2 L
V
N
5 11 Q
(token) 141 354.73 T
6 10 Q
(\336) 170.83 354.73 T
2 11 Q
-0.1 (This error indicates that the user tried to use triple inequality without the use of the key word) 111 340.84 P
4 F
-0.24 (AND) 520.45 340.84 P
2 F
-0.1 (.) 540.25 340.84 P
(The fix should be clear from the message.) 111 327.84 T
2 12 Q
(\245) 99 308.29 T
4 10 Q
(TYPE MISMATCH:) 111 308.29 T
249.27 307.23 201 307.23 2 L
V
N
5 11 Q
(arrayname) 201 308.29 T
4 10 Q
([) 249.27 308.29 T
274.21 307.23 255.27 307.23 2 L
V
N
5 11 Q
(num) 255.27 308.29 T
4 10 Q
(] IS A BOOLEAN SSV.) 274.21 308.29 T
6 F
(\336) 394.21 308.29 T
2 11 Q
0.06 (This error indicates that the user tried to do arithmetic with a Boolean state-space variable. This is) 111 294.41 P
0.92 (usually undesirable, but in those instances when it is useful, the) 111 281.41 P
4 F
2.2 (COUNT) 403.07 281.41 P
2 F
0.92 ( function is available to) 436.07 281.41 P
(convert the Boolean state-space variable to an integer value.) 111 268.41 T
2 12 Q
(\245) 99 248.85 T
4 10 Q
(TYPE MISMATCH:) 111 248.85 T
249.27 247.8 201 247.8 2 L
V
N
5 11 Q
(arrayname) 201 248.85 T
4 10 Q
([) 249.27 248.85 T
274.21 247.8 255.27 247.8 2 L
V
N
5 11 Q
(num) 255.27 248.85 T
4 10 Q
(] IS AN INTEGER SSV.) 274.21 248.85 T
6 F
(\336) 400.21 248.85 T
2 11 Q
-0.12 (This error indicates that the user tried to test an integer state-space variable as if it were a Boolean.) 111 234.97 P
-0.23 (This is usually undesirable, but in those instances when it is useful, the user can test for \322) 111 221.97 P
5 F
-0.23 (ssv) 498.99 221.97 P
2 F
-0.23 ( <> 0\323.) 512.43 221.97 P
2 12 Q
(\245) 99 202.42 T
4 10 Q
(TYPE MISMATCH:) 111 202.42 T
209.56 201.36 201 201.36 2 L
V
N
5 11 Q
(id) 201 202.42 T
6 10 Q
(\336) 215.56 202.42 T
2 11 Q
0.39 (This error indicates that two incompatible types were mixed in the same expression or the wrong) 111 188.54 P
(value type was used for the context.) 111 175.54 T
2 12 Q
(\245) 99 155.99 T
4 10 Q
(TYPE MISMATCH:) 111 155.99 T
209.56 154.93 201 154.93 2 L
V
N
5 11 Q
(id) 201 155.99 T
4 10 Q
( IS A BOOLEAN SSV.) 209.56 155.99 T
6 F
(\336) 323.56 155.99 T
2 11 Q
0.06 (This error indicates that the user tried to do arithmetic with a Boolean state-space variable. This is) 111 142.1 P
0.92 (usually undesirable, but in those instances when it is useful, the) 111 129.1 P
4 F
2.2 (COUNT) 403.07 129.1 P
2 F
0.92 ( function is available to) 436.07 129.1 P
(convert the Boolean state-space variable to an integer value.) 111 116.1 T
2 12 Q
(\245) 99 96.55 T
4 10 Q
(TYPE MISMATCH: id IS AN INTEGER SSV.) 111 96.55 T
6 F
(\336) 333 96.55 T
2 11 Q
-0.12 (This error indicates that the user tried to test an integer state-space variable as if it were a Boolean.) 111 82.67 P
-0.23 (This is usually undesirable, but in those instances when it is useful, the user can test for \322) 111 69.67 P
5 F
-0.23 (ssv) 498.99 69.67 P
2 F
-0.23 ( <> 0\323.) 512.43 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "86" 91
%%Page: "87" 92
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(87) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(VALID ONLY IN RATE EXPRESSION: ^ \050CONCATENATION\051) 111 719.33 T
6 F
(\336) 405 719.33 T
2 11 Q
0.16 (This error indicates that the concatenation operation is valid only in a rate expression. Concatena-) 111 706.2 P
0.63 (tion can usually be replaced by specifying an array subscript inside square brackets. This should) 111 693.2 P
(fix the problem.) 111 680.2 T
2 12 Q
(\245) 99 661.41 T
4 10 Q
(VARIABLE CANNOT BE REFERENCED IN BODY UNLESS LISTED IN STATE-SPACE VARI-) 111 661.41 T
(ABLE LIST:) 111 649.41 T
190.44 648.35 177 648.35 2 L
V
0.53 H
0 Z
N
5 11 Q
(ssv) 177 649.41 T
6 10 Q
(\336) 196.44 649.41 T
2 11 Q
1.71 (This error indicates that an attempt was made to use a state-space variable in the body of an) 111 636.27 P
4 F
-0.04 (IMPLICIT) 111 623.27 P
2 F
-0.01 ( or) 163.8 623.27 P
4 F
-0.04 (FUNCTION) 178.43 623.27 P
2 F
-0.01 ( definition without having declared it in the state-space variable list for) 231.23 623.27 P
-0.13 (an) 111 610.27 P
4 F
-0.32 (IMPLICIT) 124 610.27 P
2 F
-0.13 (. If the user is defining a) 176.8 610.27 P
4 F
-0.32 (FUNCTION) 285.84 610.27 P
2 F
-0.13 (, it will have to be converted to an) 338.64 610.27 P
4 F
-0.32 (IMPLICIT) 490.2 610.27 P
2 F
(in order to reference the state-space variable. See sections 3.2.3 and 3.2.4 for details.) 111 597.27 T
2 12 Q
(\245) 99 578.48 T
4 10 Q
(VARIABLE STATEMENT CANNOT CONTAIN A FUNCTION PARAMETER LIST. CONSIDER) 111 578.48 T
(USING AN IMPILICT FUNCTION:) 111 566.48 T
302.83 565.42 279 565.42 2 L
V
N
5 11 Q
(token) 279 566.48 T
6 10 Q
(\336) 308.83 566.48 T
2 11 Q
-0.07 (This error indicates that a VARIABLE statement definition cannot have a parameter list following) 111 553.34 P
(the state-space variable list.) 111 540.34 T
2 12 Q
(\245) 99 521.55 T
4 10 Q
(VARIABLES NOT ALLOWED IN CONSTANT DEFINITION EXPRESSION. CONSIDER THE) 111 521.55 T
(USE OF A FUNCTION OR IMPLICIT:) 111 509.55 T
305.56 508.49 297 508.49 2 L
V
N
5 11 Q
(id) 297 509.55 T
6 10 Q
(\336) 311.56 509.55 T
2 11 Q
0.33 (This error indicates that a variable was referenced in a constant expression. It can occur in a con-) 111 496.42 P
0.63 (stant definition statement, an) 111 483.42 P
4 F
1.51 (INPUT) 243.38 483.42 P
2 F
0.63 ( statement, or in a) 276.38 483.42 P
4 F
1.51 (START) 360.79 483.42 P
2 F
0.63 ( statement. Many input files built) 393.79 483.42 P
0.22 (for older versions of ASSIST will get this error message because the old variable definition state-) 111 470.42 P
0.27 (ment was replaced with the new) 111 457.42 P
4 F
0.64 (IMPLICIT) 256.79 457.42 P
2 F
0.27 ( definition statement. See section 3.2.3 for details on) 309.58 457.42 P
(the) 111 444.42 T
4 F
(IMPLICIT) 127.19 444.42 T
2 F
( statement.) 179.99 444.42 T
2 12 Q
(\245) 99 425.62 T
4 10 Q
(VARIABLES NOT ALLOWED IN FUNCTION DEFINITION BODY. ONLY NAMED CONSTANTS) 111 425.62 T
(MAY BE INHERITED.) 111 413.62 T
6 F
(\336) 219 413.62 T
2 11 Q
0.18 (This error indicates that the user tried to reference a variable from a function body. If the variable) 111 400.49 P
0.74 (is a state-space variable, try using an) 111 387.49 P
4 F
1.77 (IMPLICIT) 280.52 387.49 P
2 F
0.74 ( function definition instead. If the variable is a) 333.32 387.49 P
0.29 (parameter from a previous) 111 374.49 P
4 F
0.7 (FUNCTION) 231.3 374.49 P
2 F
0.29 ( or) 284.1 374.49 P
4 F
0.7 (IMPLICIT) 299.35 374.49 P
2 F
0.29 (, it was probably omitted from the parame-) 352.15 374.49 P
(ter list for the new function.) 111 361.49 T
2 12 Q
(\245) 99 342.69 T
4 10 Q
-0.6 (WILD SUBSCRIPT NOT ALLOWED EXCEPT IN CONTEXT OF APPLICABLE BUILT-IN FUNC-) 111 342.69 P
(TION:) 111 330.69 T
155.56 329.64 147 329.64 2 L
V
N
5 11 Q
(id) 147 330.69 T
6 10 Q
(\336) 161.56 330.69 T
2 11 Q
0.62 (This error indicates that an array was referenced with an asterisk instead of an array subscript in) 111 317.56 P
0.31 (the wrong context. If the user meant to compute the subscript as the product of two quantities, an) 111 304.56 P
1.12 (identifier or literal value must precede the asterisk. If the user meant for a wild subscript to be) 111 291.56 P
(present, a function such as) 111 278.56 T
4 F
(SUM) 230.14 278.56 T
2 F
( or) 249.94 278.56 T
4 F
(COUNT) 264.6 278.56 T
2 F
( is probably missing.) 297.6 278.56 T
3 10.5 Q
(C.2. Listing of Detected W) 105 253.43 T
(arnings) 222.82 253.43 T
2 11 Q
0.45 (The) 111 235.13 P
3 F
0.45 (\320w=<level>) 131.3 235.13 P
2 F
0.45 ( command-line option is used to specify the number of levels of warning report-) 184.94 235.13 P
1.48 (ing. All warnings at a level less than or equal to the requested number of reporting levels are) 111 222.13 P
-0.03 (printed to the standard error file and to the log file. The default is four levels of warning reporting.) 111 209.13 P
(A list of all warning levels in ASSIST appears in table C1.) 111 189.67 T
2 9 Q
(T) 251.81 156 T
(able C1. ASSIST W) 256.68 156 T
(arning Levels) 328.95 156 T
(Level) 161.18 132 T
(Description) 324 132 T
(0) 169.18 117 T
(No warnings whatsoever) 216.43 117 T
(. \050Same as) 305.41 117 T
3 F
(\320w=none) 344.9 117 T
2 F
(.) 379.54 117 T
3 F
(\051) 381.79 117 T
2 F
(1) 169.18 102 T
(The \322Serious\323 level. These warnings are major) 216.43 102 T
(. \050Same as) 384.64 102 T
3 F
(\320w=fewer) 424.13 102 T
2 F
(.) 461.25 102 T
3 F
(\051) 463.5 102 T
2 F
(2) 169.18 87 T
(The \322Default\323 level. These warnings are usually worth noting.) 216.43 87 T
(3) 169.18 72 T
(The \322Minor\323 level. These warnings are less major) 216.43 72 T
(. \050Same as) 395.89 72 T
3 F
(\320w=all) 435.38 72 T
2 F
(.) 461.01 72 T
3 F
(\051) 463.26 72 T
141.43 140.75 141.43 66.25 2 L
V
0.5 H
N
201.43 141.25 201.43 65.75 2 L
V
N
488.57 140.75 488.57 66.25 2 L
V
N
141.18 141 488.82 141 2 L
V
N
141.18 126 488.82 126 2 L
V
N
141.18 111 488.82 111 2 L
V
N
141.18 96 488.82 96 2 L
V
N
141.18 81 488.82 81 2 L
V
N
141.18 66 488.82 66 2 L
V
N
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "87" 92
%%Page: "88" 93
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(88) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
(An alphabetical listing of all warning messages follows:) 111 718.67 T
2 12 Q
(\245) 99 697.96 T
4 10 Q
(ASSERTION FAILED:) 111 697.96 T
242.83 696.9 219 696.9 2 L
V
0.53 H
0 Z
N
5 11 Q
(token) 219 697.96 T
6 10 Q
(\336) 248.83 697.96 T
2 11 Q
0.14 (This warning indicates that an invariant or other assertion failed because of a certain model  state.) 111 682.92 P
2.1 (The state node for the current state and the log file line number corresponding to the failed) 111 669.92 P
4 F
4.29 (ASSERT) 111 656.92 P
2 F
1.79 ( condition are printed following the warning message. This serious warning message) 150.6 656.92 P
(appears when one or more levels of error reporting are requested.) 111 643.92 T
2 12 Q
(\245) 99 623.21 T
4 10 Q
(COMMENT OPTION TURNED BACK OFF DUE TO EXCESSIVE STATE-SPACE VARIABLE) 111 623.21 T
(COUNT:) 111 611.21 T
161.56 610.15 153 610.15 2 L
V
N
5 11 Q
(id) 153 611.21 T
6 10 Q
(\336) 167.56 611.21 T
2 11 Q
2.67 (This warning indicates that, since the state space is so large, ASSIST refuses to allow the) 111 596.17 P
4 F
-0.4 (COMMENT) 111 583.17 P
2 F
-0.17 ( option to be) 157.2 583.17 P
4 F
-0.4 (ON) 214.59 583.17 P
2 F
-0.17 (. To get rid of this message, add the statement \322) 227.79 583.17 P
4 F
-0.4 (COMMENT OFF) 435.7 583.17 P
2 F
-0.17 (;\323 to the) 507.89 583.17 P
1.05 (ASSIST input file anywhere before the) 111 570.17 P
4 F
2.51 (SPACE) 292.02 570.17 P
2 F
1.05 ( statement. This warning message appears when) 325.02 570.17 P
(two or more levels of error reporting are requested.) 111 557.17 T
2 12 Q
(\245) 99 536.46 T
4 10 Q
(ELLIPSIS \322..\323 AND UPPER BOUND ARE MISSING: USING 1..) 111 536.46 T
441.94 535.4 423 535.4 2 L
V
N
5 11 Q
(num) 423 536.46 T
6 10 Q
(\336) 447.94 536.46 T
2 11 Q
-0.24 (This warning indicates that the user forgot to specify both a lower and an upper bound for either an) 111 521.42 P
0.25 (array subscript or the value range for a state-space variable. ASSIST had to assume what the user) 111 508.42 P
2.19 (meant. The assumption, for example, was that \322) 111 495.42 P
4 F
5.26 (ARRAY[2] OF 5) 336.51 495.42 P
2 F
2.19 (\323 was supposed to read) 432.82 495.42 P
0.47 (\322) 111 482.42 P
4 F
1.14 (ARRAY[1..2] OF 1..5) 115.88 482.42 P
2 F
0.47 (\323. Since the assumption may not always be correct, the user should) 243.57 482.42 P
1.38 (specify the full legal syntax and specifically say what is meant. This serious warning message) 111 469.42 P
(appears when one or more levels of error reporting are requested.) 111 456.42 T
2 12 Q
(\245) 99 435.71 T
4 10 Q
(EMPTY LIST SPECIFIED.) 111 435.71 T
6 F
(\336) 243 435.71 T
2 11 Q
1.38 (This warning indicates that the user followed a left parenthesis by a right parenthesis or a left) 111 420.67 P
0 (bracket by a right bracket. It could also indicate that an) 111 407.67 P
4 F
0 (INPUT) 356.02 407.67 P
2 F
0 ( statement did not specify any con-) 389.02 407.67 P
2.25 (stants to be input, that a) 111 394.67 P
4 F
5.41 (SPACE) 231.77 394.67 P
2 F
2.25 ( statement did not have any state-space variables, or that a) 264.77 394.67 P
4 F
-0.19 (TRANTO) 111 381.67 P
2 F
-0.08 ( did not list any destination expressions. The enclosed text may be in: \322[ \050* 1,2 *\051 ]\323. This) 150.6 381.67 P
(serious warning message appears when one or more levels of error reporting are requested.) 111 368.67 T
2 12 Q
(\245) 99 347.96 T
4 10 Q
(IDENTIFIER TRUNCATED: 28 CHARS MAX) 111 347.96 T
6 F
(\336) 321 347.96 T
2 11 Q
0.12 (This warning indicates that the identifier in question was truncated to 28 characters in length. The) 111 332.92 P
0.31 (arrow \050\322^\323\051 points to the identifier that was too long. This warning message appears when two or) 111 319.92 P
(more levels of error reporting are requested.) 111 306.92 T
2 12 Q
(\245) 99 286.21 T
4 10 Q
(INPUT LINE TOO LONG.) 111 286.21 T
6 F
(\336) 237 286.21 T
2 11 Q
0.34 (This warning indicates that an input line has been truncated and that part of the information from) 111 271.17 P
0.22 (the end of the line was thrown away. This almost always results in the propagation of at least one) 111 258.17 P
0.38 (error, unless, of course, the truncated text was just part of a comment. This serious warning mes-) 111 245.17 P
(sage appears when one or more levels of error reporting are requested.) 111 232.17 T
2 12 Q
(\245) 99 211.46 T
4 10 Q
(INTERNAL ERROR. PLEASE CONTACT COMPILER SUPPORT:) 111 211.46 T
428.83 210.4 405 210.4 2 L
V
N
5 11 Q
(token) 405 211.46 T
6 10 Q
(\336) 434.83 211.46 T
2 11 Q
0.56 (As a warning, this message indicates that ASSIST could not anticipate potential problems which) 111 196.42 P
0.51 (are normally checked. If the standard error file reads \322Algorithm to check for TRANTO destina-) 111 183.42 P
-0.26 (tion duplication errors flushed in:) 111 170.42 P
4 F
-0.63 (\322qq_parse_space_expr_list\323) 259.7 170.42 P
2 F
-0.26 (\323, then ASSIST could not) 431.3 170.42 P
0.53 (fully check for as many errors as it could have if the algorithm had not been flushed. The gener-) 111 157.42 P
-0.14 (ated model is probably correct, but the user should check it more thoroughly. This serious warning) 111 144.42 P
(message appears when one or more levels of error reporting are requested.) 111 131.42 T
2 12 Q
(\245) 99 110.71 T
4 10 Q
(LITERAL CHARACTER STRING TRUNCATED:) 111 110.71 T
352.67 109.65 327 109.65 2 L
V
N
5 11 Q
(string) 327 110.71 T
6 10 Q
(\336) 358.67 110.71 T
2 11 Q
0.02 (This warning indicates that the text of a SURE statement or an INPUT prompt had to be truncated) 111 95.67 P
0.52 (because it was too long. This serious warning message appears when one or more levels of error) 111 82.67 P
(reporting are requested.) 111 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "88" 93
%%Page: "89" 94
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(89) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 719.33 T
4 10 Q
(MISSING TOKEN INSERTED BY PARSER: =) 111 719.33 T
6 F
(\336) 327 719.33 T
2 11 Q
0.72 (This warning indicates that a token was missing. Since it was obvious what it was, it was fixed.) 111 706.55 P
(This serious warning message appears when one or more levels of error reporting are requested.) 111 693.55 T
2 12 Q
(\245) 99 675.1 T
4 10 Q
(MODEL CONTAINS RECOVERY TRANSITIONS DIRECTLY TO DEATH STATE AND THERE-) 111 675.1 T
(FORE MAY NOT BE SUITED TO TRIMMING:) 111 663.1 T
335.56 662.04 327 662.04 2 L
V
0.53 H
0 Z
N
5 11 Q
(id) 327 663.1 T
6 10 Q
(\336) 341.56 663.1 T
2 11 Q
0.42 (This warning indicates that the user trimmed the model in such a way that the assumptions made) 111 650.31 P
0.06 (when proving the theorem for the trimming bound are no longer valid; therefore, the user may not) 111 637.31 P
-0.25 (be able to trust the answer. This serious warning message appears when one or more levels of error) 111 624.31 P
(reporting are requested.) 111 611.31 T
2 12 Q
(\245) 99 592.86 T
4 10 Q
(MODEL CONTAINS RECOVERY TRANSITIONS DIRECTLY TO PRUNE STATE AND THERE-) 111 592.86 T
(FORE MAY NOT BE SUITED TO TRIMMING:) 111 580.86 T
335.56 579.81 327 579.81 2 L
V
N
5 11 Q
(id) 327 580.86 T
6 10 Q
(\336) 341.56 580.86 T
2 11 Q
0.42 (This warning indicates that the user trimmed the model in such a way that the assumptions made) 111 568.08 P
0.06 (when proving the theorem for the trimming bound are no longer valid; therefore, the user may not) 111 555.08 P
-0.25 (be able to trust the answer. This serious warning message appears when one or more levels of error) 111 542.08 P
(reporting are requested.) 111 529.08 T
2 12 Q
(\245) 99 510.63 T
4 10 Q
(NO TRANSITIONS GENERATED USING TRANTO ON LINE:) 111 510.63 T
443.11 509.57 393 509.57 2 L
V
N
5 11 Q
(linenumber) 393 510.63 T
6 10 Q
(\336) 449.11 510.63 T
2 11 Q
0.46 (This warning indicates that the) 111 497.84 P
4 F
1.1 (TRANTO) 251.68 497.84 P
2 F
0.46 ( on the specified line was never used. This warning may) 291.29 497.84 P
-0.17 (signal a logical error in the ASSIST input file; however, the need for this TRANTO statement may) 111 484.84 P
0.86 (have been obviated by pruning. If so, the message can probably be ignored, but the user should) 111 471.84 P
1.02 (check the input file first to make sure that everything is correct. This warning message appears) 111 458.84 P
(when two or more levels of error reporting are requested.) 111 445.84 T
2 12 Q
(\245) 99 427.39 T
4 10 Q
(NO TRANSITIONS OUT OF A NON-DEATHIF STATE.) 111 427.39 T
(THIS STATE IS THEREFORE IMPLICITLY A DEATH STATE:) 111 415.39 T
465.38 414.34 411 414.34 2 L
V
N
5 11 Q
(statenumber) 411 415.39 T
6 10 Q
(\336) 471.38 415.39 T
2 11 Q
0.21 (This warning indicates that the state) 111 402.61 P
327.95 401.55 273.56 401.55 2 L
V
N
5 F
0.21 (statenumber) 273.56 402.61 P
2 F
0.21 ( did not have any transitions leaving it, yet it did) 327.95 402.61 P
1.15 (not conform to any of the) 111 389.61 P
4 F
2.76 (DEATHIF) 232.76 389.61 P
2 F
1.15 ( or) 278.96 389.61 P
4 F
2.76 (PRUNEIF) 295.92 389.61 P
2 F
1.15 ( conditions. Because there are no transitions) 342.12 389.61 P
1.28 (leaving it, SURE will assume this state is a death state. This serious warning message appears) 111 376.61 P
(when one or more levels of error reporting are requested.) 111 363.61 T
2 12 Q
(\245) 99 345.16 T
4 10 Q
(NOT YET IMPLEMENTED.) 111 345.16 T
6 F
(\336) 237 345.16 T
2 11 Q
0.7 (This warning indicates that the user tried to use a future option of a pending version of ASSIST) 111 332.37 P
2.46 (that is nearing completion but still under development and not yet supported. At release of) 111 319.37 P
2.68 (ASSIST) 111 306.37 P
2.68 (7.0 there are no features that generate this warning. This serious warning message) 150.42 306.37 P
(appears when one or more levels of error reporting are requested.) 111 293.37 T
2 12 Q
(\245) 99 274.92 T
4 10 Q
(NUMBER SHOULD BEGIN WITH DIGIT, NOT DECIMAL POINT.) 111 274.92 T
6 F
(\336) 417 274.92 T
2 11 Q
0.75 (This warning indicates that the user began a number with a decimal point. There is currently no) 111 262.14 P
1.46 (place in the ASSIST language where this would be ambiguous, so this warning never appears) 111 249.14 P
-0.16 (unless the user requests all warnings. If the syntax ever changes so as to cause this to present a real) 111 236.14 P
0.2 (ambiguity, then the warning will be changed to an error, and users will have to change their input) 111 223.14 P
-0.13 (files. The documentation in section 3.1.2  indicates that the decimal point is required to reserve the) 111 210.14 P
1.35 (right to extend the language in the future. This minor warning message appears when three or) 111 197.14 P
(more levels of error reporting are requested.) 111 184.14 T
2 12 Q
(\245) 99 165.69 T
4 10 Q
(NUMBER STRING TRUNCATED: 27 CHARS MAX) 111 165.69 T
6 F
(\336) 339 165.69 T
2 11 Q
0.52 (This warning indicates that a number string was too long and therefore was truncated. If a preci-) 111 152.9 P
0.12 (sion digit was lost, then the problem is minimal. If an exponent digit was lost, then the problem is) 111 139.9 P
1.47 (serious. This serious warning message appears when one or more levels of error reporting are) 111 126.9 P
(requested.) 111 113.9 T
2 12 Q
(\245) 99 95.45 T
4 10 Q
(OLD SYNTAX SPECIFIED. PLEASE REPLACE WITH NEW SYNTAX.) 111 95.45 T
6 F
(\336) 435 95.45 T
2 11 Q
0.42 (This warning indicates that the user is using the old syntax for a construct. The old syntax is still) 111 82.67 P
-0.07 (legal, hence the warning only appears when users ask for all warnings. The old syntax for the) 111 69.67 P
4 F
-0.16 (FOR) 523.2 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "89" 94
%%Page: "90" 95
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(90) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.18 (construct can be ambiguous in the user\325s mind if that user is using both the old and new syntax in) 111 718.67 P
-0.17 (different ASSIST input files. For example,  \322III = 1,3\323  for the old syntax includes the number  \3222\323) 111 705.67 P
0.16 (in the range whereas the new syntax  \322III IN [1,3]\323  does not include the number  \3222\323. This minor) 111 692.67 P
(warning message appears when three or more levels of error reporting are requested.) 111 679.67 T
2 12 Q
(\245) 99 661.33 T
4 10 Q
(OPTION ONLY VALID ON A UNIX SYSTEM. OPTION IGNORED: \321) 111 661.33 T
443.06 660.28 429 660.28 2 L
V
0.53 H
0 Z
N
5 11 Q
(opt) 429 661.33 T
6 10 Q
(\336) 449.06 661.33 T
2 11 Q
0.88 (Certain options, such as) 111 648.67 P
3 F
0.88 (\320pipe) 226 648.67 P
2 F
0.88 (, are valid only on UNIX systems. They will not work on VMS.) 251.67 648.67 P
(This serious warning message appears when 1 or more levels of error reporting are requested.) 111 635.67 T
2 12 Q
(\245) 99 617.33 T
4 10 Q
(PROGRAM DOES NOT CONTAIN ANY DEATHIF STATEMENTS:) 111 617.33 T
428.83 616.28 405 616.28 2 L
V
N
5 11 Q
(token) 405 617.33 T
6 10 Q
(\336) 434.83 617.33 T
2 11 Q
0.54 (This warning indicates that the program did not contain any) 111 604.67 P
4 F
1.28 (DEATHIF) 382.15 604.67 P
2 F
0.54 ( statements. This warning) 428.35 604.67 P
(message appears when 2 or more levels of error reporting are requested.) 111 591.67 T
2 12 Q
(\245) 99 573.33 T
4 10 Q
(TESTS FOR EQUALITY/INEQUALITY OF REALS CAN PRODUCE INCORRECT RESULTS.) 111 573.33 T
6 F
(\336) 531 573.33 T
2 11 Q
0.55 (This warning indicates that the user tried to test for one real \322equal\323 to or \322not equal\323 to another) 111 560.67 P
0.98 (real. The user should use relations such as \322<=\323 or \322>=\323 instead of \322==\323 and \322<>\323. This minor) 111 547.67 P
(warning message appears when three or more levels of error reporting are requested.) 111 534.67 T
2 12 Q
(\245) 99 516.33 T
4 10 Q
-1.09 (THE \322C_OPTION\323 STATEMENT SHOULD APPEAR BEFORE ANY OTHER STATEMENTS IN THE) 111 516.33 P
(INPUT FILE:) 111 504.33 T
206.83 503.28 183 503.28 2 L
V
N
5 11 Q
(token) 183 504.33 T
6 10 Q
(\336) 212.83 504.33 T
2 11 Q
3.47 (This warning indicates that a \322) 111 491.67 P
4 F
8.33 (C_OPTION) 263.08 491.67 P
2 F
3.47 (\323 statement appeared out of sequence. In most) 315.88 491.67 P
0.39 (instances, this will cause serious problems. In some instances, this may be acceptable. For exam-) 111 478.67 P
0.1 (ple, it is okay to change the maximum number of errors/line at various places in the input file, but) 111 465.67 P
0.25 (increasing memory allocation limits must be done first. This option can be used as the last line of) 111 452.67 P
-0.2 (the input file to change the warning/error limits for the rule generation phase. This serious warning) 111 439.67 P
(message appears when one or more levels of error reporting are requested.) 111 426.67 T
2 12 Q
(\245) 99 408.33 T
4 10 Q
(THIS STATEMENT IS INDEPENDENT OF FOR INDEX:) 111 408.33 T
383.56 407.28 375 407.28 2 L
V
N
5 11 Q
(id) 375 408.33 T
6 10 Q
(\336) 389.56 408.33 T
2 11 Q
0.02 (This warning indicates to the user that the specified statement does not depend upon the) 111 395.67 P
4 F
0.05 (FOR) 500.87 395.67 P
2 F
0.02 ( loop) 520.67 395.67 P
-0.03 (index to the right of the colon. The statement could therefore safely be moved out of the) 111 382.67 P
4 F
-0.07 (FOR) 500.93 382.67 P
2 F
-0.03 ( con-) 520.73 382.67 P
0.53 (struct for clarity and simplicity. The user should check the statement to confirm that no intended) 111 369.67 P
-0.18 (references to the) 111 356.67 P
4 F
-0.42 (FOR) 185.91 356.67 P
2 F
-0.18 ( index were omitted. This warning message appears when two or more levels) 205.71 356.67 P
(of error reporting are requested.) 111 343.67 T
2 12 Q
(\245) 99 325.33 T
4 10 Q
(VALUE ASSIGNED TWICE IN SAME TRANTO FOR THIS STATE-SPACE VARIABLE:) 111 325.33 T
521.56 324.28 513 324.28 2 L
V
N
5 11 Q
(id) 513 325.33 T
6 10 Q
(\336) 527.56 325.33 T
2 11 Q
0.19 (This warning indicates that the state-space variable was adjusted twice in the same) 111 312.67 P
4 F
0.46 (TRANTO) 479.79 312.67 P
2 F
0.19 ( as in) 519.39 312.67 P
4 F
2.71 (\322TRANTO NWP++,NWP-- BY\323) 111 299.67 P
2 F
1.13 (. The net effect of the transition would be to ignore the first) 268.23 299.67 P
1.07 (adjustment and use only the final one. In the example the) 111 286.67 P
4 F
2.56 (\322NWP++\323) 376.91 286.67 P
2 F
1.07 ( would be ignored and the) 423.11 286.67 P
4 F
1.93 (\322NWP--\323) 111 273.67 P
2 F
0.81 ( would be used because the decrementing appeared later in the statement than did the) 157.2 273.67 P
0.29 (incrementing. This serious warning message appears when 1 or more levels of error reporting are) 111 260.67 P
0.11 (requested. In some instances, as in the case of array state-space variables with variable subscripts,) 111 247.67 P
(the warning is minor and appears when three or more levels of warning are requested.) 111 234.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "90" 95
%%Page: "91" 96
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(91) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Appendix) 87 718 T
(D) 141.34 718 T
(Debugging ASSIST Input Files) 87 686.44 T
2 11 Q
-0.11 (The most cautious user will occasionally mistype something in an ASSIST input file.  Usually, gen-) 105 662.56 P
0.8 (erated error messages will give enough detail to make an appropriate correction.   For extremely rare) 87 649.56 P
-0.04 (instances in which more information is helpful, there are certain) 87 636.56 P
5 F
-0.04 (tricks) 371.02 636.56 P
2 F
-0.04 ( that one can use to get that infor-) 395.46 636.56 P
(mation.   These are described herein.) 87 623.56 T
3 10.5 Q
(D.1. C_OPTION Statement) 105 593.33 T
2 11 Q
0.26 (The command-line option statement can be used at the beginning of an input file to specify special) 105 569.94 P
0.1 (command-line options that must always be used to correctly process the file in question.   For example,) 87 556.94 P
(if) 87 543.95 T
3 F
(foo.ast) 99.22 543.95 T
2 F
(  were to begin with) 130.08 543.95 T
8 10 Q
(C_OPTION W=NONE;) 132 520.06 T
2 11 Q
(The) 105 496.83 T
3 F
(\320w=none) 127.61 496.83 T
2 F
( option may be omitted from the command line as illustrated:) 172.68 496.83 T
4 10 Q
(assist foo) 132 472.94 T
2 11 Q
0.28 (The values specified in the) 105 449.72 P
8 F
0.67 (C_OPTION) 227.07 449.72 P
2 F
0.28 ( statement override any values explicitly given on the com-) 279.87 449.72 P
(mand line.   For example, if) 87 436.72 T
4 10 Q
(C_OPTION W=NONE;) 132 412.83 T
2 11 Q
(is specified as the first line of the ASSIST input file) 87 389.61 T
3 F
(foo.ast) 320.43 389.61 T
2 F
(  and if the command line is specified as) 351.29 389.61 T
4 10 Q
(assist foo \321w=all) 132 366.72 T
2 11 Q
-0.04 (no warnings will be printed because the) 87 343.5 P
4 F
-0.1 (C_OPTION W=NONE;) 264.21 343.5 P
2 F
-0.04 ( statement overrides the option as spec-) 369.72 343.5 P
(ified on the command line.) 87 330.5 T
3 10.5 Q
(D.2. Debug Statement) 105 300.28 T
2 11 Q
-0.15 (The) 105 276.89 P
4 F
-0.37 (DEBUG$) 124.7 276.89 P
2 F
-0.15 ( statement can be used to print out internal information to the log file.  Internals can be) 164.3 276.89 P
-0.08 (very technical, so not very much will be said about this statement. The source code provides an analysis) 87 263.89 P
(for advanced users who understand the internals of ASSIST.) 87 250.89 T
(There are two forms of the debug statement that may be of use to an intermediate user.  These are) 105 226.33 T
4 10 Q
(DEBUG$ EXPAND$;) 132 202.45 T
(DEBUG$ NONE$;) 132 190.45 T
2 11 Q
0.85 (If placed around a statement containing an erroneous) 105 167.22 P
4 F
2.03 (FUNCTION) 347.59 167.22 P
2 F
0.85 ( or) 400.39 167.22 P
4 F
2.03 (IMPLICIT) 416.74 167.22 P
2 F
0.85 ( reference, these) 469.55 167.22 P
0.6 (commands will detail how the macro was expanded and may shed more light on why the context was) 87 154.22 P
(erroneous.   For example) 87 141.22 T
4 10 Q
(DEBUG$ EXPAND$;) 132 117.33 T
(IF F\050I\051 THEN) 132 105.33 T
(   DEBUG$ NONE$;) 132 93.33 T
(   ...) 132 81.33 T
(ENDIF;) 132 69.33 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "91" 96
%%Page: "92" 97
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(92) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
(D.3. Cr) 105 719 T
(oss-Refer) 137.76 719 T
(ence Map) 179.55 719 T
2 11 Q
1.05 (The) 105 698.44 P
3 F
1.05 (\320xref) 129.7 698.44 P
2 F
1.05 (  command-line option can be used to produce a cross-reference map of all identifier,) 154.13 698.44 P
(block) 87 685.44 T
4 F
(IF) 114.19 685.44 T
2 F
(, and) 127.39 685.44 T
4 F
(FOR) 151.53 685.44 T
2 F
( references throughout the input file.  For example) 171.33 685.44 T
(assist foo  \320xref) 111 663.72 T
2 7 Q
(   or) 111 650.72 T
2 11 Q
(C_OPTION XREF ;) 111 637.72 T
3 10.5 Q
(D.4. Load Map) 105 610.33 T
2 11 Q
0.45 (The) 105 589.78 P
3 F
0.45 (\320loadmap) 128.51 589.78 P
2 F
0.45 ( command-line option can be used to produce an extremely technical dump of the) 178.16 589.78 P
-0.2 (data structures and memory layout after the input file has been parsed and before rule generation begins.) 87 576.78 P
0.53 (The load map is written to the log file and might be of limited use to a select few technically oriented) 87 563.78 P
(users, but \322if you ask for it, then you get it\323) 87 550.78 T
(.) 292.25 550.78 T
281.01 549.53 292.25 559.78 C
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 284 495 317 522 33 27 271.76 540.28 FMBEGINEPSF
%%BeginDocument: /home/working/Formals/Johnson407/smile.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 3.2.2
%%For: (deesteb) (NASA/LaRC/RIAD/TEB)
%%Title: (smile.ps)
%%CreationDate: (6/5/95) (12:53 PM)
%%BoundingBox: 284 495 317 522
%%DocumentProcessColors: Black
%%DocumentFonts: Times-Roman
%%DocumentSuppliedResources: procset Adobe_packedarray 2.0 0
%%+ procset Adobe_cmykcolor 1.1 0
%%+ procset Adobe_cshow 1.1 0
%%+ procset Adobe_customcolor 1.0 0
%%+ procset Adobe_typography_AI3 1.0 1
%%+ procset Adobe_IllustratorA_AI3 1.0 1
%AI3_ColorUsage: Black&White
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Macintosh_Pic
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_packedarray 2.0 0
%%Title: (Packed Array Operators)
%%Version: 2.0 
%%CreationDate: (8/2/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_packedarray 5 dict dup begin put
/initialize			% - initialize -
{
/packedarray where
	{
	pop
	}
	{
	Adobe_packedarray begin
	Adobe_packedarray
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/packedarray		% arguments count packedarray array
{
array astore readonly
} def
/setpacking			% boolean setpacking -
{
pop
} def
/currentpacking		% - setpacking boolean
{
false
} def
currentdict readonly pop end
%%EndResource
Adobe_packedarray /initialize get exec
%%BeginResource: procset Adobe_cmykcolor 1.1 0
%%Title: (CMYK Color Operators)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cmykcolor 4 dict dup begin put
/initialize			% - initialize -
{
/setcmykcolor where
	{
	pop
	}
	{
	userdict /Adobe_cmykcolor_vars 2 dict dup begin put
	/_setrgbcolor
		/setrgbcolor load def
	/_currentrgbcolor
		/currentrgbcolor load def
	Adobe_cmykcolor begin
	Adobe_cmykcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	end
	Adobe_cmykcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_cmykcolor eq
	{
	end
	} if
} def
/setcmykcolor		% cyan magenta yellow black setcmykcolor -
{
1 sub 4 1 roll
3
	{
	3 index add neg dup 0 lt
		{
		pop 0
		} if
	3 1 roll
	} repeat
Adobe_cmykcolor_vars /_setrgbcolor get exec
pop
} def 
/currentcmykcolor	% - currentcmykcolor cyan magenta yellow black
{
Adobe_cmykcolor_vars /_currentrgbcolor get exec
3
	{
	1 sub neg 3 1 roll
	} repeat
0
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 1.1 0
%%Title: (cshow Operator)
%%Version: 1.1 
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 3 dict dup begin put
/initialize			% - initialize -
{
/cshow where
	{
	pop
	}
	{
	userdict /Adobe_cshow_vars 1 dict dup begin put
	/_cshow		% - _cshow proc
		{} def
	Adobe_cshow begin
	Adobe_cshow
		{
		dup xcheck
			{
			bind
			} if
		userdict 3 1 roll put
		} forall
	end
	end
	} ifelse
} def
/terminate			% - terminate -
{
} def
/cshow				% proc string cshow -
{
exch
Adobe_cshow_vars
	exch /_cshow
	exch put
	{
	0 0 Adobe_cshow_vars /_cshow get exec
	} forall
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_customcolor 1.0 0
%%Title: (Custom Color Operators)
%%Version: 1.0 
%%CreationDate: (5/9/88) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_customcolor 5 dict dup begin put
/initialize			% - initialize -
{
/setcustomcolor where
	{
	pop
	}
	{
	Adobe_customcolor begin
	Adobe_customcolor
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_customcolor begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_customcolor eq
	{
	end
	} if
} def
/findcmykcustomcolor	% cyan magenta yellow black name findcmykcustomcolor object
{
5 packedarray
}  def
/setcustomcolor		% object tint setcustomcolor -
{
exch
aload pop pop
4
	{
	4 index mul 4 1 roll
	} repeat
5 -1 roll pop
setcmykcolor
} def
/setoverprint		% boolean setoverprint -
{
pop
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI3 1.1 0
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(5/31/90) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI3 47 dict dup begin put
/initialize			% - initialize -
{
/TZ
 where
	{
	pop
	}
	{
	Adobe_typography_AI3 begin
	Adobe_typography_AI3
		{
		dup xcheck
			{
			bind
			} if
		pop pop
		} forall
	end
	Adobe_typography_AI3 begin
	} ifelse
} def
/terminate			% - terminate -
{
currentdict Adobe_typography_AI3 eq
	{
	end
	} if
} def
% [ number value stream [ array for encoding modification ] modifyEncoding ==> [ modified array ]
/modifyEncoding
{
	/_tempEncode exch ddef
	
	% pointer for sequential encodings
	/_pntr 0 ddef
	
	{
		% get bottom object
		counttomark -1 roll
		% is it a mark ?
		dup type dup /marktype eq 		
		{
			% exit
			pop pop exit
		}
		{
			% ... object ... type ....
			% insert if a nametype
			/nametype eq
			{
				% insert the name at _pntr and increment pointer
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				% reset _pntr if it's a number
				/_pntr exch ddef					
			}
			ifelse
		}
		ifelse
	}
	loop	
	
	% return the modified encoding
	_tempEncode
}
def
/TE	% Set std platform encoding 	% (encoding pairs) TE -
{
	StandardEncoding 256 array copy modifyEncoding 
	/_nativeEncoding exch def
} def
% re-define font
% expected arguments
% for 'normal fonts : 
% [ /_Helvetica-Bold/Helvetica-Bold direction fontScript defaultEncoding TZ
%
% for cartographic, pictographic, and expert fonts :
% [ ... number value stream ... /_Symbol/Symbol 
%	direction fontScript defaultEncoding TZ
% for blended fonts w/ default encoding :
% [ /_AdobeSans_20ULig1XCond-Bold/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
% for blended fonts w/ special encoding :
% [ ... number value stream ... /_AdobeSans_20ULig1XCond/AdobeSans 
%	direction fontScript defaultEncoding [ w0 w1 ... wn ] TZ
/TZ		
{
	% set weight vector (if present)
	dup type /arraytype eq {/_wv exch def} {/_wv 0 def} ifelse 
	% platform dependent coding flag
	/_useNativeEncoding exch def
	% pop fontScript & direction
	pop pop
	
	% create a new dictionary with length
	% equal to original dictionary length + 2
	% copy all the key/value pairs except FID
	% call makeblended font with the weight values if _wv is an array
	findfont _wv type /arraytype eq {_wv makeblendedfont} if dup length 2 add dict
	
	begin
	
		% copy all the values but the FID
		% into the new dictionary
		mark exch
		{
			1 index /FID ne { def } if cleartomark mark
		}
		forall
		% discard last mark
		pop
		
		% define FontName
		/FontName exch def
		
		% if no re-encoding stream is present
		% then if the base encoding vector of the font
		% is the same as StandardEncoding
		% and the use platform encoding flag is true
		% then install AI platform encoding
		% else leave the base encoding in effect
		counttomark 0 eq
		{
			1 _useNativeEncoding eq
			{
				/Encoding _nativeEncoding def
			}
			if
			% clean up
			cleartomark
		}
		{	
			% custom encoding to be done
			% start off with a copy of the font's standard encoding
			/Encoding load 256 array copy 
			modifyEncoding /Encoding exch def
		}
		ifelse		
		FontName currentdict
	end
	
	% register the new font
	definefont pop
}
def
% text painting operators
/tr					% string tr ax ay string 
{
_ax _ay 3 2 roll
} def
/trj				% string trj cx cy fillchar ax ay string 
{
_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
/Tx	% text							% textString Tx -
	{
	dup 
	currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup
	currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	} ddef
	
} def
/a1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	tr _psf
	newpath moveto
	tr _ctm _pss
	grestore 3 1 roll moveto tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave
	dup currentpoint 3 2 roll
	trj _pjsf
	newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp
	} ddef
	
} def
/e0
{
/Tx	% text							% textString Tx -
	{
	tr _psf
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _pjsf
	} ddef
} def
/e1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll gsave 
	tr _psf  
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll gsave 
	trj _pjsf
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
/i0
{
/Tx	% text							% textString Tx -
	{
	tr sp
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj jsp
	} ddef
} def
/i1
{
W N
} def
/o0
{
/Tx	% text							% textString Tx -
	{
	tr sw rmoveto
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj swj rmoveto
	} ddef
} def
/r0
{
/Tx	% text							% textString Tx -
	{
	tr _ctm _pss
	} ddef
/Tj	% justified text				% textString Tj -
	{
	trj _ctm _pjss
	} ddef
} def
/r1
{
/Tx	% text							% textString Tx -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	tr _ctm _pss 
	grestore 3 1 roll moveto tr sp 
	} ddef
/Tj	% justified text				% textString Tj -
	{
	dup currentpoint 4 2 roll currentpoint gsave newpath moveto
	trj _ctm _pjss
	grestore 3 1 roll moveto tr sp 
	} ddef
} def
% font operators
% Binding
/To	% begin text 					% bindType To -
{
	pop _ctm currentmatrix pop
} def
/TO	% end text					% TO -
{
	Te _ctm setmatrix newpath
} def
% Text paths
/Tp	% begin text path				% a b c d tx ty startPt Tp -
{
	pop _tm astore pop _ctm setmatrix 
	_tDict begin /W {} def /h {} def
} def
/TP	% end text path					% TP -
{
	end
	iTm 0 0 moveto
} def
% Render mode & matrix operators
/Tr	% begin render					% render Tr - 
{
	_render 3 le {currentpoint newpath moveto} if
	dup 8 eq {pop 0} {dup 9 eq {pop 1} if} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm % internal set text matrix		% - iTm -	(uses _tm as implicit argument)
{
_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm % set text matrix				% a b c d tx ty Tm -
{
_tm astore pop iTm 0 0 moveto
} def
/Td % translate text matrix 		% tx ty Td -
{
_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/Te	% end render					% - Te -
{
	_render -1 eq {} {_renderEnd _render get dup null ne {load exec} {pop} ifelse} ifelse
	/_render -1 ddef
} def
% Attributes
/Ta	% set alignment					% alignment Ta -
{
pop
} def
/Tf	% set font name and size		% fontname size Tf -
{
dup 1000 div /_fScl exch ddef
exch findfont exch scalefont setfont
} def
/Tl	% set leading					% leading paragraphLeading Tl -
{
pop
0 exch _leading astore pop
} def
/Tt	% set user tracking				% userTracking Tt -
{
pop
} def
/TW % set word spacing				% minSpace optSpace maxSpace TW -
{
3 npop
} def
/Tw	% set computed word spacing		% wordSpace Tw
{
/_cx exch ddef
} def
/TC % set character spacing			% minSpace optSpace maxSpace TC -
{
3 npop
} def
/Tc	% set computed char spacing 	% charSpace Tc -
{
/_ax exch ddef
} def
/Ts % set super/subscripting (rise)	% rise Ts -
{
/_rise exch ddef
currentpoint
iTm
moveto
} def
/Ti	% set indentation				% firstStartIndent otherStartIndent stopIndent Ti -
{
3 npop
} def
/Tz % set horizontal scaling		% scalePercent Tz -
{
100 div /_hs exch ddef
iTm
} def
/TA % set pairwise kerning			% autoKern TA -
									%	autoKern = 0 -> no pair kerning
									%			 = 1 -> automatic pair kerning
{
pop
} def
/Tq % set hanging quotes			% hangingQuotes Tq -
									%	hangingQuotes 	= 0 -> no hanging quotes
									%			 		= 1 -> hanging quotes
{
pop
} def
% Text Bodies
/TX {pop} def
%/Tx	% non-justified text			% textString Tx -
%/Tj	% justified text				% textString Tj -
/Tk	% kern							% autoKern kernValue Tk -
									%  	autoKern = 0 -> manual kern, = 1 -> auto kern
									%	kernValue = kern value in em/1000 space
{
exch pop _fScl mul neg 0 rmoveto
} def
/TK	% non-printing kern				% autoKern kernValue TK -
{
2 npop
} def
/T* % carriage return & line feed	% - T* -
{
_leading aload pop neg Td
} def
/T*- % carriage return & negative line feed	% - T*- -
{
_leading aload pop Td
} def
/T-	% print a discretionary hyphen	% - T- -
{
_hyphen Tx
} def
/T+	% discretionary hyphen hyphen	% - T+ -
{} def
/TR	% reset pattern matrix 			% a b c d tx ty TR -
{
_ctm currentmatrix pop 	
_tm astore pop 
iTm 0 0 moveto 
} def
/TS	% special chars					% textString justified TS -
{
0 eq {Tx} {Tj} ifelse
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_IllustratorA_AI3 1.0 2
%%Title: (Adobe Illustrator (R) Version 3.0 Abbreviated Prolog)
%%Version: 1.0 
%%CreationDate: (7/22/89) ()
%%Copyright: ((C) 1987-1990 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_IllustratorA_AI3 61 dict dup begin put
% initialization
/initialize				% - initialize -
{
% 47 vars, but leave slack of 10 entries for custom Postscript fragments
userdict /Adobe_IllustratorA_AI3_vars 57 dict dup begin put
% paint operands
/_lp /none def
/_pf {} def
/_ps {} def
/_psf {} def
/_pss {} def
/_pjsf {} def
/_pjss {} def
/_pola 0 def
/_doClip 0 def
% paint operators
/cf	currentflat def	% - cf flatness
% typography operands
/_tm matrix def
/_renderStart [/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def 
/_renderEnd [null null null null /i1 /i1 /i1 /i1] def
/_render -1 def
/_rise 0 def
/_ax 0 def			% x character spacing	(_ax, _ay, _cx, _cy follows awidthshow naming convention)
/_ay 0 def			% y character spacing
/_cx 0 def			% x word spacing
/_cy 0 def			% y word spacing
/_leading [0 0] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
% typography operators
/Tx {} def
/Tj {} def
% compound path operators
/CRender {} def
% printing
/_AI3_savepage {} def
% color operands
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc {} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc {} def
/_i null def
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3
	{
	dup xcheck
		{
		bind
		} if
	pop pop
	} forall
end
end
Adobe_IllustratorA_AI3 begin
Adobe_IllustratorA_AI3_vars begin
newpath
} def
/terminate				% - terminate -
{
end
end
} def
% definition operators
/_					% - _ null
null def
/ddef				% key value ddef -
{
Adobe_IllustratorA_AI3_vars 3 1 roll put
} def
/xput				% key value literal xput -
{
dup load dup length exch maxlength eq
	{
	dup dup load dup
	length 2 mul dict copy def
	} if
load begin def end
} def
/npop				% integer npop -
{
	{
	pop
	} repeat
} def
% marking operators
/sw					% ax ay string sw x y 
{
dup length exch stringwidth
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add
} def
/swj				% cx cy fillchar ax ay string swj x y
{
dup 4 1 roll
dup length exch stringwidth 
exch 5 -1 roll 3 index 1 sub mul add
4 1 roll 3 1 roll 1 sub mul add 
6 2 roll /_cnt 0 ddef
{1 index eq {/_cnt _cnt 1 add ddef} if} forall pop
exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss					% ax ay string matrix ss -
{
4 1 roll
	{				% matrix ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put pop
	gsave
	false charpath currentpoint
	4 index setmatrix
	stroke
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
3 npop
} def
/jss				% cx cy fillchar ax ay string matrix jss -
{
4 1 roll
	{				% cx cy fillchar matrix ax ay char 0 0 {proc} -   
	2 npop 
	(0) exch 2 copy 0 exch put 
	gsave
	_sp eq 
		{
		exch 6 index 6 index 6 index 5 -1 roll widthshow  
		currentpoint
		}
		{
		false charpath currentpoint
		4 index setmatrix stroke
		}ifelse
	grestore
	moveto
	2 copy rmoveto
	} exch cshow
6 npop
} def
% path operators
/sp					% ax ay string sp -
{
	{
	2 npop (0) exch
	2 copy 0 exch put pop
	false charpath
	2 copy rmoveto
	} exch cshow
2 npop
} def
/jsp					% cx cy fillchar ax ay string jsp -
{
	{					% cx cy fillchar ax ay char 0 0 {proc} -
	2 npop 
	(0) exch 2 copy 0 exch put 
	_sp eq 
		{
		exch 5 index 5 index 5 index 5 -1 roll widthshow  
		}
		{
		false charpath
		}ifelse
	2 copy rmoveto
	} exch cshow
5 npop
} def
% path construction operators
/pl				% x y pl x y
{
transform
0.25 sub round 0.25 add exch
0.25 sub round 0.25 add exch
itransform
} def
/setstrokeadjust where
	{
	pop true setstrokeadjust
	/c				% x1 y1 x2 y2 x3 y3 c -
	{
	curveto
	} def
	/C
	/c load def
	/v				% x2 y2 x3 y3 v -
	{
	currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y				% x1 y1 x2 y2 y -
	{
	2 copy curveto
	} def
	/Y
	/y load def
	/l				% x y l -
	{
	lineto
	} def
	/L
	/l load def
	/m				% x y m -
	{
	moveto
	} def
	}
	{%else
	/c
	{
	pl curveto
	} def
	/C
	/c load def
	/v
	{
	currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
	pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
	pl lineto
	} def
	/L
	/l load def
	/m
	{
	pl moveto
	} def
	}ifelse
% graphic state operators
/d					% array phase d -
{
setdash
} def
/cf	{} def			% - cf flatness
/i					% flatness i -
{
dup 0 eq
	{
	pop cf
	} if
setflat
} def
/j					% linejoin j -
{
setlinejoin
} def
/J					% linecap J -
{
setlinecap
} def
/M					% miterlimit M -
{
setmiterlimit
} def
/w					% linewidth w -
{
setlinewidth
} def
% path painting operators
/H					% - H -
{} def
/h					% - h -
{
closepath
} def
/N					% - N -
{
_pola 0 eq 
	{
	_doClip 1 eq {clip /_doClip 0 ddef} if 
	newpath
	} 
	{
	/CRender {N} ddef
	}ifelse
} def
/n					% - n -
{N} def
/F					% - F -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _pf grestore clip newpath /_lp /none ddef _fc 
		/_doClip 0 ddef
		}
		{
		_pf
		}ifelse
	} 
	{
	/CRender {F} ddef
	}ifelse
} def
/f					% - f -
{
closepath
F
} def
/S					% - S -
{
_pola 0 eq 
	{
	_doClip 1 eq 
		{
		gsave _ps grestore clip newpath /_lp /none ddef _sc 
		/_doClip 0 ddef
		}
		{
		_ps
		}ifelse
	} 
	{
	/CRender {S} ddef
	}ifelse
} def
/s					% - s -
{
closepath
S
} def
/B					% - B -
{
_pola 0 eq 
	{
	_doClip 1 eq 	% F clears _doClip
	gsave F grestore 
		{
		gsave S grestore clip newpath /_lp /none ddef _sc
		/_doClip 0 ddef
		} 
		{
		S
		}ifelse
	}
	{
	/CRender {B} ddef
	}ifelse
} def
/b					% - b -
{
closepath
B
} def
/W					% - W -
{
/_doClip 1 ddef
} def
/*					% - [string] * -
{
count 0 ne 
	{
	dup type (stringtype) eq {pop} if
	} if 
_pola 0 eq {newpath} if
} def
% group operators
/u					% - u -
{} def
/U					% - U -
{} def
/q					% - q -
{
_pola 0 eq {gsave} if
} def
/Q					% - Q -
{
_pola 0 eq {grestore} if
} def
/*u					% - *u -
{
_pola 1 add /_pola exch ddef
} def
/*U					% - *U -
{
_pola 1 sub /_pola exch ddef 
_pola 0 eq {CRender} if
} def
/D					% polarized D -
{pop} def
/*w					% - *w -
{} def
/*W					% - *W -
{} def
% place operators
/`					% matrix llx lly urx ury string ` -
{
/_i save ddef
6 1 roll 4 npop
concat pop
userdict begin
/showpage {} def
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[] 0 setdash
newpath
0 setgray
false setoverprint
} def
/~					% - ~ -
{
end
_i restore
} def
% color operators
/O					% flag O -
{
0 ne
/_of exch ddef
/_lp /none ddef
} def
/R					% flag R -
{
0 ne
/_os exch ddef
/_lp /none ddef
} def
/g					% gray g -
{
/_gf exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_gf setgray
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/G					% gray G -
{
/_gs exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_gs setgray
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/k					% cyan magenta yellow black k -
{
_cf astore pop
/_fc
{
_lp /fill ne
	{
	_of setoverprint
	_cf aload pop setcmykcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/K					% cyan magenta yellow black K -
{
_cs astore pop
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_cs aload pop setcmykcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
/x					% cyan magenta yellow black name gray x -
{
/_gf exch ddef
findcmykcustomcolor
/_if exch ddef
/_fc
{ 
_lp /fill ne
	{
	_of setoverprint
	_if _gf 1 exch sub setcustomcolor
	/_lp /fill ddef
	} if
} ddef
/_pf
{
_fc
fill
} ddef
/_psf
{
_fc
ashow
} ddef
/_pjsf
{
_fc
awidthshow
} ddef
/_lp /none ddef
} def
/X					% cyan magenta yellow black name gray X -
{
/_gs exch ddef
findcmykcustomcolor
/_is exch ddef
/_sc
{
_lp /stroke ne
	{
	_os setoverprint
	_is _gs 1 exch sub setcustomcolor
	/_lp /stroke ddef
	} if
} ddef
/_ps
{
_sc
stroke
} ddef
/_pss
{
_sc
ss
} ddef
/_pjss
{
_sc
jss
} ddef
/_lp /none ddef
} def
% locked object operator
/A					% value A -
{
pop
} def
currentdict readonly pop end
setpacking
% annotate page operator
/annotatepage
{
} def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Times-Roman
Adobe_cmykcolor /initialize get exec
Adobe_cshow /initialize get exec
Adobe_customcolor /initialize get exec
Adobe_typography_AI3 /initialize get exec
Adobe_IllustratorA_AI3 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Times-Roman Times-Roman
[/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
0 A
0 To
1 0 0 1 299 512 0 Tp
TP
-3.9375 0 Td
0 Tr
0 O
0 g
0 i 0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
/_Times-Roman 10.5 Tf
0 Ts
100 Tz
0 Tt
0 TA
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 Tq
10.5 0 Tl
0 Tc
0 Tw
(. .\r) Tx 
2.625 -10.5 Td
8 Ts
(.) Tx 
(\r) TX 
TO
0 To
0 -1 1 0 294.375 507.5 0 Tp
TP
-1.747 0 Td
0 Tr
2 Ts
-20 Tt
-0.2099 Tc
(\)) Tx 
(\r) TX 
TO
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_IllustratorA_AI3 /terminate get exec
Adobe_typography_AI3 /terminate get exec
Adobe_customcolor /terminate get exec
Adobe_cshow /terminate get exec
Adobe_cmykcolor /terminate get exec
Adobe_packedarray /terminate get exec
%%EOF

%%EndDocument
FMENDEPSF
0 0 612 792 C
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "92" 97
%%Page: "93" 98
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(93) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Appendix) 87 718 T
(E) 142 718 T
(Command-Line Options) 87 690.22 T
2 11 Q
0.24 (The ASSIST command line allows the user to specify options.   These options control a number of) 105 670.11 P
(parameters and allow the user more control over how the ASSIST program executes.) 87 657.11 T
(Options must be preceded by a slash under VMS, as in) 105 636.33 T
3 10.5 Q
(/map) 132 615.89 T
2 11 Q
(and they must be preceded by a dash under UNIX, as in) 87 595.28 T
3 10.5 Q
(\320map) 132 574.83 T
2 11 Q
-0.04 (Options may be specified in upper or lowercase.   The normal UNIX case sensitivity does not apply) 105 554.22 P
(to the ASSIST command-line options.) 87 541.22 T
0.95 (Options may also be typed into the input file via) 105 520.44 P
4 F
2.29 (C_OPTION) 329.64 520.44 P
2 F
0.95 ( commands. These commands must) 382.45 520.44 P
(precede all other commands, including any other debug commands.   For example, the statement) 87 507.44 T
4 10 Q
(C_OPTION LEL=10;) 132 487.33 T
2 11 Q
(in the input file is the same as the following command-line options:) 87 467.89 T
2 10.5 Q
(lel=10) 132 447.44 T
2 7 Q
(  or) 132 437.28 T
2 10.5 Q
(\320lel=10) 132 425.94 T
2 11 Q
(The following options are available:) 105 405.33 T
2 12 Q
(\245) 99 384.55 T
3 11 Q
0.91 (\320c) 111 384.55 P
6 F
0.91 (\256) 125.05 384.55 P
2 F
0.91 ( Speci\336es identi\336er case sensitivity) 135.9 384.55 P
0.91 (. Use of) 293.45 384.55 P
3 F
0.91 (\320c) 337.11 384.55 P
2 F
0.91 ( is not recommended since SURE is never) 351.16 384.55 P
0.25 (case  sensitive.  Case-sensitive state-space variables are safe to use because they are never passed) 111 371.55 P
0.52 (to SURE.  Case-sensitive constant names will cause problems because they are passed to SURE.) 111 358.55 P
(The default is not having case-sensitive identi\336er names.) 111 345.55 T
2 12 Q
(\245) 99 326.78 T
3 11 Q
-0.27 (\320pipe) 111 326.78 P
6 F
-0.27 (\256) 139.16 326.78 P
2 F
-0.27 ( This option causes the model output to be written to standard output instead of to a model) 150.01 326.78 P
-0.26 (\336le and is useful if one wishes to pipe the model directly to SURE.   This option is valid only under) 111 313.78 P
-0.24 (UNIX.   An attempt to use it under VMS will cause ASSIST to print an error message.  The default) 111 300.78 P
(is no rerouting of the model \336le to the standard output \336le.) 111 287.78 T
2 12 Q
(\245) 99 269 T
3 11 Q
-0.14 (\320map) 111 269 P
6 F
-0.14 (\256) 139.89 269 P
2 F
-0.14 ( This option causes ASSIST to produce a cross-reference map of all the de\336nitions of and) 150.74 269 P
1.25 (references to identi\336ers and literal values in the program.   The map also tells which) 111 256 P
4 F
3 (ENDFOR) 503.4 256 P
2 F
-0.17 (matches which) 111 243 P
4 F
-0.4 (FOR) 179.1 243 P
2 F
-0.17 ( and which) 198.9 243 P
4 F
-0.4 (ENDIF) 249.42 243 P
2 F
-0.17 ( matches which) 282.42 243 P
4 F
-0.4 (IF) 353.11 243 P
2 F
-0.17 (.   It also indicates to which) 365.43 243 P
4 F
-0.4 (IF) 487.85 243 P
2 F
-0.17 ( an) 501.05 243 P
4 F
-0.4 (ELSE) 516.6 243 P
2 F
0.77 (belong. Although the map is several pages long, it may help the user \336nd misspelled identi\336ers.) 111 230 P
0.1 (Use of the map is recommended during the \336rst few executions of a new input \336le.  The default is) 111 217 P
(no cross-reference map.) 111 204 T
2 12 Q
(\245) 99 185.22 T
3 11 Q
(\320xr) 111 185.22 T
(ef) 126.69 185.22 T
6 F
(\256) 137.98 185.22 T
2 F
(  This option is the same as the) 148.84 185.22 T
3 F
(\320map) 290 185.22 T
2 F
( option.) 319.03 185.22 T
2 12 Q
(\245) 99 166.44 T
3 11 Q
-0.01 (\320loadmap) 111 166.44 P
6 F
-0.01 (\256) 160.19 166.44 P
2 F
-0.01 ( This option is used to request a load map of the internal data structures and memory) 171.05 166.44 P
0.28 (allocation generated during parsing of the input \336le. The load map information is extremely tech-) 111 153.44 P
1.04 (nical.   The option remains in the language for veri\336cation purposes and because it is useful in) 111 140.44 P
0.3 (some rare instances.   Its use is) 111 127.44 P
3 F
0.3 (not) 251.81 127.44 P
2 F
0.3 ( recommended.   Use of) 267.09 127.44 P
3 F
0.3 (\320xr) 379.78 127.44 P
0.3 (ef) 395.47 127.44 P
2 F
0.3 ( is recommended instead.  The) 407.07 127.44 P
(default is not having a load map.) 111 114.44 T
2 12 Q
(\245) 99 95.67 T
3 11 Q
-0.19 (\320ss) 111 95.67 P
6 F
-0.19 (\256) 127.62 95.67 P
2 F
-0.19 ( This option forces ASSIST to print the warning level as part of each warning message.   For) 138.48 95.67 P
-0.17 (example, instead of) 111 82.67 P
4 F
-0.41 ([WARNING]) 199.09 82.67 P
2 F
-0.17 (, the message will read) 258.48 82.67 P
4 F
-0.41 ([WARNING) 360.89 82.67 P
-0.41 (SEVERITY) 416.28 82.67 P
-0.41 (3]) 471.66 82.67 P
2 F
-0.17 (.  The default) 484.86 82.67 P
(is not displaying the warning severity) 111 69.67 T
(.) 275.58 69.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "93" 98
%%Page: "94" 99
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(94) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 12 Q
(\245) 99 718.67 T
3 11 Q
1.59 (\320we3) 111 718.67 P
6 F
1.59 (\256) 139.16 718.67 P
2 F
1.59 ( This option forces ASSIST to display three-letter abbreviations in warning and error) 150.02 718.67 P
1.5 (messages such as) 111 705.67 P
4 F
3.61 ([ERR]) 194.64 705.67 P
2 F
1.5 ( and) 227.64 705.67 P
4 F
3.61 ([WRN]) 252.03 705.67 P
2 F
1.5 (. The default is not abbreviating the words ERROR and) 285.03 705.67 P
(W) 111 692.67 T
(ARNING.) 120.16 692.67 T
2 12 Q
(\245) 99 674.85 T
3 11 Q
-0.25 (\320bat) 111 674.85 P
6 F
-0.25 (\256) 134.28 674.85 P
2 F
-0.25 ( This option causes ASSIST to execute in batch mode.   In batch mode the command line is) 145.13 674.85 P
0.68 (echoed to standard error \050usually the user) 111 661.85 P
0.68 (\325) 297.57 661.85 P
0.68 (s monitor screen\051. The default is not to echo the com-) 300.62 661.85 P
(mand line used to  invoke ASSIST) 111 648.85 T
(.) 262.96 648.85 T
2 12 Q
(\245) 99 631.04 T
3 11 Q
0.36 (\320wid) 111 631.04 P
2 F
0.36 ( =) 133.62 631.04 P
5 F
0.36 (nnn) 142.93 631.04 P
6 F
0.36 (\256) 162.54 631.04 P
2 F
0.36 ( This option speci\336es the maximum line length plus one.  The default is 80 charac-) 173.4 631.04 P
(ters and results in an ef) 111 618.04 T
(fective input line length of 79 characters.) 212.53 618.04 T
2 12 Q
(\245) 99 600.23 T
3 11 Q
-0.01 (\320tab) 111 600.23 P
2 F
-0.01 ( =) 131.78 600.23 P
5 F
-0.01 (nnn) 140.72 600.23 P
6 F
-0.01 (\256) 159.95 600.23 P
2 F
-0.01 ( This option speci\336es how many spaces are equivalent to a tab character) 170.81 600.23 P
-0.01 (. The default) 487.13 600.23 P
(is four spaces per tab.) 111 587.23 T
2 12 Q
(\245) 99 569.42 T
3 11 Q
0.44 (\320nest) 111 569.42 P
2 F
0.44 ( =) 135.44 569.42 P
5 F
0.44 (nnn) 144.83 569.42 P
6 F
0.44 (\256) 164.52 569.42 P
2 F
0.44 ( Speci\336es how deeply a space statement can be recursively nested.   The default is) 175.38 569.42 P
(16 on most systems \0508 on the IBM PC\051.) 111 556.42 T
2 12 Q
(\245) 99 538.6 T
3 11 Q
-0 (\320rule) 111 538.6 P
2 F
-0 ( =) 135.44 538.6 P
5 F
-0 (nnn) 144.39 538.6 P
6 F
-0 (\256) 163.64 538.6 P
2 F
-0 ( Speci\336es the maximum number of rules that can be nested inside a single block) 174.5 538.6 P
4 F
-0 (IF) 529.8 538.6 P
2 F
(or) 111 525.6 T
4 F
(FOR) 122.91 525.6 T
2 F
( construct.   The default is 4096 for most systems \0501024 on the IBM PC\051.) 142.71 525.6 T
2 12 Q
(\245) 99 507.79 T
3 11 Q
0.92 (\320pic) 111 507.79 P
2 F
0.92 ( =) 130.56 507.79 P
5 F
0.92 (nnn) 140.43 507.79 P
6 F
0.92 (\256) 160.6 507.79 P
2 F
0.92 ( Speci\336es the maximum number of nodes that can be on the stack when parsing a) 171.46 507.79 P
-0.25 (state-space picture.   The number of state-space variables may exceed this number only if the state-) 111 494.79 P
(space picture is recursively de\336ned. The default is 100.) 111 481.79 T
2 12 Q
(\245) 99 463.98 T
3 11 Q
0.84 (\320lel) 111 463.98 P
2 F
0.84 ( =) 127.5 463.98 P
5 F
0.84 (nnn) 137.29 463.98 P
6 F
0.84 (\256) 157.38 463.98 P
2 F
0.84 ( Speci\336es the \322line error limit.\323   If the number of errors per line ever exceeds this) 168.24 463.98 P
0.98 (value, then ASSIST will quit processing the input \336le immediately after printing one additional) 111 450.98 P
(and appropriate error message. The default is a maximum of \336ve errors allowed per line.) 111 437.98 T
2 12 Q
(\245) 99 420.17 T
3 11 Q
0.12 (\320lwl) 111 420.17 P
2 F
0.12 ( =) 130.56 420.17 P
5 F
0.12 (nnn) 139.63 420.17 P
6 F
0.12 (\256) 159.01 420.17 P
2 F
0.12 ( Speci\336es the \322line warning limit.\323   If the number of warnings per line ever exceeds) 169.86 420.17 P
-0 (this value, then ASSIST will quit processing  the input \336le immediately after printing an appropri-) 111 407.17 P
(ate error message. The default is a maximum of \336ve warnings allowed per line.) 111 394.17 T
2 12 Q
(\245) 99 376.35 T
3 11 Q
1.42 (\320el) 111 376.35 P
2 F
1.42 ( =) 124.44 376.35 P
5 F
1.42 (nnn) 134.82 376.35 P
6 F
1.42 (\256) 155.49 376.35 P
2 F
1.42 ( Speci\336es the \322error limit.\323   If the cumulative errors ever exceed this value, then) 166.35 376.35 P
0.12 (ASSIST will quit processing the input \336le immediately after printing one additional and appropri-) 111 363.35 P
(ate error message. The default is a maximum of 40 errors allowed per input \336le.) 111 350.35 T
2 12 Q
(\245) 99 332.54 T
3 11 Q
0.56 (\320wl) 111 332.54 P
2 F
0.56 (=) 130.81 332.54 P
5 F
0.56 (nnn) 137.01 332.54 P
6 F
0.56 (\256) 156.82 332.54 P
2 F
0.56 ( Speci\336es the \322warning limit.\323   If the cumulative number of warnings ever exceeds) 167.68 332.54 P
0.19 (this value, then ASSIST will quit processing the input \336le immediately after printing an appropri-) 111 319.54 P
(ate error message. The default is a maximum of 40 warnings allowed per input \336le.) 111 306.54 T
2 12 Q
(\245) 99 288.73 T
3 11 Q
0.21 (\320bc) 111 288.73 P
2 F
0.21 ( =) 127.5 288.73 P
5 F
0.21 (nnn) 136.67 288.73 P
6 F
0.21 (\256) 156.13 288.73 P
2 F
0.21 ( Speci\336es the \322bucket count\323 for the rule generation state-hashing algorithm.   If rule) 166.99 288.73 P
0.15 (generation is taking a long time because of identi\336er hash clashes, this value can be adjusted. The) 111 275.73 P
(default bucket count is 1009.) 111 262.73 T
2 12 Q
(\245) 99 244.92 T
3 11 Q
0.78 (\320bi) 111 244.92 P
2 F
0.78 ( =) 125.67 244.92 P
5 F
0.78 (nnn) 135.41 244.92 P
6 F
0.78 (\256) 155.43 244.92 P
2 F
0.78 ( Speci\336es the \322bucket increment.\323   The bucket increment controls how many addi-) 166.29 244.92 P
(tional state buckets will be allocated at a time when the system runs out of buckets.) 111 231.92 T
2 12 Q
(\245) 99 214.1 T
3 11 Q
0 (\320bw) 111 214.1 P
2 F
0 ( =) 130.56 214.1 P
5 F
0 (nnn) 139.51 214.1 P
6 F
0 (\256) 158.76 214.1 P
2 F
0 ( Speci\336es the \322bucket width\323 \050i.e., the number of states that will \336t in a single link of) 169.62 214.1 P
0.04 (the linked list for each bucket\051  for the rule generation state-hashing algorithm.   If rule generation) 111 201.1 P
1.15 (is taking a long time because of identi\336er hash clashes, this value can be adjusted. The default) 111 188.1 P
(bucket width is 5.) 111 175.1 T
2 12 Q
(\245) 99 157.29 T
3 11 Q
0.64 (\320lp) 111 157.29 P
2 F
0.64 ( =) 125.67 157.29 P
5 F
0.64 (nnn) 135.27 157.29 P
6 F
0.64 (\256) 155.17 157.29 P
2 F
0.64 ( Speci\336es the number of lines per page on the log \336le. The default is 58 lines maxi-) 166.02 157.29 P
(mum per page on the log \336le.) 111 144.29 T
2 12 Q
(\245) 99 126.48 T
3 11 Q
0.68 (\320i) 111 126.48 P
2 F
0.68 ( =) 119.56 126.48 P
5 F
0.68 (nnn) 129.2 126.48 P
6 F
0.68 (\256) 149.13 126.48 P
2 F
0.68 ( Speci\336es the maximum number of identi\336ers that can be held in the  identi\336er table.) 159.99 126.48 P
-0.14 (The default is a maximum of 400 unique identi\336er names in the table for most systems \050200 on the) 111 113.48 P
(IBM PC\051.) 111 100.48 T
2 12 Q
(\245) 99 82.67 T
3 11 Q
-0.07 (\320n) 111 82.67 P
2 F
-0.07 ( =) 122.62 82.67 P
5 F
-0.07 (nnn) 131.5 82.67 P
6 F
-0.07 (\256) 150.68 82.67 P
2 F
-0.07 ( Speci\336es the maximum number of literal values that can be held in the identi\336er table.) 161.54 82.67 P
0.46 (Note that \3226.0\323 and \3226.00\323 are considered as two dif) 111 69.67 P
0.46 (ferent entries in the table so that they can be) 344.92 69.67 P
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "94" 99
%%Page: "95" 100
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(95) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
2 11 Q
0.55 (written to the model \336le the same way they were typed into the input \336le. The default is a maxi-) 111 718.67 P
(mum of 200 unique numerical values in the table for most systems \05050 on the IBM PC\051.) 111 705.67 T
2 12 Q
(\245) 99 688.67 T
3 11 Q
-0.15 (\320o) 111 688.67 P
2 F
-0.15 ( =) 122 688.67 P
5 F
-0.15 (nnn) 130.8 688.67 P
6 F
-0.15 (\256) 149.9 688.67 P
2 F
-0.15 ( Speci\336es the maximum number of operands that can be held in the expression operand) 160.76 688.67 P
-0.12 (list while parsing a single statement. The default is 300 on most systems \05050 on the IBM PC\051.  The) 111 675.67 P
1.04 (maximum number of in\336x/post\336x operations is a function of this number and is always signi\336-) 111 662.67 P
(cantly greater) 111 649.67 T
(.) 170.57 649.67 T
2 12 Q
(\245) 99 632.67 T
3 11 Q
0.19 (\320e) 111 632.67 P
2 F
0.19 ( =) 121.38 632.67 P
5 F
0.19 (nnn) 130.53 632.67 P
6 F
0.19 (\256) 149.98 632.67 P
2 F
0.19 ( Speci\336es the maximum number of expressions that can be held while parsing a single) 160.83 632.67 P
(statement. The default is 300 on most systems \05050 on the IBM PC\051.) 111 619.67 T
2 12 Q
(\245) 99 602.67 T
3 11 Q
1.75 (\320p) 111 602.67 P
2 F
1.75 ( =) 122.62 602.67 P
5 F
1.75 (nnn) 133.32 602.67 P
6 F
1.75 (\256) 154.32 602.67 P
2 F
1.75 ( Speci\336es the maximum number of identi\336ers for a FUNCTION or IMPLICIT or) 165.17 602.67 P
(V) 111 589.67 T
(ARIABLE parameter list. The default is 64 on most systems \05032 on the IBM PC\051.) 117.52 589.67 T
2 12 Q
(\245) 99 572.67 T
3 11 Q
0.08 (\320b) 111 572.67 P
2 F
0.08 ( =) 122.62 572.67 P
5 F
0.08 (nnn) 131.65 572.67 P
6 F
0.08 (\256) 150.97 572.67 P
2 F
0.08 ( Speci\336es the maximum number of tokens in the body per FUNCTION, IMPLICIT) 161.83 572.67 P
0.08 (, or) 528.26 572.67 P
(V) 111 559.67 T
(ARIABLE de\336nition. The default is 1024 on most systems \050256 on the IBM PC\051.) 117.52 559.67 T
2 12 Q
(\245) 99 542.67 T
3 11 Q
-0.02 (\320w) 111 542.67 P
2 F
-0.02 ( =) 124.44 542.67 P
5 F
-0.02 (nnn) 133.37 542.67 P
6 F
-0.02 (\256) 152.6 542.67 P
2 F
-0.02 ( Speci\336es the levels of warnings that will be issued.   The higher the number) 163.46 542.67 P
-0.02 (, the more) 498.75 542.67 P
0.82 (warnings.   Levels available are 0 for no warnings through 99 for all warnings.   There are cur-) 111 529.67 P
1.2 (rently only three levels de\336ned. The default is two levels of warning reporting. The) 111 516.67 P
4 F
2.87 (W=FEWER) 496.8 516.67 P
2 F
-0.09 (form decreases the level to one less level of warnings. The) 111 503.67 P
4 F
-0.22 (W=NONE) 370.26 503.67 P
2 F
-0.09 ( form suppresses all warnings.) 409.86 503.67 P
(The) 111 490.67 T
4 F
(W=ALL) 130.85 490.67 T
2 F
( form enables all warnings.) 163.85 490.67 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "95" 100
%%Page: "96" 101
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 10.5 Q
0 X
0 0 0 1 0 0 0 K
(96) 303.5 46 T
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
3 12 Q
(Refer) 87 718 T
(ences) 115.43 718 T
2 9 Q
(1.) 91.8 699.76 T
2.02 (White, Allan L.:) 102 699.76 P
5 F
2.02 (Upper and Lower Bounds for Semi-Markov Reliability Models of Recon\336gurable Systems.) 169.31 699.76 P
2 F
2.02 ( NASA) 514.23 699.76 P
(CR-) 102 688.76 T
(172340, 1984.) 117 688.76 T
(2.) 91.8 670.52 T
(Butler) 102 670.52 T
(, Ricky W) 124.14 670.52 T
(.; and White, Allan L.:) 160.06 670.52 T
5 F
(SURE Reliability Analysis: Pr) 243.55 670.52 T
(ogram and Mathematics) 351.97 670.52 T
2 F
(. NASA TP-2764, 1988.) 439.96 670.52 T
(3.) 91.8 652.29 T
(Butler) 102 652.29 T
(, R. W) 124.14 652.29 T
(.:) 146.81 652.29 T
5 F
(An Abstract Speci\336cation Language for Markov Reliability Models.) 153.81 652.29 T
2 F
( NASA TM-86423, 1985.) 397.3 652.29 T
(4.) 91.8 634.05 T
1.12 (Butler) 102 634.05 P
1.12 (, Ricky W) 124.14 634.05 P
1.12 (.; and Stevenson, Philip H.:) 162.29 634.05 P
5 F
1.12 (The P) 268.89 634.05 P
1.12 (A) 290.1 634.05 P
1.12 (WS and STEM Reliability Analysis Pr) 295.26 634.05 P
1.12 (ograms.) 436.77 634.05 P
2 F
1.12 ( NASA TM-100572,) 466.02 634.05 P
(1988.) 102 623.05 T
(5.) 91.8 604.81 T
1.46 (Butler) 102 604.81 P
1.46 (, Ricky W) 124.14 604.81 P
1.46 (.; and Johnson, Sally C.:) 162.98 604.81 P
5 F
1.46 (T) 260.28 604.81 P
1.46 (echniques for Modeling the Reliability of Fault-T) 264.45 604.81 P
1.46 (olerant Systems W) 449.88 604.81 P
1.46 (ith the) 518.79 604.81 P
(Markov State-Space Appr) 102 593.81 T
(oach.) 194.65 593.81 T
2 F
( NASA RP-1348, 1995.) 214.39 593.81 T
(6.) 91.8 575.57 T
0.71 (Johnson, Sally C.: Reliability Analysis of Lar) 102 575.57 P
0.71 (ge, Complex Systems Using ASSIST) 270.13 575.57 P
0.71 (. A Collection of T) 406.58 575.57 P
0.71 (echnical Papers\321) 477.05 575.57 P
5 F
(AIAA/IEEE 8th Digital A) 102 564.57 T
(vionics Systems Confer) 192.25 564.57 T
(ence,) 275.41 564.57 T
2 F
( Part 1, Oct. 1988, pp. 227\320234. \050A) 294.15 564.57 T
(vailable as AIAA-88-3898.\051) 420.47 564.57 T
(7.) 91.8 546.34 T
-0.15 (White, Allan L.; and Palumbo, Daniel L.: State Reduction for Semi-Markov Reliability Models.) 102 546.34 P
5 F
-0.15 (Pr) 448.04 546.34 P
-0.15 (oceedings of the Annual) 456.71 546.34 P
(Reliability and Maintainability Symposium) 102 535.33 T
2 F
(, IEEE, 1990, pp. 280\320285.) 256.76 535.33 T
(8.) 91.8 517.1 T
0.9 (Johnson, S. C.; and Butler) 102 517.1 P
0.9 (, R. W) 199.5 517.1 P
0.9 (.: A T) 223.97 517.1 P
0.9 (able-Oriented Interface for Reliability Modeling of Fault-T) 246.39 517.1 P
0.9 (olerant Architectures.) 464.12 517.1 P
5 F
(Pr) 102 506.1 T
(oceedings of the IEEE/AIAA 1) 110.67 506.1 T
(1th Digital A) 218.98 506.1 T
(vionics Systems Confer) 265.49 506.1 T
(ence,) 348.65 506.1 T
2 F
( 1992, pp. 149\320154.) 367.39 506.1 T
(9.) 91.8 487.86 T
-0.08 (Palumbo, D. L.: Using Failure Modes and Ef) 102 487.86 P
-0.08 (fects Simulation as a Means of Reliability Analysis.) 263.26 487.86 P
5 F
-0.08 (Pr) 451.84 487.86 P
-0.08 (oceedings of the IEEE/) 460.51 487.86 P
(AIAA 1) 102 476.86 T
(1th Digital A) 127.58 476.86 T
(vionics Systems Confer) 174.09 476.86 T
(ence,) 257.25 476.86 T
2 F
(1992, pp. 102\320107.) 278.24 476.86 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "96" 101
%%Page: "1" 102
612 792 0 FMBEGINPAGE
[0 0 0 1 0 0 0]
[ 0 1 1 0 1 0 0]
[ 1 0 1 0 0 1 0]
[ 1 1 0 0 0 0 1]
[ 1 0 0 0 0 1 1]
[ 0 1 0 0 1 0 1]
[ 0 0 1 0 1 1 0]
 7 FrameSetSepColors
FrameNoSep
0 0 0 1 0 0 0 K
68 75 542 743.03 R
7 X
0 0 0 1 0 0 0 K
V
1.5 H
2 Z
0 X
N
435.45 722.27 540.01 740.68 R
7 X
V
10 6.5 Q
0 X
(Form Approved) 435.45 733.35 T
(OMB No. 0704-0188) 435.45 723.85 T
69.77 691 539.45 717.11 R
7 X
V
11 5.9 Q
0 X
0.21 (Public reporting burden for this collection of information is estimated to average 1 hour per response, including the time for reviewing instructions, searching existing data sources,) 69.77 713.18 P
0.17 (gathering and maintaining the data needed, and completing and reviewing the collection of information.  Send comments regarding this burden estimate or any other aspect of this) 69.77 706.28 P
0.19 (collection of information, including suggestions for reducing this burden, to W) 69.77 699.38 P
0.19 (ashington Headquarters Services, Directorate for Information Operations and Reports, 1215 Jef) 272.09 699.38 P
0.19 (ferson) 523.06 699.38 P
(Davis Highway) 69.77 692.48 T
(, Suite 1204, Arlington, V) 108.35 692.48 T
(A 22202-4302, and to the Of) 173.17 692.48 T
(\336ce of Management and Budget, Paperwork Reduction Project \0500704-0188\051, W) 247.53 692.48 T
(ashington, DC 20503.) 453.25 692.48 T
70.32 679.06 193.14 685.84 R
7 X
V
12 7 Q
0 X
(1.) 70.32 681.17 T
(AGENCY USE ONL) 79.32 681.17 T
(Y) 141.69 681.17 T
10 F
(\050Leave blank\051) 148.3 681.17 T
197.56 679.06 310.97 685.84 R
7 X
V
12 F
0 X
(2.) 197.56 681.17 T
(REPORT DA) 206.56 681.17 T
(TE) 247.27 681.17 T
315.4 679.06 540.01 685.84 R
7 X
V
0 X
(3.) 315.4 681.17 T
(REPORT TYPE AND DA) 324.4 681.17 T
(TES COVERED) 402.44 681.17 T
70.32 656.37 387.87 662.67 R
7 X
V
0 X
(4.) 70.32 658 T
(TITLE AND SUBTITLE) 79.32 658 T
392.85 654.89 540.01 662.67 R
7 X
V
0 X
(5.) 392.85 658 T
(FUNDING NUMBERS) 401.85 658 T
69.77 612.21 387.32 618.78 R
7 X
V
0 X
(6.) 69.77 614.11 T
(AUTHOR\050S\051) 78.77 614.11 T
70.32 568.27 387.87 574.62 R
7 X
V
0 X
(7.) 70.32 569.95 T
(PERFORMING ORGANIZA) 79.32 569.95 T
(TION NAME\050S\051 AND ADDRESS\050ES\051) 165.53 569.95 T
70.32 500.28 387.87 508.06 R
7 X
V
0 X
(9.) 70.32 503.39 T
(SPONSORING/MONIT) 79.32 503.39 T
(ORING AGENCY NAME\050S\051 AND ADDRESS\050ES\051) 151.15 503.39 T
70.32 432.55 540.01 438.9 R
7 X
V
0 X
(1) 70.32 434.24 T
(1.) 73.83 434.24 T
(SUPPLEMENT) 82.32 434.24 T
(AR) 129.64 434.24 T
(Y NOTES) 139.49 434.24 T
392.85 558.62 540.01 573.62 R
7 X
V
0 X
(8.) 392.85 568.95 T
(PERFORMING ORGANIZA) 401.85 568.95 T
(TION) 488.06 568.95 T
(REPORT NUMBER) 401.85 560.95 T
392.85 493.06 540.01 508.06 R
7 X
V
0 X
(10.) 392.85 503.39 T
(SPONSORING/MONIT) 404.85 503.39 T
(ORING) 476.68 503.39 T
(AGENCY REPORT NUMBER) 404.85 495.39 T
70.32 384.17 387.32 391.95 R
7 X
V
0 X
(12a.) 70.32 387.28 T
(DISTRIBUTION/A) 86.32 387.28 T
(V) 142.58 387.28 T
(AILABILITY ST) 146.73 387.28 T
(A) 195.61 387.28 T
(TEMENT) 200.14 387.28 T
392.85 384.17 540.01 391.95 R
7 X
V
0 X
(12b.) 392.85 387.28 T
(DISTRIBUTION CODE) 408.85 387.28 T
69.77 325.2 539.45 331 R
7 X
V
0 X
(13.) 69.77 326.33 T
(ABSTRACT) 81.77 326.33 T
10 F
(\050Maximum 200 words\051) 122.21 326.33 T
70.32 143.95 428.26 149.11 R
7 X
V
12 F
0 X
(14.) 70.32 144.45 T
(SUBJECT TERMS) 82.32 144.45 T
70.32 91.95 192.59 105.84 R
7 X
V
0 X
(17.) 70.32 101.17 T
(SECURITY CLASSIFICA) 82.32 101.17 T
(TION) 161.14 101.17 T
(OF REPORT) 82.32 93.17 T
197.56 91.95 309.31 105.84 R
7 X
V
0 X
(18.) 197.56 101.17 T
(SECURITY CLASSIFICA) 209.56 101.17 T
(TION) 288.38 101.17 T
(OF THIS P) 209.56 93.17 T
(AGE) 243.28 93.17 T
314.29 91.95 428.26 105.84 R
7 X
V
0 X
(19.) 314.29 101.17 T
(SECURITY CLASSIFICA) 326.29 101.17 T
(TION) 405.11 101.17 T
(OF ABSTRACT) 326.29 93.17 T
433.24 91.95 539.45 105.84 R
7 X
V
0 X
(20.) 433.24 101.17 T
(LIMIT) 445.24 101.17 T
(A) 462.99 101.17 T
(TION) 467.53 101.17 T
(OF ABSTRACT) 445.24 93.17 T
433.24 143.32 539.45 148.4 R
7 X
V
0 X
(15.) 433.24 143.73 T
(NUMBER OF P) 445.24 143.73 T
(AGES) 493.72 143.73 T
433.24 122.15 539.45 128.5 R
7 X
V
0 X
(16.) 433.24 123.84 T
(PRICE CODE) 445.24 123.84 T
68.11 52.5 541.67 72.5 R
7 X
V
0 X
(NSN 7540-01-280-5500) 68.11 67.84 T
(Standard Form 298 \050Rev) 434.11 67.84 T
(. 2-89\051) 514.11 67.84 T
11 6 Q
(Prescribed by ANSI Std. Z39-18) 434.11 60.5 T
(298-102) 434.11 53.5 T
69.22 722.27 390.09 740.86 R
7 X
V
12 10.5 Q
0 X
(REPORT DOCUMENT) 144.48 726.86 T
(A) 251.03 726.86 T
(TION P) 257.84 726.86 T
(AGE) 292.07 726.86 T
68 719.46 542 719.46 2 L
N
68 688.64 542 688.64 2 L
N
68 665.05 542 665.05 2 L
N
68 620.93 389.64 620.93 2 L
N
68 576.42 542 576.42 2 L
N
68 441.32 542 441.32 2 L
N
68 394.62 542 394.62 2 L
N
68 333.38 542 333.38 2 L
N
68 108.55 542 108.55 2 L
N
392.21 743 392.21 719.66 2 L
N
195.54 688.44 195.54 665.05 2 L
N
313.17 688.44 313.17 665.05 2 L
N
390.22 665.05 390.22 441.5 2 L
N
390.22 394.45 390.22 333.37 2 L
N
431.23 150.88 431.23 75.51 2 L
N
432.46 130.37 540.86 130.37 2 L
N
195.08 106.95 195.08 76.02 2 L
N
311.92 106.95 311.92 76.02 2 L
N
68 510.96 542 510.96 2 L
N
68 150.92 542 150.92 2 L
N
0 0 0 1 0 0 0 K
0 0 0 1 0 0 0 K
79.61 668.06 193.14 677.13 R
7 X
V
205.32 668.06 311 677.13 R
V
2 10 Q
0 X
(August 1995) 205.32 670.46 T
322.54 668.06 540.01 677.13 R
7 X
V
0 X
(T) 322.54 670.46 T
(echnical Memorandum) 327.95 670.46 T
79.61 623.24 387.87 654.65 R
7 X
V
0 X
(ASSIST User Manual) 79.61 647.98 T
402.14 579.17 540.01 646.24 R
7 X
V
0 X
(WU 505-64-10-07) 402.14 639.57 T
78.34 578.36 387.32 610.21 R
7 X
V
0 X
(Sally C. Johnson and David P) 78.34 603.54 T
(. Boerschlein) 196.68 603.54 T
402.85 514.33 540.01 550.6 R
7 X
V
0 X
(L-17407) 402.85 543.93 T
404.28 444.49 540.01 483.78 R
7 X
V
0 X
(NASA TM-4592) 404.28 477.11 T
81.75 397.48 540.01 430.33 R
7 X
V
0 X
1.73 (Johnson: Langley Research Center) 81.75 423.66 P
1.73 (, Hampton, V) 225.67 423.66 P
1.73 (A; Boerschlein: Lockheed Engineering & Sciences Company) 282.28 423.66 P
1.73 (,) 537.51 423.66 P
(Hampton, V) 81.75 413.16 T
(A.) 129.9 413.16 T
407.85 336.32 540.01 374.09 R
7 X
V
80.49 153.85 539.45 323.2 R
V
0 X
-0.21 (Semi-Markov models can be used to analyze the reliability of virtually any fault-tolerant system. However) 80.49 316.53 P
-0.21 (, the pro-) 503.49 316.53 P
0.29 (cess of delineating all the states and transitions in a complex system model can be devastatingly tedious and error) 80.49 306.03 P
0.54 (prone. The Abstract Semi-Markov Speci\336cation Interface to the SURE T) 80.49 295.53 P
0.54 (ool \050ASSIST\051 computer program allows) 376.77 295.53 P
-0.04 (the user to describe the semi-Markov model in a high-level language. Instead of listing the individual model states,) 80.49 285.03 P
-0.11 (the user speci\336es the rules governing the behavior of the system, and these are used to generate the model automat-) 80.49 274.53 P
0.62 (ically) 80.49 264.03 P
0.62 (. A few statements in the abstract language can describe a very lar) 102.06 264.03 P
0.62 (ge, complex model. Because no assump-) 373.35 264.03 P
-0.19 (tions are made about the system being modeled, ASSIST can be used to generate models describing the behavior of) 80.49 253.53 P
(any system. The ASSIST program and its input language are described and illustrated by examples.) 80.49 243.03 T
81.04 111.61 428.26 142.78 R
7 X
V
0 X
(Reliability analysis; Fault-tolerant systems) 81.04 136.11 T
443.95 132.14 529.89 140.33 R
7 X
V
0 X
(101) 479.42 133.66 T
443.95 110.65 530.57 119.72 R
7 X
V
0 X
(A06) 478.65 113.05 T
443.24 77.66 539.45 89.41 R
7 X
V
78.18 512.55 387.87 566.55 R
V
0 X
(NASA Langley Research Center) 78.18 549.38 T
(Hampton, V) 78.18 538.88 T
(A 23681-0001) 126.33 538.88 T
78.18 443.86 387.87 498.06 R
7 X
V
0 X
(National Aeronautics and Space Administration) 78.18 480.89 T
(W) 78.18 470.39 T
(ashington, DC 20546-0001) 86.82 470.39 T
86.04 336.32 387.32 374.09 R
7 X
V
0 X
(Unclassi\336ed\320Unlimited) 86.04 367.43 T
(Subject Category 62) 86.04 356.93 T
(A) 86.04 346.43 T
(vailability: NASA CASI \050301\051 621-0390) 92.52 346.43 T
80.32 77.66 192.59 89.41 R
7 X
V
0 X
(Unclassi\336ed) 80.32 82.74 T
207.57 77.66 309.32 89.41 R
7 X
V
0 X
(Unclassi\336ed) 207.57 82.74 T
325.01 77.66 428.26 89.41 R
7 X
V
0 X
(Unclassi\336ed) 325.01 82.74 T
0 0 0 1 0 0 0 K
FMENDPAGE
%%EndPage: "1" 102
%%Trailer
%%BoundingBox: 0 0 612 792
%%PageOrder: Ascend
%%Pages: 102
%%DocumentFonts: Palatino-Roman
%%+ Palatino-Italic
%%+ Times-Roman
%%+ Times-Bold
%%+ Courier
%%+ Times-Italic
%%+ Symbol
%%+ Times-BoldItalic
%%+ Courier-Bold
%%+ ZapfChancery-MediumItalic
%%+ Helvetica-Oblique
%%+ Helvetica
%%+ Helvetica-Bold
%%EOF
